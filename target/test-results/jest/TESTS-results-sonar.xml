<testExecutions version="1">
<file path="src/main/webapp/app/modules/administration/user-management/user-management.reducer.spec.ts">
<testCase name="User management reducer tests Common should return the initial state" duration="6" />
<testCase name="User management reducer tests Requests should not modify the current state" duration="0" />
<testCase name="User management reducer tests Requests should set state to loading" duration="1" />
<testCase name="User management reducer tests Requests should set state to updating" duration="1" />
<testCase name="User management reducer tests Failures should set state to failed and put an error message in errorMessage" duration="1" />
<testCase name="User management reducer tests Success should update state according to a successful fetch users request" duration="0" />
<testCase name="User management reducer tests Success should update state according to a successful fetch user request" duration="0" />
<testCase name="User management reducer tests Success should update state according to a successful fetch role request" duration="0" />
<testCase name="User management reducer tests Success should set state to successful update" duration="1" />
<testCase name="User management reducer tests Success should set state to successful update with an empty user" duration="0" />
<testCase name="User management reducer tests Reset should reset the state" duration="1" />
<testCase name="User management reducer tests Actions dispatches FETCH_USERS_AS_ADMIN_PENDING and FETCH_USERS_AS_ADMIN_FULFILLED actions" duration="2" />
<testCase name="User management reducer tests Actions dispatches FETCH_USERS_AS_ADMIN_PENDING and FETCH_USERS_AS_ADMIN_FULFILLED actions with pagination options" duration="1" />
<testCase name="User management reducer tests Actions dispatches FETCH_USERS_PENDING and FETCH_USERS_FULFILLED actions" duration="1" />
<testCase name="User management reducer tests Actions dispatches FETCH_USERS_PENDING and FETCH_USERS_FULFILLED actions with pagination options" duration="0" />
<testCase name="User management reducer tests Actions dispatches FETCH_ROLES_PENDING and FETCH_ROLES_FULFILLED actions" duration="1" />
<testCase name="User management reducer tests Actions dispatches FETCH_USER_PENDING and FETCH_USER_FULFILLED actions" duration="1" />
<testCase name="User management reducer tests Actions dispatches CREATE_USER_PENDING and CREATE_USER_FULFILLED actions" duration="3" />
<testCase name="User management reducer tests Actions dispatches UPDATE_USER_PENDING and UPDATE_USER_FULFILLED actions" duration="1" />
<testCase name="User management reducer tests Actions dispatches DELETE_USER_PENDING and DELETE_USER_FULFILLED actions" duration="1" />
<testCase name="User management reducer tests Actions dispatches RESET actions" duration="0" />
</file>
<file path="src/main/webapp/app/modules/administration/administration.reducer.spec.ts">
<testCase name="Administration reducer tests Common should return the initial state" duration="0" />
<testCase name="Administration reducer tests Requests should set state to loading" duration="1" />
<testCase name="Administration reducer tests Failures should set state to failed and put an error message in errorMessage" duration="0" />
<testCase name="Administration reducer tests Success should update state according to a successful fetch logs request" duration="1" />
<testCase name="Administration reducer tests Success should update state according to a successful fetch health request" duration="0" />
<testCase name="Administration reducer tests Success should update state according to a successful fetch metrics request" duration="0" />
<testCase name="Administration reducer tests Success should update state according to a successful fetch thread dump request" duration="0" />
<testCase name="Administration reducer tests Success should update state according to a successful fetch configurations request" duration="0" />
<testCase name="Administration reducer tests Success should update state according to a successful fetch env request" duration="0" />
<testCase name="Administration reducer tests Actions dispatches FETCH_HEALTH_PENDING and FETCH_HEALTH_FULFILLED actions" duration="1" />
<testCase name="Administration reducer tests Actions dispatches FETCH_METRICS_PENDING and FETCH_METRICS_FULFILLED actions" duration="1" />
<testCase name="Administration reducer tests Actions dispatches FETCH_THREAD_DUMP_PENDING and FETCH_THREAD_DUMP_FULFILLED actions" duration="0" />
<testCase name="Administration reducer tests Actions dispatches FETCH_LOGS_PENDING and FETCH_LOGS_FULFILLED actions" duration="1" />
<testCase name="Administration reducer tests Actions dispatches FETCH_LOGS_CHANGE_LEVEL_PENDING and FETCH_LOGS_CHANGE_LEVEL_FULFILLED actions" duration="0" />
<testCase name="Administration reducer tests Actions dispatches FETCH_CONFIGURATIONS_PENDING and FETCH_CONFIGURATIONS_FULFILLED actions" duration="1" />
<testCase name="Administration reducer tests Actions dispatches FETCH_ENV_PENDING and FETCH_ENV_FULFILLED actions" duration="0" />
</file>
<file path="src/main/webapp/app/entities/produit-jour/produit-jour-reducer.spec.ts">
<testCase name="Entities reducer tests Common should return the initial state" duration="1" />
<testCase name="Entities reducer tests Requests should set state to loading" duration="0" />
<testCase name="Entities reducer tests Requests should set state to updating" duration="4" />
<testCase name="Entities reducer tests Requests should reset the state" duration="0" />
<testCase name="Entities reducer tests Failures should set a message in errorMessage" duration="1" />
<testCase name="Entities reducer tests Successes should fetch all entities" duration="0" />
<testCase name="Entities reducer tests Successes should fetch a single entity" duration="0" />
<testCase name="Entities reducer tests Successes should create/update entity" duration="0" />
<testCase name="Entities reducer tests Successes should delete entity" duration="0" />
<testCase name="Entities reducer tests Actions dispatches FETCH_PRODUITJOUR_LIST actions" duration="1" />
<testCase name="Entities reducer tests Actions dispatches FETCH_PRODUITJOUR actions" duration="1" />
<testCase name="Entities reducer tests Actions dispatches CREATE_PRODUITJOUR actions" duration="1" />
<testCase name="Entities reducer tests Actions dispatches UPDATE_PRODUITJOUR actions" duration="1" />
<testCase name="Entities reducer tests Actions dispatches PARTIAL_UPDATE_PRODUITJOUR actions" duration="0" />
<testCase name="Entities reducer tests Actions dispatches DELETE_PRODUITJOUR actions" duration="1" />
<testCase name="Entities reducer tests Actions dispatches RESET actions" duration="1" />
</file>
<file path="src/main/webapp/app/entities/produit/produit-reducer.spec.ts">
<testCase name="Entities reducer tests Common should return the initial state" duration="1" />
<testCase name="Entities reducer tests Requests should set state to loading" duration="0" />
<testCase name="Entities reducer tests Requests should set state to updating" duration="0" />
<testCase name="Entities reducer tests Requests should reset the state" duration="1" />
<testCase name="Entities reducer tests Failures should set a message in errorMessage" duration="0" />
<testCase name="Entities reducer tests Successes should fetch all entities" duration="0" />
<testCase name="Entities reducer tests Successes should fetch a single entity" duration="0" />
<testCase name="Entities reducer tests Successes should create/update entity" duration="0" />
<testCase name="Entities reducer tests Successes should delete entity" duration="1" />
<testCase name="Entities reducer tests Actions dispatches FETCH_PRODUIT_LIST actions" duration="1" />
<testCase name="Entities reducer tests Actions dispatches FETCH_PRODUIT actions" duration="0" />
<testCase name="Entities reducer tests Actions dispatches CREATE_PRODUIT actions" duration="0" />
<testCase name="Entities reducer tests Actions dispatches UPDATE_PRODUIT actions" duration="1" />
<testCase name="Entities reducer tests Actions dispatches PARTIAL_UPDATE_PRODUIT actions" duration="1" />
<testCase name="Entities reducer tests Actions dispatches DELETE_PRODUIT actions" duration="0" />
<testCase name="Entities reducer tests Actions dispatches RESET actions" duration="1" />
</file>
<file path="src/main/webapp/app/config/notification-middleware.spec.ts">
<testCase name="Notification Middleware should not trigger a toast message but should return action" duration="1" />
<testCase name="Notification Middleware should trigger a success toast message for header alerts" duration="1" />
<testCase name="Notification Middleware should trigger an error toast message and return error" duration="0" />
<testCase name="Notification Middleware should trigger an error toast message and return error for generic message" duration="0" />
<testCase name="Notification Middleware should trigger an error toast message and return error for 400 response code" duration="1" />
<testCase name="Notification Middleware should trigger an error toast message and return error for 404 response code" duration="0" />
<testCase name="Notification Middleware should trigger an error toast message and return error for 0 response code" duration="1" />
<testCase name="Notification Middleware should trigger an error toast message and return error for headers containing errors" duration="0" />
<testCase name="Notification Middleware should not trigger an error toast message and return error for 401 response code" duration="0" />
<testCase name="Notification Middleware should trigger an error toast message and return error for 400 response code" duration="0" />
<testCase name="Notification Middleware should trigger an error toast message and return error for string in data" duration="1" />
<testCase name="Notification Middleware should trigger an error toast message and return error for unknown 400 error" duration="0" />
<testCase name="Notification Middleware should trigger an error toast message and return error for unknown error" duration="1" />
</file>
<file path="src/main/webapp/app/shared/reducers/authentication.spec.ts">
<testCase name="Authentication reducer tests Common tests should return the initial state" duration="3" />
<testCase name="Authentication reducer tests Requests should detect a request" duration="0" />
<testCase name="Authentication reducer tests Success should detect a success on login" duration="1" />
<testCase name="Authentication reducer tests Success should detect a success on get session and be authenticated" duration="1" />
<testCase name="Authentication reducer tests Success should detect a success on get session and not be authenticated" duration="0" />
<testCase name="Authentication reducer tests Failure should detect a failure on login" duration="1" />
<testCase name="Authentication reducer tests Failure should detect a failure" duration="0" />
<testCase name="Authentication reducer tests Other cases should properly reset the current state when a logout is requested" duration="1" />
<testCase name="Authentication reducer tests Other cases should properly define an error message and change the current state to display the login modal" duration="0" />
<testCase name="Authentication reducer tests Other cases should clear authentication" duration="1" />
<testCase name="Authentication reducer tests Actions dispatches GET_SESSION_PENDING and GET_SESSION_FULFILLED actions" duration="2" />
<testCase name="Authentication reducer tests Actions dispatches LOGOUT actions" duration="1" />
<testCase name="Authentication reducer tests Actions dispatches CLEAR_AUTH actions" duration="1" />
<testCase name="Authentication reducer tests Actions dispatches LOGIN, GET_SESSION and SET_LOCALE success and request actions" duration="1" />
<testCase name="Authentication reducer tests clearAuthToken clears the session token on clearAuthToken" duration="1" />
<testCase name="Authentication reducer tests clearAuthToken clears the local storage token on clearAuthToken" duration="1" />
</file>
<file path="src/main/webapp/app/shared/layout/header/header.spec.tsx">
<testCase name="Header Renders a Header component in dev profile with LoadingBar, Navbar, Nav and dev ribbon." duration="52" />
<testCase name="Header Renders a Header component in prod profile with LoadingBar, Navbar, Nav." duration="9" />
<testCase name="Header Renders a Header component in prod profile with logged in User" duration="5" />
<testCase name="Header Renders a Header component in prod profile with no logged in User" duration="4" />
</file>
<file path="src/main/webapp/app/shared/auth/private-route.spec.tsx">
<testCase name="private-route component Should throw error when falsy children are provided" duration="287" />
<testCase name="private-route component Should render an error message when the user has no authorities" duration="4" />
<testCase name="private-route component Should render a route for the component provided when authenticated" duration="1" />
<testCase name="private-route component Should redirect when not authenticated" duration="4" />
<testCase name="hasAnyAuthority Should return false when authorities is invalid" duration="1" />
<testCase name="hasAnyAuthority Should return true when authorities is valid and hasAnyAuthorities is empty" duration="0" />
<testCase name="hasAnyAuthority Should return true when authorities is valid and hasAnyAuthorities contains an authority" duration="0" />
<testCase name="hasAnyAuthority Should return false when authorities is valid and hasAnyAuthorities does not contain an authority" duration="0" />
</file>
<file path="src/main/webapp/app/modules/account/password/password.reducer.spec.ts">
<testCase name="Password reducer tests Common tests should return the initial state" duration="1" />
<testCase name="Password reducer tests Password update should detect a request" duration="0" />
<testCase name="Password reducer tests Password update should detect a success" duration="0" />
<testCase name="Password reducer tests Password update should detect a failure" duration="0" />
<testCase name="Password reducer tests Password update should reset the state" duration="0" />
<testCase name="Password reducer tests Actions dispatches UPDATE_PASSWORD_PENDING and UPDATE_PASSWORD_FULFILLED actions" duration="6" />
<testCase name="Password reducer tests Actions dispatches RESET actions" duration="1" />
</file>
<file path="src/main/webapp/app/modules/account/settings/settings.reducer.spec.ts">
<testCase name="Settings reducer tests Common tests should return the initial state" duration="1" />
<testCase name="Settings reducer tests Settings update should detect a request" duration="0" />
<testCase name="Settings reducer tests Settings update should detect a success" duration="0" />
<testCase name="Settings reducer tests Settings update should detect a failure" duration="1" />
<testCase name="Settings reducer tests Settings update should reset the state" duration="0" />
<testCase name="Settings reducer tests Actions dispatches UPDATE_ACCOUNT_PENDING and UPDATE_ACCOUNT_FULFILLED actions" duration="8" />
<testCase name="Settings reducer tests Actions dispatches RESET actions" duration="0" />
</file>
<file path="src/main/webapp/app/modules/account/register/register.reducer.spec.ts">
<testCase name="Creating account tests should return the initial state" duration="1" />
<testCase name="Creating account tests should detect a request" duration="0" />
<testCase name="Creating account tests should handle RESET" duration="0" />
<testCase name="Creating account tests should handle CREATE_ACCOUNT success" duration="0" />
<testCase name="Creating account tests should handle CREATE_ACCOUNT failure" duration="0" />
<testCase name="Creating account tests Actions dispatches CREATE_ACCOUNT_PENDING and CREATE_ACCOUNT_FULFILLED actions" duration="1" />
<testCase name="Creating account tests Actions dispatches RESET actions" duration="0" />
</file>
<file path="src/main/webapp/app/modules/account/activate/activate.reducer.spec.ts">
<testCase name="Activate reducer tests should return the initial state" duration="0" />
<testCase name="Activate reducer tests should reset" duration="0" />
<testCase name="Activate reducer tests should detect a success" duration="0" />
<testCase name="Activate reducer tests should return the same state on request" duration="1" />
<testCase name="Activate reducer tests should detect a failure" duration="0" />
<testCase name="Activate reducer tests should reset the state" duration="0" />
<testCase name="Activate reducer tests Actions dispatches ACTIVATE_ACCOUNT_PENDING and ACTIVATE_ACCOUNT_FULFILLED actions" duration="1" />
<testCase name="Activate reducer tests Actions dispatches RESET actions" duration="0" />
</file>
<file path="src/main/webapp/app/shared/reducers/application-profile.spec.ts">
<testCase name="Profile reducer tests Common tests should return the initial state" duration="1" />
<testCase name="Profile reducer tests Common tests should return the right payload in prod" duration="0" />
<testCase name="Profile reducer tests Common tests should return the right payload in dev with OpenAPI enabled" duration="0" />
<testCase name="Profile reducer tests Actions dispatches GET_SESSION_PENDING and GET_SESSION_FULFILLED actions" duration="1" />
</file>
<file path="src/main/webapp/app/shared/util/entity-utils.spec.ts">
<testCase name="Entity utils cleanEntity should not remove fields with an id" duration="0" />
<testCase name="Entity utils cleanEntity should remove fields with an empty id" duration="0" />
<testCase name="Entity utils cleanEntity should not remove fields that are not objects" duration="0" />
<testCase name="Entity utils mapIdList should map ids no matter the element&apos;s type" duration="0" />
<testCase name="Entity utils mapIdList should return an empty array" duration="0" />
</file>
<file path="src/main/webapp/app/shared/layout/menus/account.spec.tsx">
<testCase name="AccountMenu Renders a authenticated AccountMenu component" duration="30" />
<testCase name="AccountMenu Renders a guest AccountMenu component" duration="3" />
</file>
<file path="src/main/webapp/app/shared/error/error-boundary-routes.spec.tsx">
<testCase name="error-boundary-routes component Should render fallback component when an uncaught error is thrown in route" duration="279" />
<testCase name="error-boundary-routes component Should not render fallback component when route with uncaught error is not matched" duration="1" />
<testCase name="error-boundary-routes component Should not render fallback component when no uncaught error is thrown" duration="1" />
</file>
<file path="src/main/webapp/app/config/axios-interceptor.spec.ts">
<testCase name="Axios Interceptor setupAxiosInterceptors onRequestSuccess is called on fulfilled request" duration="1" />
<testCase name="Axios Interceptor setupAxiosInterceptors onResponseSuccess is called on fulfilled response" duration="8" />
<testCase name="Axios Interceptor setupAxiosInterceptors onResponseError is called on rejected response" duration="1" />
</file>
<file path="src/main/webapp/app/shared/error/error-boundary.spec.tsx">
<testCase name="error component Should throw an error when component is not enclosed in Error Boundary" duration="138" />
<testCase name="error component Should call Error Boundary componentDidCatch method" duration="2" />
</file>
</testExecutions>