{"version":3,"names":["cov_2esj5wuu95","actualCoverage","s","toolkit_1","require","axios_1","isRejectedAction","action","f","type","endsWith","exports","isPendingAction","isFulfilledAction","commonErrorProperties","serializeAxiosError","value","b","isAxiosError","simpleError","property","message","String","createEntitySlice","name","initialState","reducers","extraReducers","skipRejectionHandling","createSlice","Object","assign","reset","builder","addMatcher","state","loading","updating","updateSuccess","errorMessage"],"sources":["/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/shared/reducers/reducer.utils.ts"],"sourcesContent":["import {\n  UnknownAction,\n  AsyncThunk,\n  ActionReducerMapBuilder,\n  createSlice,\n  SerializedError,\n  SliceCaseReducers,\n  ValidateSliceCaseReducers,\n} from '@reduxjs/toolkit';\nimport { AxiosError, isAxiosError } from 'axios';\n\n/**\n * Model for redux actions with pagination\n */\nexport type IQueryParams = { query?: string; page?: number; size?: number; sort?: string };\n\n/**\n * Useful types for working with actions\n */\ntype GenericAsyncThunk = AsyncThunk<unknown, unknown, any>;\nexport type PendingAction = ReturnType<GenericAsyncThunk['pending']>;\nexport type RejectedAction = ReturnType<GenericAsyncThunk['rejected']>;\nexport type FulfilledAction = ReturnType<GenericAsyncThunk['fulfilled']>;\n\n/**\n * Check if the async action type is rejected\n */\nexport function isRejectedAction(action: UnknownAction) {\n  return action.type.endsWith('/rejected');\n}\n\n/**\n * Check if the async action type is pending\n */\nexport function isPendingAction(action: UnknownAction) {\n  return action.type.endsWith('/pending');\n}\n\n/**\n * Check if the async action type is completed\n */\nexport function isFulfilledAction(action: UnknownAction) {\n  return action.type.endsWith('/fulfilled');\n}\n\nconst commonErrorProperties: Array<keyof SerializedError> = ['name', 'message', 'stack', 'code'];\n\n/**\n * serialize function used for async action errors,\n * since the default function from Redux Toolkit strips useful info from axios errors\n */\nexport const serializeAxiosError = (value: any): AxiosError | SerializedError => {\n  if (typeof value === 'object' && value !== null) {\n    if (isAxiosError(value)) {\n      return value;\n    } else {\n      const simpleError: SerializedError = {};\n      for (const property of commonErrorProperties) {\n        if (typeof value[property] === 'string') {\n          simpleError[property] = value[property];\n        }\n      }\n\n      return simpleError;\n    }\n  }\n  return { message: String(value) };\n};\n\nexport interface EntityState<T> {\n  loading: boolean;\n  errorMessage: string | null;\n  entities: ReadonlyArray<T>;\n  entity: T;\n  links?: any;\n  updating: boolean;\n  totalItems?: number;\n  updateSuccess: boolean;\n}\n\n/**\n * A wrapper on top of createSlice from Redux Toolkit to extract\n * common reducers and matchers used by entities\n */\nexport const createEntitySlice = <T, Reducers extends SliceCaseReducers<EntityState<T>>>({\n  name = '',\n  initialState,\n  reducers,\n  extraReducers,\n  skipRejectionHandling,\n}: {\n  name: string;\n  initialState: EntityState<T>;\n  reducers?: ValidateSliceCaseReducers<EntityState<T>, Reducers>;\n  extraReducers?: (builder: ActionReducerMapBuilder<EntityState<T>>) => void;\n  skipRejectionHandling?: boolean;\n}) => {\n  return createSlice({\n    name,\n    initialState,\n    reducers: {\n      /**\n       * Reset the entity state to initial state\n       */\n      reset() {\n        return initialState;\n      },\n      ...reducers,\n    },\n    extraReducers(builder) {\n      extraReducers(builder);\n      /*\n       * Common rejection logic is handled here.\n       * If you want to add your own rejection logic, pass `skipRejectionHandling: true`\n       * while calling `createEntitySlice`\n       * */\n      if (!skipRejectionHandling) {\n        builder.addMatcher(isRejectedAction, (state, action) => {\n          state.loading = false;\n          state.updating = false;\n          state.updateSuccess = false;\n          state.errorMessage = null;\n        });\n      }\n    },\n  });\n};\n"],"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","ignoreList":[]}