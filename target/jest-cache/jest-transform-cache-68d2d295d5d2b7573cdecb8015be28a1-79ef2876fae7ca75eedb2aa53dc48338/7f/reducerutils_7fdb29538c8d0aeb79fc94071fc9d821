feac0c98c6410b902e750fca89444b50
"use strict";

/* istanbul ignore next */
function cov_2esj5wuu95() {
  var path = "/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/shared/reducers/reducer.utils.ts";
  var hash = "af35e881805fdff896539d417224662bfbbc286d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/shared/reducers/reducer.utils.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 146
        }
      },
      "2": {
        start: {
          line: 4,
          column: 18
        },
        end: {
          line: 4,
          column: 45
        }
      },
      "3": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 5,
          column: 32
        }
      },
      "4": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 45
        }
      },
      "5": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 44
        }
      },
      "6": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 44
        }
      },
      "7": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "8": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 46
        }
      },
      "9": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 46
        }
      },
      "10": {
        start: {
          line: 27,
          column: 30
        },
        end: {
          line: 27,
          column: 66
        }
      },
      "11": {
        start: {
          line: 32,
          column: 28
        },
        end: {
          line: 48,
          column: 1
        }
      },
      "12": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "13": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "14": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 25
        }
      },
      "15": {
        start: {
          line: 38,
          column: 32
        },
        end: {
          line: 38,
          column: 34
        }
      },
      "16": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 43,
          column: 13
        }
      },
      "17": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 42,
          column: 17
        }
      },
      "18": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 41,
          column: 60
        }
      },
      "19": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 31
        }
      },
      "20": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 38
        }
      },
      "21": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 49,
          column: 50
        }
      },
      "22": {
        start: {
          line: 54,
          column: 26
        },
        end: {
          line: 82,
          column: 1
        }
      },
      "23": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 81,
          column: 7
        }
      },
      "24": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 36
        }
      },
      "25": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 35
        }
      },
      "26": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "27": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 78,
          column: 19
        }
      },
      "28": {
        start: {
          line: 74,
          column: 20
        },
        end: {
          line: 74,
          column: 42
        }
      },
      "29": {
        start: {
          line: 75,
          column: 20
        },
        end: {
          line: 75,
          column: 43
        }
      },
      "30": {
        start: {
          line: 76,
          column: 20
        },
        end: {
          line: 76,
          column: 48
        }
      },
      "31": {
        start: {
          line: 77,
          column: 20
        },
        end: {
          line: 77,
          column: 46
        }
      },
      "32": {
        start: {
          line: 83,
          column: 0
        },
        end: {
          line: 83,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "isRejectedAction",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 25
          }
        },
        loc: {
          start: {
            line: 9,
            column: 34
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "isPendingAction",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 24
          }
        },
        loc: {
          start: {
            line: 16,
            column: 33
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "isFulfilledAction",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 26
          }
        },
        loc: {
          start: {
            line: 23,
            column: 35
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 32,
            column: 28
          },
          end: {
            line: 32,
            column: 29
          }
        },
        loc: {
          start: {
            line: 32,
            column: 39
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 32
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 54,
            column: 26
          },
          end: {
            line: 54,
            column: 27
          }
        },
        loc: {
          start: {
            line: 54,
            column: 108
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 54
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        },
        loc: {
          start: {
            line: 62,
            column: 20
          },
          end: {
            line: 64,
            column: 13
          }
        },
        line: 62
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        loc: {
          start: {
            line: 65,
            column: 31
          },
          end: {
            line: 80,
            column: 9
          }
        },
        line: 65
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 73,
            column: 53
          },
          end: {
            line: 73,
            column: 54
          }
        },
        loc: {
          start: {
            line: 73,
            column: 72
          },
          end: {
            line: 78,
            column: 17
          }
        },
        line: 73
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 33
          }
        }, {
          start: {
            line: 33,
            column: 37
          },
          end: {
            line: 33,
            column: 51
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: 37,
            column: 13
          },
          end: {
            line: 45,
            column: 9
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 42,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 42,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 54,
            column: 29
          },
          end: {
            line: 54,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 54,
            column: 36
          },
          end: {
            line: 54,
            column: 38
          }
        }],
        line: 54
      },
      "5": {
        loc: {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/shared/reducers/reducer.utils.ts",
      mappings: ";;;AAAA,8CAQ0B;AAC1B,iCAAiD;AAejD;;GAEG;AACH,SAAgB,gBAAgB,CAAC,MAAqB;IACpD,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;AAC3C,CAAC;AAFD,4CAEC;AAED;;GAEG;AACH,SAAgB,eAAe,CAAC,MAAqB;IACnD,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AAC1C,CAAC;AAFD,0CAEC;AAED;;GAEG;AACH,SAAgB,iBAAiB,CAAC,MAAqB;IACrD,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AAC5C,CAAC;AAFD,8CAEC;AAED,MAAM,qBAAqB,GAAiC,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAEjG;;;GAGG;AACI,MAAM,mBAAmB,GAAG,CAAC,KAAU,EAAgC,EAAE;IAC9E,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;QAChD,IAAI,IAAA,oBAAY,EAAC,KAAK,CAAC,EAAE,CAAC;YACxB,OAAO,KAAK,CAAC;QACf,CAAC;aAAM,CAAC;YACN,MAAM,WAAW,GAAoB,EAAE,CAAC;YACxC,KAAK,MAAM,QAAQ,IAAI,qBAAqB,EAAE,CAAC;gBAC7C,IAAI,OAAO,KAAK,CAAC,QAAQ,CAAC,KAAK,QAAQ,EAAE,CAAC;oBACxC,WAAW,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAC1C,CAAC;YACH,CAAC;YAED,OAAO,WAAW,CAAC;QACrB,CAAC;IACH,CAAC;IACD,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;AACpC,CAAC,CAAC;AAhBW,QAAA,mBAAmB,uBAgB9B;AAaF;;;GAGG;AACI,MAAM,iBAAiB,GAAG,CAAwD,EACvF,IAAI,GAAG,EAAE,EACT,YAAY,EACZ,QAAQ,EACR,aAAa,EACb,qBAAqB,GAOtB,EAAE,EAAE;IACH,OAAO,IAAA,qBAAW,EAAC;QACjB,IAAI;QACJ,YAAY;QACZ,QAAQ;YACN;;eAEG;YACH,KAAK;gBACH,OAAO,YAAY,CAAC;YACtB,CAAC,IACE,QAAQ,CACZ;QACD,aAAa,CAAC,OAAO;YACnB,aAAa,CAAC,OAAO,CAAC,CAAC;YACvB;;;;iBAIK;YACL,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC3B,OAAO,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;oBACrD,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;oBACtB,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACvB,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC;oBAC5B,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC;gBAC5B,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC;KACF,CAAC,CAAC;AACL,CAAC,CAAC;AA1CW,QAAA,iBAAiB,qBA0C5B",
      names: [],
      sources: ["/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/shared/reducers/reducer.utils.ts"],
      sourcesContent: ["import {\n  UnknownAction,\n  AsyncThunk,\n  ActionReducerMapBuilder,\n  createSlice,\n  SerializedError,\n  SliceCaseReducers,\n  ValidateSliceCaseReducers,\n} from '@reduxjs/toolkit';\nimport { AxiosError, isAxiosError } from 'axios';\n\n/**\n * Model for redux actions with pagination\n */\nexport type IQueryParams = { query?: string; page?: number; size?: number; sort?: string };\n\n/**\n * Useful types for working with actions\n */\ntype GenericAsyncThunk = AsyncThunk<unknown, unknown, any>;\nexport type PendingAction = ReturnType<GenericAsyncThunk['pending']>;\nexport type RejectedAction = ReturnType<GenericAsyncThunk['rejected']>;\nexport type FulfilledAction = ReturnType<GenericAsyncThunk['fulfilled']>;\n\n/**\n * Check if the async action type is rejected\n */\nexport function isRejectedAction(action: UnknownAction) {\n  return action.type.endsWith('/rejected');\n}\n\n/**\n * Check if the async action type is pending\n */\nexport function isPendingAction(action: UnknownAction) {\n  return action.type.endsWith('/pending');\n}\n\n/**\n * Check if the async action type is completed\n */\nexport function isFulfilledAction(action: UnknownAction) {\n  return action.type.endsWith('/fulfilled');\n}\n\nconst commonErrorProperties: Array<keyof SerializedError> = ['name', 'message', 'stack', 'code'];\n\n/**\n * serialize function used for async action errors,\n * since the default function from Redux Toolkit strips useful info from axios errors\n */\nexport const serializeAxiosError = (value: any): AxiosError | SerializedError => {\n  if (typeof value === 'object' && value !== null) {\n    if (isAxiosError(value)) {\n      return value;\n    } else {\n      const simpleError: SerializedError = {};\n      for (const property of commonErrorProperties) {\n        if (typeof value[property] === 'string') {\n          simpleError[property] = value[property];\n        }\n      }\n\n      return simpleError;\n    }\n  }\n  return { message: String(value) };\n};\n\nexport interface EntityState<T> {\n  loading: boolean;\n  errorMessage: string | null;\n  entities: ReadonlyArray<T>;\n  entity: T;\n  links?: any;\n  updating: boolean;\n  totalItems?: number;\n  updateSuccess: boolean;\n}\n\n/**\n * A wrapper on top of createSlice from Redux Toolkit to extract\n * common reducers and matchers used by entities\n */\nexport const createEntitySlice = <T, Reducers extends SliceCaseReducers<EntityState<T>>>({\n  name = '',\n  initialState,\n  reducers,\n  extraReducers,\n  skipRejectionHandling,\n}: {\n  name: string;\n  initialState: EntityState<T>;\n  reducers?: ValidateSliceCaseReducers<EntityState<T>, Reducers>;\n  extraReducers?: (builder: ActionReducerMapBuilder<EntityState<T>>) => void;\n  skipRejectionHandling?: boolean;\n}) => {\n  return createSlice({\n    name,\n    initialState,\n    reducers: {\n      /**\n       * Reset the entity state to initial state\n       */\n      reset() {\n        return initialState;\n      },\n      ...reducers,\n    },\n    extraReducers(builder) {\n      extraReducers(builder);\n      /*\n       * Common rejection logic is handled here.\n       * If you want to add your own rejection logic, pass `skipRejectionHandling: true`\n       * while calling `createEntitySlice`\n       * */\n      if (!skipRejectionHandling) {\n        builder.addMatcher(isRejectedAction, (state, action) => {\n          state.loading = false;\n          state.updating = false;\n          state.updateSuccess = false;\n          state.errorMessage = null;\n        });\n      }\n    },\n  });\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "af35e881805fdff896539d417224662bfbbc286d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2esj5wuu95 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2esj5wuu95();
cov_2esj5wuu95().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2esj5wuu95().s[1]++;
exports.createEntitySlice = exports.serializeAxiosError = exports.isFulfilledAction = exports.isPendingAction = exports.isRejectedAction = void 0;
const toolkit_1 =
/* istanbul ignore next */
(cov_2esj5wuu95().s[2]++, require("@reduxjs/toolkit"));
const axios_1 =
/* istanbul ignore next */
(cov_2esj5wuu95().s[3]++, require("axios"));
/**
 * Check if the async action type is rejected
 */
function isRejectedAction(action) {
  /* istanbul ignore next */
  cov_2esj5wuu95().f[0]++;
  cov_2esj5wuu95().s[4]++;
  return action.type.endsWith('/rejected');
}
/* istanbul ignore next */
cov_2esj5wuu95().s[5]++;
exports.isRejectedAction = isRejectedAction;
/**
 * Check if the async action type is pending
 */
function isPendingAction(action) {
  /* istanbul ignore next */
  cov_2esj5wuu95().f[1]++;
  cov_2esj5wuu95().s[6]++;
  return action.type.endsWith('/pending');
}
/* istanbul ignore next */
cov_2esj5wuu95().s[7]++;
exports.isPendingAction = isPendingAction;
/**
 * Check if the async action type is completed
 */
function isFulfilledAction(action) {
  /* istanbul ignore next */
  cov_2esj5wuu95().f[2]++;
  cov_2esj5wuu95().s[8]++;
  return action.type.endsWith('/fulfilled');
}
/* istanbul ignore next */
cov_2esj5wuu95().s[9]++;
exports.isFulfilledAction = isFulfilledAction;
const commonErrorProperties =
/* istanbul ignore next */
(cov_2esj5wuu95().s[10]++, ['name', 'message', 'stack', 'code']);
/**
 * serialize function used for async action errors,
 * since the default function from Redux Toolkit strips useful info from axios errors
 */
/* istanbul ignore next */
cov_2esj5wuu95().s[11]++;
const serializeAxiosError = value => {
  /* istanbul ignore next */
  cov_2esj5wuu95().f[3]++;
  cov_2esj5wuu95().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_2esj5wuu95().b[1][0]++, typeof value === 'object') &&
  /* istanbul ignore next */
  (cov_2esj5wuu95().b[1][1]++, value !== null)) {
    /* istanbul ignore next */
    cov_2esj5wuu95().b[0][0]++;
    cov_2esj5wuu95().s[13]++;
    if ((0, axios_1.isAxiosError)(value)) {
      /* istanbul ignore next */
      cov_2esj5wuu95().b[2][0]++;
      cov_2esj5wuu95().s[14]++;
      return value;
    } else {
      /* istanbul ignore next */
      cov_2esj5wuu95().b[2][1]++;
      const simpleError =
      /* istanbul ignore next */
      (cov_2esj5wuu95().s[15]++, {});
      /* istanbul ignore next */
      cov_2esj5wuu95().s[16]++;
      for (const property of commonErrorProperties) {
        /* istanbul ignore next */
        cov_2esj5wuu95().s[17]++;
        if (typeof value[property] === 'string') {
          /* istanbul ignore next */
          cov_2esj5wuu95().b[3][0]++;
          cov_2esj5wuu95().s[18]++;
          simpleError[property] = value[property];
        } else
        /* istanbul ignore next */
        {
          cov_2esj5wuu95().b[3][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2esj5wuu95().s[19]++;
      return simpleError;
    }
  } else
  /* istanbul ignore next */
  {
    cov_2esj5wuu95().b[0][1]++;
  }
  cov_2esj5wuu95().s[20]++;
  return {
    message: String(value)
  };
};
/* istanbul ignore next */
cov_2esj5wuu95().s[21]++;
exports.serializeAxiosError = serializeAxiosError;
/**
 * A wrapper on top of createSlice from Redux Toolkit to extract
 * common reducers and matchers used by entities
 */
/* istanbul ignore next */
cov_2esj5wuu95().s[22]++;
const createEntitySlice = ({
  name =
  /* istanbul ignore next */
  (cov_2esj5wuu95().b[4][0]++, ''),
  initialState,
  reducers,
  extraReducers,
  skipRejectionHandling
}) => {
  /* istanbul ignore next */
  cov_2esj5wuu95().f[4]++;
  cov_2esj5wuu95().s[23]++;
  return (0, toolkit_1.createSlice)({
    name,
    initialState,
    reducers: Object.assign({
      /**
       * Reset the entity state to initial state
       */
      reset() {
        /* istanbul ignore next */
        cov_2esj5wuu95().f[5]++;
        cov_2esj5wuu95().s[24]++;
        return initialState;
      }
    }, reducers),
    extraReducers(builder) {
      /* istanbul ignore next */
      cov_2esj5wuu95().f[6]++;
      cov_2esj5wuu95().s[25]++;
      extraReducers(builder);
      /*
       * Common rejection logic is handled here.
       * If you want to add your own rejection logic, pass `skipRejectionHandling: true`
       * while calling `createEntitySlice`
       * */
      /* istanbul ignore next */
      cov_2esj5wuu95().s[26]++;
      if (!skipRejectionHandling) {
        /* istanbul ignore next */
        cov_2esj5wuu95().b[5][0]++;
        cov_2esj5wuu95().s[27]++;
        builder.addMatcher(isRejectedAction, (state, action) => {
          /* istanbul ignore next */
          cov_2esj5wuu95().f[7]++;
          cov_2esj5wuu95().s[28]++;
          state.loading = false;
          /* istanbul ignore next */
          cov_2esj5wuu95().s[29]++;
          state.updating = false;
          /* istanbul ignore next */
          cov_2esj5wuu95().s[30]++;
          state.updateSuccess = false;
          /* istanbul ignore next */
          cov_2esj5wuu95().s[31]++;
          state.errorMessage = null;
        });
      } else
      /* istanbul ignore next */
      {
        cov_2esj5wuu95().b[5][1]++;
      }
    }
  });
};
/* istanbul ignore next */
cov_2esj5wuu95().s[32]++;
exports.createEntitySlice = createEntitySlice;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,