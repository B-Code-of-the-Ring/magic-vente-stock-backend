0de2f2ae4a9ee5b2a98eb90ce69a18af
'use strict';

let Container = require('./container');
let Parser = require('./parser');
let Input = require('./input');
function parse(css, opts) {
  let input = new Input(css, opts);
  let parser = new Parser(input);
  try {
    parser.parse();
  } catch (e) {
    if (process.env.NODE_ENV !== 'production') {
      if (e.name === 'CssSyntaxError' && opts && opts.from) {
        if (/\.scss$/i.test(opts.from)) {
          e.message += '\nYou tried to parse SCSS with ' + 'the standard CSS parser; ' + 'try again with the postcss-scss parser';
        } else if (/\.sass/i.test(opts.from)) {
          e.message += '\nYou tried to parse Sass with ' + 'the standard CSS parser; ' + 'try again with the postcss-sass parser';
        } else if (/\.less$/i.test(opts.from)) {
          e.message += '\nYou tried to parse Less with ' + 'the standard CSS parser; ' + 'try again with the postcss-less parser';
        }
      }
    }
    throw e;
  }
  return parser.root;
}
module.exports = parse;
parse.default = parse;
Container.registerParse(parse);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDb250YWluZXIiLCJyZXF1aXJlIiwiUGFyc2VyIiwiSW5wdXQiLCJwYXJzZSIsImNzcyIsIm9wdHMiLCJpbnB1dCIsInBhcnNlciIsImUiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJuYW1lIiwiZnJvbSIsInRlc3QiLCJtZXNzYWdlIiwicm9vdCIsIm1vZHVsZSIsImV4cG9ydHMiLCJkZWZhdWx0IiwicmVnaXN0ZXJQYXJzZSJdLCJzb3VyY2VzIjpbInBhcnNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5sZXQgQ29udGFpbmVyID0gcmVxdWlyZSgnLi9jb250YWluZXInKVxubGV0IFBhcnNlciA9IHJlcXVpcmUoJy4vcGFyc2VyJylcbmxldCBJbnB1dCA9IHJlcXVpcmUoJy4vaW5wdXQnKVxuXG5mdW5jdGlvbiBwYXJzZShjc3MsIG9wdHMpIHtcbiAgbGV0IGlucHV0ID0gbmV3IElucHV0KGNzcywgb3B0cylcbiAgbGV0IHBhcnNlciA9IG5ldyBQYXJzZXIoaW5wdXQpXG4gIHRyeSB7XG4gICAgcGFyc2VyLnBhcnNlKClcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBpZiAoZS5uYW1lID09PSAnQ3NzU3ludGF4RXJyb3InICYmIG9wdHMgJiYgb3B0cy5mcm9tKSB7XG4gICAgICAgIGlmICgvXFwuc2NzcyQvaS50ZXN0KG9wdHMuZnJvbSkpIHtcbiAgICAgICAgICBlLm1lc3NhZ2UgKz1cbiAgICAgICAgICAgICdcXG5Zb3UgdHJpZWQgdG8gcGFyc2UgU0NTUyB3aXRoICcgK1xuICAgICAgICAgICAgJ3RoZSBzdGFuZGFyZCBDU1MgcGFyc2VyOyAnICtcbiAgICAgICAgICAgICd0cnkgYWdhaW4gd2l0aCB0aGUgcG9zdGNzcy1zY3NzIHBhcnNlcidcbiAgICAgICAgfSBlbHNlIGlmICgvXFwuc2Fzcy9pLnRlc3Qob3B0cy5mcm9tKSkge1xuICAgICAgICAgIGUubWVzc2FnZSArPVxuICAgICAgICAgICAgJ1xcbllvdSB0cmllZCB0byBwYXJzZSBTYXNzIHdpdGggJyArXG4gICAgICAgICAgICAndGhlIHN0YW5kYXJkIENTUyBwYXJzZXI7ICcgK1xuICAgICAgICAgICAgJ3RyeSBhZ2FpbiB3aXRoIHRoZSBwb3N0Y3NzLXNhc3MgcGFyc2VyJ1xuICAgICAgICB9IGVsc2UgaWYgKC9cXC5sZXNzJC9pLnRlc3Qob3B0cy5mcm9tKSkge1xuICAgICAgICAgIGUubWVzc2FnZSArPVxuICAgICAgICAgICAgJ1xcbllvdSB0cmllZCB0byBwYXJzZSBMZXNzIHdpdGggJyArXG4gICAgICAgICAgICAndGhlIHN0YW5kYXJkIENTUyBwYXJzZXI7ICcgK1xuICAgICAgICAgICAgJ3RyeSBhZ2FpbiB3aXRoIHRoZSBwb3N0Y3NzLWxlc3MgcGFyc2VyJ1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHRocm93IGVcbiAgfVxuXG4gIHJldHVybiBwYXJzZXIucm9vdFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHBhcnNlXG5wYXJzZS5kZWZhdWx0ID0gcGFyc2VcblxuQ29udGFpbmVyLnJlZ2lzdGVyUGFyc2UocGFyc2UpXG4iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBRVosSUFBSUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsYUFBYSxDQUFDO0FBQ3RDLElBQUlDLE1BQU0sR0FBR0QsT0FBTyxDQUFDLFVBQVUsQ0FBQztBQUNoQyxJQUFJRSxLQUFLLEdBQUdGLE9BQU8sQ0FBQyxTQUFTLENBQUM7QUFFOUIsU0FBU0csS0FBS0EsQ0FBQ0MsR0FBRyxFQUFFQyxJQUFJLEVBQUU7RUFDeEIsSUFBSUMsS0FBSyxHQUFHLElBQUlKLEtBQUssQ0FBQ0UsR0FBRyxFQUFFQyxJQUFJLENBQUM7RUFDaEMsSUFBSUUsTUFBTSxHQUFHLElBQUlOLE1BQU0sQ0FBQ0ssS0FBSyxDQUFDO0VBQzlCLElBQUk7SUFDRkMsTUFBTSxDQUFDSixLQUFLLENBQUMsQ0FBQztFQUNoQixDQUFDLENBQUMsT0FBT0ssQ0FBQyxFQUFFO0lBQ1YsSUFBSUMsT0FBTyxDQUFDQyxHQUFHLENBQUNDLFFBQVEsS0FBSyxZQUFZLEVBQUU7TUFDekMsSUFBSUgsQ0FBQyxDQUFDSSxJQUFJLEtBQUssZ0JBQWdCLElBQUlQLElBQUksSUFBSUEsSUFBSSxDQUFDUSxJQUFJLEVBQUU7UUFDcEQsSUFBSSxVQUFVLENBQUNDLElBQUksQ0FBQ1QsSUFBSSxDQUFDUSxJQUFJLENBQUMsRUFBRTtVQUM5QkwsQ0FBQyxDQUFDTyxPQUFPLElBQ1AsaUNBQWlDLEdBQ2pDLDJCQUEyQixHQUMzQix3Q0FBd0M7UUFDNUMsQ0FBQyxNQUFNLElBQUksU0FBUyxDQUFDRCxJQUFJLENBQUNULElBQUksQ0FBQ1EsSUFBSSxDQUFDLEVBQUU7VUFDcENMLENBQUMsQ0FBQ08sT0FBTyxJQUNQLGlDQUFpQyxHQUNqQywyQkFBMkIsR0FDM0Isd0NBQXdDO1FBQzVDLENBQUMsTUFBTSxJQUFJLFVBQVUsQ0FBQ0QsSUFBSSxDQUFDVCxJQUFJLENBQUNRLElBQUksQ0FBQyxFQUFFO1VBQ3JDTCxDQUFDLENBQUNPLE9BQU8sSUFDUCxpQ0FBaUMsR0FDakMsMkJBQTJCLEdBQzNCLHdDQUF3QztRQUM1QztNQUNGO0lBQ0Y7SUFDQSxNQUFNUCxDQUFDO0VBQ1Q7RUFFQSxPQUFPRCxNQUFNLENBQUNTLElBQUk7QUFDcEI7QUFFQUMsTUFBTSxDQUFDQyxPQUFPLEdBQUdmLEtBQUs7QUFDdEJBLEtBQUssQ0FBQ2dCLE9BQU8sR0FBR2hCLEtBQUs7QUFFckJKLFNBQVMsQ0FBQ3FCLGFBQWEsQ0FBQ2pCLEtBQUssQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==