{"file":"/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/entities/produit/produit-reducer.spec.ts","mappings":";;;AAAA,0DAA0B;AAE1B,8CAAkD;AAClD,0DAA0B;AAG1B,kEAAwE;AACxE,6EAA0I;AAE1I,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;IACtC,SAAS,OAAO,CAAC,OAAO;QACtB,IAAI,OAAO,YAAY,KAAK,EAAE,CAAC;YAC7B,OAAO,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC;QAC9B,CAAC;aAAM,CAAC;YACN,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IAED,MAAM,YAAY,GAA0B;QAC1C,OAAO,EAAE,KAAK;QACd,YAAY,EAAE,IAAI;QAClB,QAAQ,EAAE,EAAE;QACZ,MAAM,EAAE,4BAAY;QACpB,UAAU,EAAE,CAAC;QACb,QAAQ,EAAE,KAAK;QACf,aAAa,EAAE,KAAK;KACrB,CAAC;IAEF,SAAS,gBAAgB,CAAC,KAAK;QAC7B,MAAM,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC;YAC1B,OAAO,EAAE,KAAK;YACd,YAAY,EAAE,IAAI;YAClB,QAAQ,EAAE,KAAK;YACf,aAAa,EAAE,KAAK;SACrB,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IAChC,CAAC;IAED,SAAS,iBAAiB,CAAC,KAAK,EAAE,OAAO,EAAE,YAAY,EAAE,KAAM;QAC7D,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAChB,YAAY,CAAC,IAAA,yBAAO,EAAC,SAAS,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;QACtB,EAAE,CAAC,iCAAiC,EAAE,GAAG,EAAE;YACzC,gBAAgB,CAAC,IAAA,yBAAO,EAAC,SAAS,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;QACxB,EAAE,CAAC,6BAA6B,EAAE,GAAG,EAAE;YACrC,iBAAiB,CAAC,CAAC,6BAAW,CAAC,OAAO,CAAC,IAAI,EAAE,2BAAS,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE;gBAChF,MAAM,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC;oBAC1B,YAAY,EAAE,IAAI;oBAClB,aAAa,EAAE,KAAK;oBACpB,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8BAA8B,EAAE,GAAG,EAAE;YACtC,iBAAiB,CACf,CAAC,8BAAY,CAAC,OAAO,CAAC,IAAI,EAAE,8BAAY,CAAC,OAAO,CAAC,IAAI,EAAE,qCAAmB,CAAC,OAAO,CAAC,IAAI,EAAE,8BAAY,CAAC,OAAO,CAAC,IAAI,CAAC,EACnH,EAAE,EACF,KAAK,CAAC,EAAE;gBACN,MAAM,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC;oBAC1B,YAAY,EAAE,IAAI;oBAClB,aAAa,EAAE,KAAK;oBACpB,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;YACL,CAAC,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wBAAwB,EAAE,GAAG,EAAE;YAChC,MAAM,CAAC,IAAA,yBAAO,kCAAM,YAAY,KAAE,OAAO,EAAE,IAAI,KAAI,IAAA,uBAAK,GAAE,CAAC,CAAC,CAAC,OAAO,mBAC/D,YAAY,EACf,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;QACxB,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;YAC9C,iBAAiB,CACf;gBACE,6BAAW,CAAC,QAAQ,CAAC,IAAI;gBACzB,2BAAS,CAAC,QAAQ,CAAC,IAAI;gBACvB,8BAAY,CAAC,QAAQ,CAAC,IAAI;gBAC1B,8BAAY,CAAC,QAAQ,CAAC,IAAI;gBAC1B,qCAAmB,CAAC,QAAQ,CAAC,IAAI;gBACjC,8BAAY,CAAC,QAAQ,CAAC,IAAI;aAC3B,EACD,cAAc,EACd,KAAK,CAAC,EAAE;gBACN,MAAM,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC;oBAC1B,YAAY,EAAE,IAAI;oBAClB,aAAa,EAAE,KAAK;oBACpB,QAAQ,EAAE,KAAK;iBAChB,CAAC,CAAC;YACL,CAAC,EACD;gBACE,OAAO,EAAE,eAAe;aACzB,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;QACzB,EAAE,CAAC,2BAA2B,EAAE,GAAG,EAAE;YACnC,MAAM,OAAO,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,eAAe,EAAE,GAAG,EAAE,EAAE,CAAC;YAC9F,MAAM,CACJ,IAAA,yBAAO,EAAC,SAAS,EAAE;gBACjB,IAAI,EAAE,6BAAW,CAAC,SAAS,CAAC,IAAI;gBAChC,OAAO;aACR,CAAC,CACH,CAAC,OAAO,iCACJ,YAAY,KACf,OAAO,EAAE,KAAK,EACd,UAAU,EAAE,OAAO,CAAC,OAAO,CAAC,eAAe,CAAC,EAC5C,QAAQ,EAAE,OAAO,CAAC,IAAI,IACtB,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8BAA8B,EAAE,GAAG,EAAE;YACtC,MAAM,OAAO,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC;YACzC,MAAM,CACJ,IAAA,yBAAO,EAAC,SAAS,EAAE;gBACjB,IAAI,EAAE,2BAAS,CAAC,SAAS,CAAC,IAAI;gBAC9B,OAAO;aACR,CAAC,CACH,CAAC,OAAO,iCACJ,YAAY,KACf,OAAO,EAAE,KAAK,EACd,MAAM,EAAE,OAAO,CAAC,IAAI,IACpB,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6BAA6B,EAAE,GAAG,EAAE;YACrC,MAAM,OAAO,GAAG,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC;YACzC,MAAM,CACJ,IAAA,yBAAO,EAAC,SAAS,EAAE;gBACjB,IAAI,EAAE,8BAAY,CAAC,SAAS,CAAC,IAAI;gBACjC,OAAO;aACR,CAAC,CACH,CAAC,OAAO,iCACJ,YAAY,KACf,QAAQ,EAAE,KAAK,EACf,aAAa,EAAE,IAAI,EACnB,MAAM,EAAE,OAAO,CAAC,IAAI,IACpB,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;YAC9B,MAAM,OAAO,GAAG,cAAc,CAAC;YAC/B,MAAM,MAAM,GAAG,IAAA,yBAAO,EAAC,SAAS,EAAE;gBAChC,IAAI,EAAE,8BAAY,CAAC,SAAS,CAAC,IAAI;gBACjC,OAAO;aACR,CAAC,CAAC;YACH,MAAM,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC;gBAC3B,QAAQ,EAAE,KAAK;gBACf,aAAa,EAAE,IAAI;aACpB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;QACvB,IAAI,KAAK,CAAC;QAEV,MAAM,cAAc,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC;QAC7C,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAC3B,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAC3B,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,UAAU,CAAC,GAAG,EAAE;YACd,KAAK,GAAG,IAAA,wBAAc,EAAC;gBACrB,OAAO,EAAE,CAAC,KAAK,GAAG,EAAE,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC,GAAG,KAAK,EAAE,MAAM,CAAC;aACpD,CAAC,CAAC;YACH,eAAK,CAAC,GAAG,GAAG,eAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;YAClE,eAAK,CAAC,IAAI,GAAG,eAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;YACnE,eAAK,CAAC,GAAG,GAAG,eAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;YAClE,eAAK,CAAC,KAAK,GAAG,eAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;YACpE,eAAK,CAAC,MAAM,GAAG,eAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uCAAuC,EAAE,GAAS,EAAE;YACrD,MAAM,GAAG,GAAG,EAAE,CAAC;YAEf,MAAM,MAAM,GAAG,MAAM,IAAA,6BAAW,EAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;YAEjE,MAAM,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzD,MAAM,CAAC,6BAAW,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzD,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,kCAAkC,EAAE,GAAS,EAAE;YAChD,MAAM,GAAG,GAAG,KAAK,CAAC;YAElB,MAAM,MAAM,GAAG,MAAM,IAAA,2BAAS,EAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;YAE/D,MAAM,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzD,MAAM,CAAC,2BAAS,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvD,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,mCAAmC,EAAE,GAAS,EAAE;YACjD,MAAM,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC;YAExB,MAAM,MAAM,GAAG,MAAM,IAAA,8BAAY,EAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;YAElE,MAAM,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzD,MAAM,CAAC,8BAAY,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,mCAAmC,EAAE,GAAS,EAAE;YACjD,MAAM,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC;YAExB,MAAM,MAAM,GAAG,MAAM,IAAA,8BAAY,EAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;YAElE,MAAM,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzD,MAAM,CAAC,8BAAY,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,2CAA2C,EAAE,GAAS,EAAE;YACzD,MAAM,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC;YAExB,MAAM,MAAM,GAAG,MAAM,IAAA,qCAAmB,EAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;YAEzE,MAAM,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzD,MAAM,CAAC,qCAAmB,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjE,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,mCAAmC,EAAE,GAAS,EAAE;YACjD,MAAM,GAAG,GAAG,KAAK,CAAC;YAElB,MAAM,MAAM,GAAG,MAAM,IAAA,8BAAY,EAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;YAElE,MAAM,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzD,MAAM,CAAC,8BAAY,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,0BAA0B,EAAE,GAAS,EAAE;YACxC,MAAM,KAAK,CAAC,QAAQ,CAAC,IAAA,uBAAK,GAAE,CAAC,CAAC;YAC9B,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,gBAAgB,CAAC,IAAA,uBAAK,GAAE,CAAC,CAAC,CAAC,CAAC;QAC3F,CAAC,CAAA,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/entities/produit/produit-reducer.spec.ts"],"sourcesContent":["import axios from 'axios';\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport sinon from 'sinon';\n\nimport { EntityState } from 'app/shared/reducers/reducer.utils';\nimport { IProduit, defaultValue } from 'app/shared/model/produit.model';\nimport reducer, { createEntity, deleteEntity, getEntities, getEntity, updateEntity, partialUpdateEntity, reset } from './produit.reducer';\n\ndescribe('Entities reducer tests', () => {\n  function isEmpty(element): boolean {\n    if (element instanceof Array) {\n      return element.length === 0;\n    } else {\n      return Object.keys(element).length === 0;\n    }\n  }\n\n  const initialState: EntityState<IProduit> = {\n    loading: false,\n    errorMessage: null,\n    entities: [],\n    entity: defaultValue,\n    totalItems: 0,\n    updating: false,\n    updateSuccess: false,\n  };\n\n  function testInitialState(state) {\n    expect(state).toMatchObject({\n      loading: false,\n      errorMessage: null,\n      updating: false,\n      updateSuccess: false,\n    });\n    expect(isEmpty(state.entities));\n    expect(isEmpty(state.entity));\n  }\n\n  function testMultipleTypes(types, payload, testFunction, error?) {\n    types.forEach(e => {\n      testFunction(reducer(undefined, { type: e, payload, error }));\n    });\n  }\n\n  describe('Common', () => {\n    it('should return the initial state', () => {\n      testInitialState(reducer(undefined, { type: '' }));\n    });\n  });\n\n  describe('Requests', () => {\n    it('should set state to loading', () => {\n      testMultipleTypes([getEntities.pending.type, getEntity.pending.type], {}, state => {\n        expect(state).toMatchObject({\n          errorMessage: null,\n          updateSuccess: false,\n          loading: true,\n        });\n      });\n    });\n\n    it('should set state to updating', () => {\n      testMultipleTypes(\n        [createEntity.pending.type, updateEntity.pending.type, partialUpdateEntity.pending.type, deleteEntity.pending.type],\n        {},\n        state => {\n          expect(state).toMatchObject({\n            errorMessage: null,\n            updateSuccess: false,\n            updating: true,\n          });\n        },\n      );\n    });\n\n    it('should reset the state', () => {\n      expect(reducer({ ...initialState, loading: true }, reset())).toEqual({\n        ...initialState,\n      });\n    });\n  });\n\n  describe('Failures', () => {\n    it('should set a message in errorMessage', () => {\n      testMultipleTypes(\n        [\n          getEntities.rejected.type,\n          getEntity.rejected.type,\n          createEntity.rejected.type,\n          updateEntity.rejected.type,\n          partialUpdateEntity.rejected.type,\n          deleteEntity.rejected.type,\n        ],\n        'some message',\n        state => {\n          expect(state).toMatchObject({\n            errorMessage: null,\n            updateSuccess: false,\n            updating: false,\n          });\n        },\n        {\n          message: 'error message',\n        },\n      );\n    });\n  });\n\n  describe('Successes', () => {\n    it('should fetch all entities', () => {\n      const payload = { data: [{ 1: 'fake1' }, { 2: 'fake2' }], headers: { 'x-total-count': 123 } };\n      expect(\n        reducer(undefined, {\n          type: getEntities.fulfilled.type,\n          payload,\n        }),\n      ).toEqual({\n        ...initialState,\n        loading: false,\n        totalItems: payload.headers['x-total-count'],\n        entities: payload.data,\n      });\n    });\n\n    it('should fetch a single entity', () => {\n      const payload = { data: { 1: 'fake1' } };\n      expect(\n        reducer(undefined, {\n          type: getEntity.fulfilled.type,\n          payload,\n        }),\n      ).toEqual({\n        ...initialState,\n        loading: false,\n        entity: payload.data,\n      });\n    });\n\n    it('should create/update entity', () => {\n      const payload = { data: 'fake payload' };\n      expect(\n        reducer(undefined, {\n          type: createEntity.fulfilled.type,\n          payload,\n        }),\n      ).toEqual({\n        ...initialState,\n        updating: false,\n        updateSuccess: true,\n        entity: payload.data,\n      });\n    });\n\n    it('should delete entity', () => {\n      const payload = 'fake payload';\n      const toTest = reducer(undefined, {\n        type: deleteEntity.fulfilled.type,\n        payload,\n      });\n      expect(toTest).toMatchObject({\n        updating: false,\n        updateSuccess: true,\n      });\n    });\n  });\n\n  describe('Actions', () => {\n    let store;\n\n    const resolvedObject = { value: 'whatever' };\n    const getState = jest.fn();\n    const dispatch = jest.fn();\n    const extra = {};\n    beforeEach(() => {\n      store = configureStore({\n        reducer: (state = [], action) => [...state, action],\n      });\n      axios.get = sinon.stub().returns(Promise.resolve(resolvedObject));\n      axios.post = sinon.stub().returns(Promise.resolve(resolvedObject));\n      axios.put = sinon.stub().returns(Promise.resolve(resolvedObject));\n      axios.patch = sinon.stub().returns(Promise.resolve(resolvedObject));\n      axios.delete = sinon.stub().returns(Promise.resolve(resolvedObject));\n    });\n\n    it('dispatches FETCH_PRODUIT_LIST actions', async () => {\n      const arg = {};\n\n      const result = await getEntities(arg)(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(getEntities.fulfilled.match(result)).toBe(true);\n    });\n\n    it('dispatches FETCH_PRODUIT actions', async () => {\n      const arg = 42666;\n\n      const result = await getEntity(arg)(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(getEntity.fulfilled.match(result)).toBe(true);\n    });\n\n    it('dispatches CREATE_PRODUIT actions', async () => {\n      const arg = { id: 456 };\n\n      const result = await createEntity(arg)(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(createEntity.fulfilled.match(result)).toBe(true);\n    });\n\n    it('dispatches UPDATE_PRODUIT actions', async () => {\n      const arg = { id: 456 };\n\n      const result = await updateEntity(arg)(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(updateEntity.fulfilled.match(result)).toBe(true);\n    });\n\n    it('dispatches PARTIAL_UPDATE_PRODUIT actions', async () => {\n      const arg = { id: 123 };\n\n      const result = await partialUpdateEntity(arg)(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(partialUpdateEntity.fulfilled.match(result)).toBe(true);\n    });\n\n    it('dispatches DELETE_PRODUIT actions', async () => {\n      const arg = 42666;\n\n      const result = await deleteEntity(arg)(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(deleteEntity.fulfilled.match(result)).toBe(true);\n    });\n\n    it('dispatches RESET actions', async () => {\n      await store.dispatch(reset());\n      expect(store.getState()).toEqual([expect.any(Object), expect.objectContaining(reset())]);\n    });\n  });\n});\n"],"version":3}