{"file":"/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/modules/administration/user-management/user-management.reducer.spec.ts","mappings":"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","names":[],"sources":["/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/modules/administration/user-management/user-management.reducer.spec.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport sinon from 'sinon';\n\nimport { defaultValue } from 'app/shared/model/user.model';\nimport { AUTHORITIES } from 'app/config/constants';\nimport userManagement, {\n  getUsers,\n  getUsersAsAdmin,\n  getRoles,\n  getUser,\n  createUser,\n  updateUser,\n  deleteUser,\n  reset,\n} from './user-management.reducer';\n\ndescribe('User management reducer tests', () => {\n  const username = process.env.E2E_USERNAME ?? 'admin';\n\n  function isEmpty(element): boolean {\n    if (element instanceof Array) {\n      return element.length === 0;\n    } else {\n      return Object.keys(element).length === 0;\n    }\n  }\n\n  function testInitialState(state) {\n    expect(state).toMatchObject({\n      loading: false,\n      errorMessage: null,\n      updating: false,\n      updateSuccess: false,\n      totalItems: 0,\n    });\n    expect(isEmpty(state.users));\n    expect(isEmpty(state.authorities));\n    expect(isEmpty(state.user));\n  }\n\n  function testMultipleTypes(types, payload, testFunction, error?) {\n    types.forEach(e => {\n      testFunction(userManagement(undefined, { type: e, payload, error }));\n    });\n  }\n\n  describe('Common', () => {\n    it('should return the initial state', () => {\n      testInitialState(userManagement(undefined, { type: 'unknown' }));\n    });\n  });\n\n  describe('Requests', () => {\n    it('should not modify the current state', () => {\n      testInitialState(userManagement(undefined, { type: getRoles.pending.type }));\n    });\n\n    it('should set state to loading', () => {\n      testMultipleTypes([getUsers.pending.type, getUsersAsAdmin.pending.type, getUser.pending.type], {}, state => {\n        expect(state).toMatchObject({\n          errorMessage: null,\n          updateSuccess: false,\n          loading: true,\n        });\n      });\n    });\n\n    it('should set state to updating', () => {\n      testMultipleTypes([createUser.pending.type, updateUser.pending.type, deleteUser.pending.type], {}, state => {\n        expect(state).toMatchObject({\n          errorMessage: null,\n          updateSuccess: false,\n          updating: true,\n        });\n      });\n    });\n  });\n\n  describe('Failures', () => {\n    it('should set state to failed and put an error message in errorMessage', () => {\n      testMultipleTypes(\n        [\n          getUsersAsAdmin.rejected.type,\n          getUsers.rejected.type,\n          getUser.rejected.type,\n          getRoles.rejected.type,\n          createUser.rejected.type,\n          updateUser.rejected.type,\n          deleteUser.rejected.type,\n        ],\n        { message: 'something happened' },\n        state => {\n          expect(state).toMatchObject({\n            loading: false,\n            updating: false,\n            updateSuccess: false,\n            errorMessage: 'error happened',\n          });\n        },\n        { message: 'error happened' },\n      );\n    });\n  });\n\n  describe('Success', () => {\n    it('should update state according to a successful fetch users request', () => {\n      const headers = { ['x-total-count']: 42 };\n      const payload = { data: 'some handsome users', headers };\n      const toTest = userManagement(undefined, { type: getUsers.fulfilled.type, payload });\n\n      expect(toTest).toMatchObject({\n        loading: false,\n        users: payload.data,\n        totalItems: headers['x-total-count'],\n      });\n    });\n\n    it('should update state according to a successful fetch user request', () => {\n      const payload = { data: 'some handsome user' };\n      const toTest = userManagement(undefined, { type: getUser.fulfilled.type, payload });\n\n      expect(toTest).toMatchObject({\n        loading: false,\n        user: payload.data,\n      });\n    });\n\n    it('should update state according to a successful fetch role request', () => {\n      const payload = { data: [AUTHORITIES.ADMIN] };\n      const toTest = userManagement(undefined, { type: getRoles.fulfilled.type, payload });\n\n      expect(toTest).toMatchObject({\n        loading: false,\n        authorities: payload.data,\n      });\n    });\n\n    it('should set state to successful update', () => {\n      testMultipleTypes([createUser.fulfilled.type, updateUser.fulfilled.type], { data: 'some handsome user' }, types => {\n        expect(types).toMatchObject({\n          updating: false,\n          updateSuccess: true,\n          user: 'some handsome user',\n        });\n      });\n    });\n\n    it('should set state to successful update with an empty user', () => {\n      const toTest = userManagement(undefined, { type: deleteUser.fulfilled.type });\n\n      expect(toTest).toMatchObject({\n        updating: false,\n        updateSuccess: true,\n      });\n      expect(isEmpty(toTest.user));\n    });\n  });\n\n  describe('Reset', () => {\n    it('should reset the state', () => {\n      const initialState = {\n        loading: false,\n        errorMessage: null,\n        users: [],\n        authorities: [] as any[],\n        user: defaultValue,\n        updating: false,\n        updateSuccess: false,\n        totalItems: 0,\n      };\n      const initialStateNew = {\n        ...initialState,\n        loading: true,\n      };\n      expect(userManagement(initialStateNew, reset)).toEqual(initialState);\n    });\n  });\n\n  describe('Actions', () => {\n    let store;\n\n    const resolvedObject = { value: 'whatever' };\n    const getState = jest.fn();\n    const dispatch = jest.fn();\n    const extra = {};\n    beforeEach(() => {\n      store = configureStore({\n        reducer: (state = [], action) => [...state, action],\n      });\n      axios.get = sinon.stub().returns(Promise.resolve(resolvedObject));\n      axios.put = sinon.stub().returns(Promise.resolve(resolvedObject));\n      axios.post = sinon.stub().returns(Promise.resolve(resolvedObject));\n      axios.delete = sinon.stub().returns(Promise.resolve(resolvedObject));\n    });\n\n    it('dispatches FETCH_USERS_AS_ADMIN_PENDING and FETCH_USERS_AS_ADMIN_FULFILLED actions', async () => {\n      const arg = {};\n\n      const result = await getUsersAsAdmin(arg)(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(getUsersAsAdmin.fulfilled.match(result)).toBe(true);\n    });\n\n    it('dispatches FETCH_USERS_AS_ADMIN_PENDING and FETCH_USERS_AS_ADMIN_FULFILLED actions with pagination options', async () => {\n      const arg = { page: 1, size: 20, sort: 'id,desc' };\n\n      const result = await getUsersAsAdmin(arg)(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(getUsersAsAdmin.fulfilled.match(result)).toBe(true);\n    });\n\n    it('dispatches FETCH_USERS_PENDING and FETCH_USERS_FULFILLED actions', async () => {\n      const arg = {};\n\n      const result = await getUsers(arg)(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(getUsers.fulfilled.match(result)).toBe(true);\n    });\n\n    it('dispatches FETCH_USERS_PENDING and FETCH_USERS_FULFILLED actions with pagination options', async () => {\n      const arg = { page: 1, size: 20, sort: 'id,desc' };\n\n      const result = await getUsers(arg)(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(getUsers.fulfilled.match(result)).toBe(true);\n    });\n\n    it('dispatches FETCH_ROLES_PENDING and FETCH_ROLES_FULFILLED actions', async () => {\n      const result = await getRoles()(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(getRoles.fulfilled.match(result)).toBe(true);\n    });\n\n    it('dispatches FETCH_USER_PENDING and FETCH_USER_FULFILLED actions', async () => {\n      const result = await getUser(username)(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(getUser.fulfilled.match(result)).toBe(true);\n    });\n\n    it('dispatches CREATE_USER_PENDING and CREATE_USER_FULFILLED actions', async () => {\n      const arg = {};\n\n      const result = await createUser(arg)(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(createUser.fulfilled.match(result)).toBe(true);\n    });\n\n    it('dispatches UPDATE_USER_PENDING and UPDATE_USER_FULFILLED actions', async () => {\n      const arg = { login: username };\n\n      const result = await updateUser(arg)(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(updateUser.fulfilled.match(result)).toBe(true);\n    });\n\n    it('dispatches DELETE_USER_PENDING and DELETE_USER_FULFILLED actions', async () => {\n      const result = await deleteUser(username)(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(deleteUser.fulfilled.match(result)).toBe(true);\n    });\n\n    it('dispatches RESET actions', async () => {\n      await store.dispatch(reset());\n      expect(store.getState()).toEqual([expect.any(Object), expect.objectContaining(reset())]);\n    });\n  });\n});\n"],"version":3}