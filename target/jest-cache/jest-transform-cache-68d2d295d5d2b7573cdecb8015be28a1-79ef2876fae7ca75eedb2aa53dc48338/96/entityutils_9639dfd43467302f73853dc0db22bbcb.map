{"version":3,"names":["cov_amisnc2ig","actualCoverage","s","pick_1","tslib_1","__importDefault","require","cleanEntity","entity","f","keysToKeep","Object","keys","filter","k","b","default","exports","mapIdList","idList","id","map","overrideSortStateWithQueryParams","paginationBaseState","locationSearch","params","URLSearchParams","sort","get","sortSplit","split","order","overridePaginationStateWithQueryParams","sortedPaginationState","page","activePage"],"sources":["/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/shared/util/entity-utils.ts"],"sourcesContent":["import pick from 'lodash/pick';\nimport { IPaginationBaseState, ISortBaseState } from 'react-jhipster';\n\n/**\n * Removes fields with an 'id' field that equals ''.\n * This function was created to prevent entities to be sent to\n * the server with an empty id and thus resulting in a 500.\n *\n * @param entity Object to clean.\n */\nexport const cleanEntity = entity => {\n  const keysToKeep = Object.keys(entity).filter(k => !(entity[k] instanceof Object) || (entity[k]['id'] !== '' && entity[k]['id'] !== -1));\n\n  return pick(entity, keysToKeep);\n};\n\n/**\n * Simply map a list of element to a list a object with the element as id.\n *\n * @param idList Elements to map.\n * @returns The list of objects with mapped ids.\n */\nexport const mapIdList = (idList: ReadonlyArray<any>) => idList.filter((id: any) => id !== '').map((id: any) => ({ id }));\n\nexport const overrideSortStateWithQueryParams = (paginationBaseState: ISortBaseState, locationSearch: string) => {\n  const params = new URLSearchParams(locationSearch);\n  const sort = params.get('sort');\n  if (sort) {\n    const sortSplit = sort.split(',');\n    paginationBaseState.sort = sortSplit[0];\n    paginationBaseState.order = sortSplit[1];\n  }\n  return paginationBaseState;\n};\n\nexport const overridePaginationStateWithQueryParams = (paginationBaseState: IPaginationBaseState, locationSearch: string) => {\n  const sortedPaginationState: IPaginationBaseState = <IPaginationBaseState>(\n    overrideSortStateWithQueryParams(paginationBaseState, locationSearch)\n  );\n  const params = new URLSearchParams(locationSearch);\n  const page = params.get('page');\n  if (page) {\n    sortedPaginationState.activePage = +page;\n  }\n  return sortedPaginationState;\n};\n"],"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","ignoreList":[]}