78beddbf12ebab54eb502f27d8897046
'use strict';

let list = {
  comma(string) {
    return list.split(string, [','], true);
  },
  space(string) {
    let spaces = [' ', '\n', '\t'];
    return list.split(string, spaces);
  },
  split(string, separators, last) {
    let array = [];
    let current = '';
    let split = false;
    let func = 0;
    let inQuote = false;
    let prevQuote = '';
    let escape = false;
    for (let letter of string) {
      if (escape) {
        escape = false;
      } else if (letter === '\\') {
        escape = true;
      } else if (inQuote) {
        if (letter === prevQuote) {
          inQuote = false;
        }
      } else if (letter === '"' || letter === "'") {
        inQuote = true;
        prevQuote = letter;
      } else if (letter === '(') {
        func += 1;
      } else if (letter === ')') {
        if (func > 0) func -= 1;
      } else if (func === 0) {
        if (separators.includes(letter)) split = true;
      }
      if (split) {
        if (current !== '') array.push(current.trim());
        current = '';
        split = false;
      } else {
        current += letter;
      }
    }
    if (last || current !== '') array.push(current.trim());
    return array;
  }
};
module.exports = list;
list.default = list;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJsaXN0IiwiY29tbWEiLCJzdHJpbmciLCJzcGxpdCIsInNwYWNlIiwic3BhY2VzIiwic2VwYXJhdG9ycyIsImxhc3QiLCJhcnJheSIsImN1cnJlbnQiLCJmdW5jIiwiaW5RdW90ZSIsInByZXZRdW90ZSIsImVzY2FwZSIsImxldHRlciIsImluY2x1ZGVzIiwicHVzaCIsInRyaW0iLCJtb2R1bGUiLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbImxpc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmxldCBsaXN0ID0ge1xuICBjb21tYShzdHJpbmcpIHtcbiAgICByZXR1cm4gbGlzdC5zcGxpdChzdHJpbmcsIFsnLCddLCB0cnVlKVxuICB9LFxuXG4gIHNwYWNlKHN0cmluZykge1xuICAgIGxldCBzcGFjZXMgPSBbJyAnLCAnXFxuJywgJ1xcdCddXG4gICAgcmV0dXJuIGxpc3Quc3BsaXQoc3RyaW5nLCBzcGFjZXMpXG4gIH0sXG5cbiAgc3BsaXQoc3RyaW5nLCBzZXBhcmF0b3JzLCBsYXN0KSB7XG4gICAgbGV0IGFycmF5ID0gW11cbiAgICBsZXQgY3VycmVudCA9ICcnXG4gICAgbGV0IHNwbGl0ID0gZmFsc2VcblxuICAgIGxldCBmdW5jID0gMFxuICAgIGxldCBpblF1b3RlID0gZmFsc2VcbiAgICBsZXQgcHJldlF1b3RlID0gJydcbiAgICBsZXQgZXNjYXBlID0gZmFsc2VcblxuICAgIGZvciAobGV0IGxldHRlciBvZiBzdHJpbmcpIHtcbiAgICAgIGlmIChlc2NhcGUpIHtcbiAgICAgICAgZXNjYXBlID0gZmFsc2VcbiAgICAgIH0gZWxzZSBpZiAobGV0dGVyID09PSAnXFxcXCcpIHtcbiAgICAgICAgZXNjYXBlID0gdHJ1ZVxuICAgICAgfSBlbHNlIGlmIChpblF1b3RlKSB7XG4gICAgICAgIGlmIChsZXR0ZXIgPT09IHByZXZRdW90ZSkge1xuICAgICAgICAgIGluUXVvdGUgPSBmYWxzZVxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGxldHRlciA9PT0gJ1wiJyB8fCBsZXR0ZXIgPT09IFwiJ1wiKSB7XG4gICAgICAgIGluUXVvdGUgPSB0cnVlXG4gICAgICAgIHByZXZRdW90ZSA9IGxldHRlclxuICAgICAgfSBlbHNlIGlmIChsZXR0ZXIgPT09ICcoJykge1xuICAgICAgICBmdW5jICs9IDFcbiAgICAgIH0gZWxzZSBpZiAobGV0dGVyID09PSAnKScpIHtcbiAgICAgICAgaWYgKGZ1bmMgPiAwKSBmdW5jIC09IDFcbiAgICAgIH0gZWxzZSBpZiAoZnVuYyA9PT0gMCkge1xuICAgICAgICBpZiAoc2VwYXJhdG9ycy5pbmNsdWRlcyhsZXR0ZXIpKSBzcGxpdCA9IHRydWVcbiAgICAgIH1cblxuICAgICAgaWYgKHNwbGl0KSB7XG4gICAgICAgIGlmIChjdXJyZW50ICE9PSAnJykgYXJyYXkucHVzaChjdXJyZW50LnRyaW0oKSlcbiAgICAgICAgY3VycmVudCA9ICcnXG4gICAgICAgIHNwbGl0ID0gZmFsc2VcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGN1cnJlbnQgKz0gbGV0dGVyXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGxhc3QgfHwgY3VycmVudCAhPT0gJycpIGFycmF5LnB1c2goY3VycmVudC50cmltKCkpXG4gICAgcmV0dXJuIGFycmF5XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBsaXN0XG5saXN0LmRlZmF1bHQgPSBsaXN0XG4iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBRVosSUFBSUEsSUFBSSxHQUFHO0VBQ1RDLEtBQUtBLENBQUNDLE1BQU0sRUFBRTtJQUNaLE9BQU9GLElBQUksQ0FBQ0csS0FBSyxDQUFDRCxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxJQUFJLENBQUM7RUFDeEMsQ0FBQztFQUVERSxLQUFLQSxDQUFDRixNQUFNLEVBQUU7SUFDWixJQUFJRyxNQUFNLEdBQUcsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQztJQUM5QixPQUFPTCxJQUFJLENBQUNHLEtBQUssQ0FBQ0QsTUFBTSxFQUFFRyxNQUFNLENBQUM7RUFDbkMsQ0FBQztFQUVERixLQUFLQSxDQUFDRCxNQUFNLEVBQUVJLFVBQVUsRUFBRUMsSUFBSSxFQUFFO0lBQzlCLElBQUlDLEtBQUssR0FBRyxFQUFFO0lBQ2QsSUFBSUMsT0FBTyxHQUFHLEVBQUU7SUFDaEIsSUFBSU4sS0FBSyxHQUFHLEtBQUs7SUFFakIsSUFBSU8sSUFBSSxHQUFHLENBQUM7SUFDWixJQUFJQyxPQUFPLEdBQUcsS0FBSztJQUNuQixJQUFJQyxTQUFTLEdBQUcsRUFBRTtJQUNsQixJQUFJQyxNQUFNLEdBQUcsS0FBSztJQUVsQixLQUFLLElBQUlDLE1BQU0sSUFBSVosTUFBTSxFQUFFO01BQ3pCLElBQUlXLE1BQU0sRUFBRTtRQUNWQSxNQUFNLEdBQUcsS0FBSztNQUNoQixDQUFDLE1BQU0sSUFBSUMsTUFBTSxLQUFLLElBQUksRUFBRTtRQUMxQkQsTUFBTSxHQUFHLElBQUk7TUFDZixDQUFDLE1BQU0sSUFBSUYsT0FBTyxFQUFFO1FBQ2xCLElBQUlHLE1BQU0sS0FBS0YsU0FBUyxFQUFFO1VBQ3hCRCxPQUFPLEdBQUcsS0FBSztRQUNqQjtNQUNGLENBQUMsTUFBTSxJQUFJRyxNQUFNLEtBQUssR0FBRyxJQUFJQSxNQUFNLEtBQUssR0FBRyxFQUFFO1FBQzNDSCxPQUFPLEdBQUcsSUFBSTtRQUNkQyxTQUFTLEdBQUdFLE1BQU07TUFDcEIsQ0FBQyxNQUFNLElBQUlBLE1BQU0sS0FBSyxHQUFHLEVBQUU7UUFDekJKLElBQUksSUFBSSxDQUFDO01BQ1gsQ0FBQyxNQUFNLElBQUlJLE1BQU0sS0FBSyxHQUFHLEVBQUU7UUFDekIsSUFBSUosSUFBSSxHQUFHLENBQUMsRUFBRUEsSUFBSSxJQUFJLENBQUM7TUFDekIsQ0FBQyxNQUFNLElBQUlBLElBQUksS0FBSyxDQUFDLEVBQUU7UUFDckIsSUFBSUosVUFBVSxDQUFDUyxRQUFRLENBQUNELE1BQU0sQ0FBQyxFQUFFWCxLQUFLLEdBQUcsSUFBSTtNQUMvQztNQUVBLElBQUlBLEtBQUssRUFBRTtRQUNULElBQUlNLE9BQU8sS0FBSyxFQUFFLEVBQUVELEtBQUssQ0FBQ1EsSUFBSSxDQUFDUCxPQUFPLENBQUNRLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDOUNSLE9BQU8sR0FBRyxFQUFFO1FBQ1pOLEtBQUssR0FBRyxLQUFLO01BQ2YsQ0FBQyxNQUFNO1FBQ0xNLE9BQU8sSUFBSUssTUFBTTtNQUNuQjtJQUNGO0lBRUEsSUFBSVAsSUFBSSxJQUFJRSxPQUFPLEtBQUssRUFBRSxFQUFFRCxLQUFLLENBQUNRLElBQUksQ0FBQ1AsT0FBTyxDQUFDUSxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3RELE9BQU9ULEtBQUs7RUFDZDtBQUNGLENBQUM7QUFFRFUsTUFBTSxDQUFDQyxPQUFPLEdBQUduQixJQUFJO0FBQ3JCQSxJQUFJLENBQUNvQixPQUFPLEdBQUdwQixJQUFJIiwiaWdub3JlTGlzdCI6W119