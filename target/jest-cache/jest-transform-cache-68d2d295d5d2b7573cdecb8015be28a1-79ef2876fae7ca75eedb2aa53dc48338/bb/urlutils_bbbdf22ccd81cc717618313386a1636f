b3ad62fb860edb6fc5388c7a53972388
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getUrlParameter = exports.parseHeaderForLinks = exports.getBasePath = void 0;
/**
 * Get base path from current window location
 */
const getBasePath = () => window.location.href.split('#')[0];
exports.getBasePath = getBasePath;
/**
 * Parse the header link element and return all links inside.
 * @param header header of link
 */
const parseHeaderForLinks = header => {
  if (header.length === 0) {
    throw new Error('input must not be of zero length');
  }
  // Split parts by comma
  const parts = header.split(',');
  const links = {};
  // Parse each part into a named link
  parts.forEach(p => {
    const section = p.split(';');
    if (section.length !== 2) {
      throw new Error('section could not be split on ";"');
    }
    const url = section[0].replace(/<(.*)>/, '$1').trim();
    const queryString = {};
    url.replace(new RegExp('([^?=&]+)(=([^&]*))?', 'g'), ($0, $1, $2, $3) => queryString[$1] = $3);
    let page = queryString.page;
    if (typeof page === 'string') {
      page = parseInt(page, 10);
    }
    const name = section[1].replace(/rel="(.*)"/, '$1').trim();
    links[name] = page;
  });
  return links;
};
exports.parseHeaderForLinks = parseHeaderForLinks;
/**
 * Fetch an entry from URL params
 * @param name the param name to fetch
 * @param search the search part from react router location
 */
const getUrlParameter = (name, search) => {
  const url = new URL(`http://localhost${search}`); // using a dummy url for parsing
  return url.searchParams.get(name) || '';
};
exports.getUrlParameter = getUrlParameter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRCYXNlUGF0aCIsIndpbmRvdyIsImxvY2F0aW9uIiwiaHJlZiIsInNwbGl0IiwiZXhwb3J0cyIsInBhcnNlSGVhZGVyRm9yTGlua3MiLCJoZWFkZXIiLCJsZW5ndGgiLCJFcnJvciIsInBhcnRzIiwibGlua3MiLCJmb3JFYWNoIiwicCIsInNlY3Rpb24iLCJ1cmwiLCJyZXBsYWNlIiwidHJpbSIsInF1ZXJ5U3RyaW5nIiwiUmVnRXhwIiwiJDAiLCIkMSIsIiQyIiwiJDMiLCJwYWdlIiwicGFyc2VJbnQiLCJuYW1lIiwiZ2V0VXJsUGFyYW1ldGVyIiwic2VhcmNoIiwiVVJMIiwic2VhcmNoUGFyYW1zIiwiZ2V0Il0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWwvdXJsLXV0aWxzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7O0FBR08sTUFBTUEsV0FBVyxHQUFHQSxDQUFBLEtBQWNDLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDQyxJQUFJLENBQUNDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFBOURDLE9BQUEsQ0FBQUwsV0FBVyxHQUFBQSxXQUFBO0FBRXhCOzs7O0FBSU8sTUFBTU0sbUJBQW1CLEdBQUlDLE1BQWMsSUFBUztFQUN6RCxJQUFJQSxNQUFNLENBQUNDLE1BQU0sS0FBSyxDQUFDLEVBQUU7SUFDdkIsTUFBTSxJQUFJQyxLQUFLLENBQUMsa0NBQWtDLENBQUM7O0VBR3JEO0VBQ0EsTUFBTUMsS0FBSyxHQUFhSCxNQUFNLENBQUNILEtBQUssQ0FBQyxHQUFHLENBQUM7RUFDekMsTUFBTU8sS0FBSyxHQUFRLEVBQUU7RUFFckI7RUFDQUQsS0FBSyxDQUFDRSxPQUFPLENBQUNDLENBQUMsSUFBRztJQUNoQixNQUFNQyxPQUFPLEdBQWFELENBQUMsQ0FBQ1QsS0FBSyxDQUFDLEdBQUcsQ0FBQztJQUV0QyxJQUFJVSxPQUFPLENBQUNOLE1BQU0sS0FBSyxDQUFDLEVBQUU7TUFDeEIsTUFBTSxJQUFJQyxLQUFLLENBQUMsbUNBQW1DLENBQUM7O0lBR3RELE1BQU1NLEdBQUcsR0FBV0QsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDRSxPQUFPLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDQyxJQUFJLEVBQUU7SUFDN0QsTUFBTUMsV0FBVyxHQUFRLEVBQUU7SUFFM0JILEdBQUcsQ0FBQ0MsT0FBTyxDQUFDLElBQUlHLE1BQU0sQ0FBQyxzQkFBc0IsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDQyxFQUFFLEVBQUVDLEVBQUUsRUFBRUMsRUFBRSxFQUFFQyxFQUFFLEtBQU1MLFdBQVcsQ0FBQ0csRUFBRSxDQUFDLEdBQUdFLEVBQUcsQ0FBQztJQUVoRyxJQUFJQyxJQUFJLEdBQVFOLFdBQVcsQ0FBQ00sSUFBSTtJQUVoQyxJQUFJLE9BQU9BLElBQUksS0FBSyxRQUFRLEVBQUU7TUFDNUJBLElBQUksR0FBR0MsUUFBUSxDQUFDRCxJQUFJLEVBQUUsRUFBRSxDQUFDOztJQUczQixNQUFNRSxJQUFJLEdBQVdaLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsT0FBTyxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsQ0FBQ0MsSUFBSSxFQUFFO0lBQ2xFTixLQUFLLENBQUNlLElBQUksQ0FBQyxHQUFHRixJQUFJO0VBQ3BCLENBQUMsQ0FBQztFQUNGLE9BQU9iLEtBQUs7QUFDZCxDQUFDO0FBaENZTixPQUFBLENBQUFDLG1CQUFtQixHQUFBQSxtQkFBQTtBQWtDaEM7Ozs7O0FBS08sTUFBTXFCLGVBQWUsR0FBR0EsQ0FBQ0QsSUFBWSxFQUFFRSxNQUFjLEtBQVk7RUFDdEUsTUFBTWIsR0FBRyxHQUFHLElBQUljLEdBQUcsQ0FBQyxtQkFBbUJELE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQztFQUNsRCxPQUFPYixHQUFHLENBQUNlLFlBQVksQ0FBQ0MsR0FBRyxDQUFDTCxJQUFJLENBQUMsSUFBSSxFQUFFO0FBQ3pDLENBQUM7QUFIWXJCLE9BQUEsQ0FBQXNCLGVBQWUsR0FBQUEsZUFBQSIsImlnbm9yZUxpc3QiOltdfQ==