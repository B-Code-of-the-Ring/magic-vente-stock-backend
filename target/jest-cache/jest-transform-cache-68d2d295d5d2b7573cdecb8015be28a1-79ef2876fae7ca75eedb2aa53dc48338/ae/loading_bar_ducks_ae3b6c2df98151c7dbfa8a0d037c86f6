5711f3ad559dbcd7c016298fced3fe6e
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.showLoading = showLoading;
exports.hideLoading = hideLoading;
exports.resetLoading = resetLoading;
exports.loadingBarReducer = loadingBarReducer;
exports.DEFAULT_SCOPE = exports.RESET = exports.HIDE = exports.SHOW = void 0;
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
var SHOW = 'loading-bar/SHOW';
exports.SHOW = SHOW;
var HIDE = 'loading-bar/HIDE';
exports.HIDE = HIDE;
var RESET = 'loading-bar/RESET';
exports.RESET = RESET;
var DEFAULT_SCOPE = 'default';
exports.DEFAULT_SCOPE = DEFAULT_SCOPE;
function showLoading() {
  var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_SCOPE;
  return {
    type: SHOW,
    payload: {
      scope: scope
    }
  };
}
function hideLoading() {
  var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_SCOPE;
  return {
    type: HIDE,
    payload: {
      scope: scope
    }
  };
}
function resetLoading() {
  var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_SCOPE;
  return {
    type: RESET,
    payload: {
      scope: scope
    }
  };
}
function loadingBarReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _ref = action.payload || {},
    _ref$scope = _ref.scope,
    scope = _ref$scope === void 0 ? DEFAULT_SCOPE : _ref$scope;
  switch (action.type) {
    case SHOW:
      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, scope, (state[scope] || 0) + 1));
    case HIDE:
      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, scope, Math.max(0, (state[scope] || 1) - 1)));
    case RESET:
      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, scope, 0));
    default:
      return state;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInNob3dMb2FkaW5nIiwiaGlkZUxvYWRpbmciLCJyZXNldExvYWRpbmciLCJsb2FkaW5nQmFyUmVkdWNlciIsIkRFRkFVTFRfU0NPUEUiLCJSRVNFVCIsIkhJREUiLCJTSE9XIiwib3duS2V5cyIsIm9iamVjdCIsImVudW1lcmFibGVPbmx5Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsInN5bWJvbHMiLCJmaWx0ZXIiLCJzeW0iLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwicHVzaCIsImFwcGx5IiwiX29iamVjdFNwcmVhZCIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJmb3JFYWNoIiwia2V5IiwiX2RlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJvYmoiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsInNjb3BlIiwidW5kZWZpbmVkIiwidHlwZSIsInBheWxvYWQiLCJzdGF0ZSIsImFjdGlvbiIsIl9yZWYiLCJfcmVmJHNjb3BlIiwiTWF0aCIsIm1heCJdLCJzb3VyY2VzIjpbImxvYWRpbmdfYmFyX2R1Y2tzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5zaG93TG9hZGluZyA9IHNob3dMb2FkaW5nO1xuZXhwb3J0cy5oaWRlTG9hZGluZyA9IGhpZGVMb2FkaW5nO1xuZXhwb3J0cy5yZXNldExvYWRpbmcgPSByZXNldExvYWRpbmc7XG5leHBvcnRzLmxvYWRpbmdCYXJSZWR1Y2VyID0gbG9hZGluZ0JhclJlZHVjZXI7XG5leHBvcnRzLkRFRkFVTFRfU0NPUEUgPSBleHBvcnRzLlJFU0VUID0gZXhwb3J0cy5ISURFID0gZXhwb3J0cy5TSE9XID0gdm9pZCAwO1xuXG5mdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxudmFyIFNIT1cgPSAnbG9hZGluZy1iYXIvU0hPVyc7XG5leHBvcnRzLlNIT1cgPSBTSE9XO1xudmFyIEhJREUgPSAnbG9hZGluZy1iYXIvSElERSc7XG5leHBvcnRzLkhJREUgPSBISURFO1xudmFyIFJFU0VUID0gJ2xvYWRpbmctYmFyL1JFU0VUJztcbmV4cG9ydHMuUkVTRVQgPSBSRVNFVDtcbnZhciBERUZBVUxUX1NDT1BFID0gJ2RlZmF1bHQnO1xuZXhwb3J0cy5ERUZBVUxUX1NDT1BFID0gREVGQVVMVF9TQ09QRTtcblxuZnVuY3Rpb24gc2hvd0xvYWRpbmcoKSB7XG4gIHZhciBzY29wZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogREVGQVVMVF9TQ09QRTtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBTSE9XLFxuICAgIHBheWxvYWQ6IHtcbiAgICAgIHNjb3BlOiBzY29wZVxuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gaGlkZUxvYWRpbmcoKSB7XG4gIHZhciBzY29wZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogREVGQVVMVF9TQ09QRTtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBISURFLFxuICAgIHBheWxvYWQ6IHtcbiAgICAgIHNjb3BlOiBzY29wZVxuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gcmVzZXRMb2FkaW5nKCkge1xuICB2YXIgc2NvcGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IERFRkFVTFRfU0NPUEU7XG4gIHJldHVybiB7XG4gICAgdHlwZTogUkVTRVQsXG4gICAgcGF5bG9hZDoge1xuICAgICAgc2NvcGU6IHNjb3BlXG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBsb2FkaW5nQmFyUmVkdWNlcigpIHtcbiAgdmFyIHN0YXRlID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgdmFyIGFjdGlvbiA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG5cbiAgdmFyIF9yZWYgPSBhY3Rpb24ucGF5bG9hZCB8fCB7fSxcbiAgICAgIF9yZWYkc2NvcGUgPSBfcmVmLnNjb3BlLFxuICAgICAgc2NvcGUgPSBfcmVmJHNjb3BlID09PSB2b2lkIDAgPyBERUZBVUxUX1NDT1BFIDogX3JlZiRzY29wZTtcblxuICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgY2FzZSBTSE9XOlxuICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgc3RhdGUpLCB7fSwgX2RlZmluZVByb3BlcnR5KHt9LCBzY29wZSwgKHN0YXRlW3Njb3BlXSB8fCAwKSArIDEpKTtcblxuICAgIGNhc2UgSElERTpcbiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHN0YXRlKSwge30sIF9kZWZpbmVQcm9wZXJ0eSh7fSwgc2NvcGUsIE1hdGgubWF4KDAsIChzdGF0ZVtzY29wZV0gfHwgMSkgLSAxKSkpO1xuXG4gICAgY2FzZSBSRVNFVDpcbiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHN0YXRlKSwge30sIF9kZWZpbmVQcm9wZXJ0eSh7fSwgc2NvcGUsIDApKTtcblxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gc3RhdGU7XG4gIH1cbn0iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBRVpBLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDQyxPQUFPLEVBQUUsWUFBWSxFQUFFO0VBQzNDQyxLQUFLLEVBQUU7QUFDVCxDQUFDLENBQUM7QUFDRkQsT0FBTyxDQUFDRSxXQUFXLEdBQUdBLFdBQVc7QUFDakNGLE9BQU8sQ0FBQ0csV0FBVyxHQUFHQSxXQUFXO0FBQ2pDSCxPQUFPLENBQUNJLFlBQVksR0FBR0EsWUFBWTtBQUNuQ0osT0FBTyxDQUFDSyxpQkFBaUIsR0FBR0EsaUJBQWlCO0FBQzdDTCxPQUFPLENBQUNNLGFBQWEsR0FBR04sT0FBTyxDQUFDTyxLQUFLLEdBQUdQLE9BQU8sQ0FBQ1EsSUFBSSxHQUFHUixPQUFPLENBQUNTLElBQUksR0FBRyxLQUFLLENBQUM7QUFFNUUsU0FBU0MsT0FBT0EsQ0FBQ0MsTUFBTSxFQUFFQyxjQUFjLEVBQUU7RUFBRSxJQUFJQyxJQUFJLEdBQUdmLE1BQU0sQ0FBQ2UsSUFBSSxDQUFDRixNQUFNLENBQUM7RUFBRSxJQUFJYixNQUFNLENBQUNnQixxQkFBcUIsRUFBRTtJQUFFLElBQUlDLE9BQU8sR0FBR2pCLE1BQU0sQ0FBQ2dCLHFCQUFxQixDQUFDSCxNQUFNLENBQUM7SUFBRSxJQUFJQyxjQUFjLEVBQUVHLE9BQU8sR0FBR0EsT0FBTyxDQUFDQyxNQUFNLENBQUMsVUFBVUMsR0FBRyxFQUFFO01BQUUsT0FBT25CLE1BQU0sQ0FBQ29CLHdCQUF3QixDQUFDUCxNQUFNLEVBQUVNLEdBQUcsQ0FBQyxDQUFDRSxVQUFVO0lBQUUsQ0FBQyxDQUFDO0lBQUVOLElBQUksQ0FBQ08sSUFBSSxDQUFDQyxLQUFLLENBQUNSLElBQUksRUFBRUUsT0FBTyxDQUFDO0VBQUU7RUFBRSxPQUFPRixJQUFJO0FBQUU7QUFFcFYsU0FB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