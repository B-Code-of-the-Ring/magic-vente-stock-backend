{"version":3,"names":["cov_xb2ab9a9x","actualCoverage","s","axios_1","tslib_1","__importDefault","require","toolkit_1","reducer_utils_1","initialState","loading","errorMessage","logs","loggers","health","metrics","threadDump","configuration","configProps","env","totalItems","exports","getSystemHealth","createAsyncThunk","f","__awaiter","default","get","serializeError","serializeAxiosError","getSystemMetrics","getSystemThreadDump","getLoggers","setLoggers","_a","name","configuredLevel","post","changeLogLevel","dispatch","getConfigurations","getEnv","AdministrationSlice","createSlice","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","data","Object","assign","addMatcher","isPending","isRejected","error","message","reducer"],"sources":["/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/modules/administration/administration.reducer.ts"],"sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk, createSlice, isPending, isRejected } from '@reduxjs/toolkit';\n\nimport { serializeAxiosError } from 'app/shared/reducers/reducer.utils';\nimport { AppThunk } from 'app/config/store';\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  logs: {\n    loggers: [] as any[],\n  },\n  health: {} as any,\n  metrics: {} as any,\n  threadDump: [],\n  configuration: {\n    configProps: {} as any,\n    env: {} as any,\n  },\n  totalItems: 0,\n};\n\nexport type AdministrationState = Readonly<typeof initialState>;\n\n// Actions\n\nexport const getSystemHealth = createAsyncThunk('administration/fetch_health', async () => axios.get<any>('management/health'), {\n  serializeError: serializeAxiosError,\n});\n\nexport const getSystemMetrics = createAsyncThunk('administration/fetch_metrics', async () => axios.get<any>('management/jhimetrics'), {\n  serializeError: serializeAxiosError,\n});\n\nexport const getSystemThreadDump = createAsyncThunk(\n  'administration/fetch_thread_dump',\n  async () => axios.get<any>('management/threaddump'),\n  {\n    serializeError: serializeAxiosError,\n  },\n);\n\nexport const getLoggers = createAsyncThunk('administration/fetch_logs', async () => axios.get<any>('management/loggers'), {\n  serializeError: serializeAxiosError,\n});\n\nexport const setLoggers = createAsyncThunk(\n  'administration/fetch_logs_change_level',\n  async ({ name, configuredLevel }: any) => axios.post(`management/loggers/${name}`, { configuredLevel }),\n  {\n    serializeError: serializeAxiosError,\n  },\n);\n\nexport const changeLogLevel: (name, configuredLevel) => AppThunk = (name, configuredLevel) => async dispatch => {\n  await dispatch(setLoggers({ name, configuredLevel }));\n  dispatch(getLoggers());\n};\n\nexport const getConfigurations = createAsyncThunk(\n  'administration/fetch_configurations',\n  async () => axios.get<any>('management/configprops'),\n  {\n    serializeError: serializeAxiosError,\n  },\n);\n\nexport const getEnv = createAsyncThunk('administration/fetch_env', async () => axios.get<any>('management/env'), {\n  serializeError: serializeAxiosError,\n});\n\nexport const AdministrationSlice = createSlice({\n  name: 'administration',\n  initialState: initialState as AdministrationState,\n  reducers: {},\n  extraReducers(builder) {\n    builder\n      .addCase(getSystemHealth.fulfilled, (state, action) => {\n        state.loading = false;\n        state.health = action.payload.data;\n      })\n      .addCase(getSystemMetrics.fulfilled, (state, action) => {\n        state.loading = false;\n        state.metrics = action.payload.data;\n      })\n      .addCase(getSystemThreadDump.fulfilled, (state, action) => {\n        state.loading = false;\n        state.threadDump = action.payload.data;\n      })\n      .addCase(getLoggers.fulfilled, (state, action) => {\n        state.loading = false;\n        state.logs = {\n          loggers: action.payload.data.loggers,\n        };\n      })\n      .addCase(getConfigurations.fulfilled, (state, action) => {\n        state.loading = false;\n        state.configuration = {\n          ...state.configuration,\n          configProps: action.payload.data,\n        };\n      })\n      .addCase(getEnv.fulfilled, (state, action) => {\n        state.loading = false;\n        state.configuration = {\n          ...state.configuration,\n          env: action.payload.data,\n        };\n      })\n      .addMatcher(isPending(getSystemHealth, getSystemMetrics, getSystemThreadDump, getLoggers, getConfigurations, getEnv), state => {\n        state.errorMessage = null;\n        state.loading = true;\n      })\n      .addMatcher(\n        isRejected(getSystemHealth, getSystemMetrics, getSystemThreadDump, getLoggers, getConfigurations, getEnv),\n        (state, action) => {\n          state.errorMessage = action.error.message;\n          state.loading = false;\n        },\n      );\n  },\n});\n\n// Reducer\nexport default AdministrationSlice.reducer;\n"],"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","ignoreList":[]}