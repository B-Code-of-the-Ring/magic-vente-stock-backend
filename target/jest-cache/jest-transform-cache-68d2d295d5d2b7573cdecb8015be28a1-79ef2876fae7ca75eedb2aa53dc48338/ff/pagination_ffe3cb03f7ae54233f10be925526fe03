49b034b01c4a909e3d7d7ac207b4d319
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.JhiPagination = void 0;
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importDefault(require("react"));
const reactstrap_1 = require("reactstrap");
class JhiPagination extends react_1.default.Component {
  constructor(props) {
    super(props);
    this.updateActivePage = currentPage => () => {
      this.setState({
        currentPage
      });
      this.props.onSelect(currentPage);
    };
    this.previousPage = () => {
      this.setState({
        currentPage: this.state.currentPage - 1
      });
      this.props.onSelect(this.state.currentPage - 1);
    };
    this.nextPage = () => {
      this.setState({
        currentPage: this.state.currentPage + 1
      });
      this.props.onSelect(this.state.currentPage + 1);
    };
    this.itemsToDisplay = activePage => {
      const items = [];
      let item = {};
      let previousItem = {};
      const maxPage = this.getMaxPage();
      const padSup = Math.floor((this.props.maxButtons - 1) / 2);
      const modulo = (this.props.maxButtons - 1) % 2;
      const padInf = padSup + modulo;
      for (let j = 0; j < maxPage; j++) {
        item = {};
        if (j === 0 || j === maxPage - 1 || j === activePage - 1 || j === activePage - 2 || activePage === 1 && j === 1 || activePage - padInf < j && j < activePage + padSup) {
          item.display = 'display';
        } else if (previousItem.display === 'disabled') {
          item.display = 'hidden';
        } else {
          item.display = 'disabled';
        }
        items.push(item);
        previousItem = Object.assign({}, item);
        if (item.display === 'hidden') {
          previousItem.display = 'disabled';
        }
      }
      return items;
    };
    this.displayPaginationItem = (i, activePage) => react_1.default.createElement(reactstrap_1.PaginationItem, Object.assign({}, activePage === i + 1 && {
      active: true
    }, {
      key: i
    }), react_1.default.createElement(reactstrap_1.PaginationLink, {
      onClick: this.updateActivePage(i + 1)
    }, i + 1));
    this.cleanActivePage = () => {
      const {
        totalItems,
        itemsPerPage,
        activePage
      } = this.props;
      const cleanActivePage = totalItems === 0 ? 1 : Math.min(activePage, Math.ceil(totalItems / itemsPerPage));
      if (cleanActivePage !== activePage) {
        this.updateActivePage(cleanActivePage)();
      }
    };
    this.getMaxPage = () => {
      const {
        itemsPerPage,
        totalItems
      } = this.props;
      const division = Math.floor(totalItems / itemsPerPage);
      const modulo = totalItems % itemsPerPage;
      return division + (modulo !== 0 ? 1 : 0);
    };
    this.state = {
      currentPage: this.props.activePage
    };
  }
  render() {
    this.cleanActivePage();
    const {
      activePage
    } = this.props;
    const maxPage = this.getMaxPage();
    return react_1.default.createElement("div", null, react_1.default.createElement(reactstrap_1.Pagination, null, react_1.default.createElement(reactstrap_1.PaginationItem, Object.assign({}, activePage === 1 && {
      disabled: true
    }), react_1.default.createElement(reactstrap_1.PaginationLink, {
      first: true,
      onClick: this.updateActivePage(1)
    })), react_1.default.createElement(reactstrap_1.PaginationItem, Object.assign({}, activePage === 1 && {
      disabled: true
    }), react_1.default.createElement(reactstrap_1.PaginationLink, {
      previous: true,
      onClick: this.previousPage
    })), this.itemsToDisplay(activePage).map((paginationItem, i) => paginationItem.display === 'display' ? this.displayPaginationItem(i, activePage) : paginationItem.display === 'disabled' ? react_1.default.createElement(reactstrap_1.PaginationItem, {
      disabled: true,
      key: i
    }, react_1.default.createElement(reactstrap_1.PaginationLink, null, "...")) : null), react_1.default.createElement(reactstrap_1.PaginationItem, Object.assign({}, activePage === maxPage && {
      disabled: true
    }), react_1.default.createElement(reactstrap_1.PaginationLink, {
      next: true,
      onClick: this.nextPage
    })), react_1.default.createElement(reactstrap_1.PaginationItem, Object.assign({}, activePage === maxPage && {
      disabled: true
    }), react_1.default.createElement(reactstrap_1.PaginationLink, {
      last: true,
      onClick: this.updateActivePage(maxPage)
    }))));
  }
}
exports.JhiPagination = JhiPagination;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwidHNsaWJfMSIsIl9faW1wb3J0RGVmYXVsdCIsInJlcXVpcmUiLCJyZWFjdHN0cmFwXzEiLCJKaGlQYWdpbmF0aW9uIiwiZGVmYXVsdCIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJ1cGRhdGVBY3RpdmVQYWdlIiwiY3VycmVudFBhZ2UiLCJzZXRTdGF0ZSIsIm9uU2VsZWN0IiwicHJldmlvdXNQYWdlIiwic3RhdGUiLCJuZXh0UGFnZSIsIml0ZW1zVG9EaXNwbGF5IiwiYWN0aXZlUGFnZSIsIml0ZW1zIiwiaXRlbSIsInByZXZpb3VzSXRlbSIsIm1heFBhZ2UiLCJnZXRNYXhQYWdlIiwicGFkU3VwIiwiTWF0aCIsImZsb29yIiwibWF4QnV0dG9ucyIsIm1vZHVsbyIsInBhZEluZiIsImoiLCJkaXNwbGF5IiwicHVzaCIsIk9iamVjdCIsImFzc2lnbiIsImRpc3BsYXlQYWdpbmF0aW9uSXRlbSIsImkiLCJjcmVhdGVFbGVtZW50IiwiUGFnaW5hdGlvbkl0ZW0iLCJhY3RpdmUiLCJrZXkiLCJQYWdpbmF0aW9uTGluayIsIm9uQ2xpY2siLCJjbGVhbkFjdGl2ZVBhZ2UiLCJ0b3RhbEl0ZW1zIiwiaXRlbXNQZXJQYWdlIiwibWluIiwiY2VpbCIsImRpdmlzaW9uIiwicmVuZGVyIiwiUGFnaW5hdGlvbiIsImRpc2FibGVkIiwiZmlyc3QiLCJwcmV2aW91cyIsIm1hcCIsInBhZ2luYXRpb25JdGVtIiwibmV4dCIsImxhc3QiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudC9wYWdpbmF0aW9uL3BhZ2luYXRpb24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsTUFBQUEsT0FBQSxHQUFBQyxPQUFBLENBQUFDLGVBQUEsQ0FBQUMsT0FBQTtBQUNBLE1BQUFDLFlBQUEsR0FBQUQsT0FBQTtBQWNBLE1BQWFFLGFBQWMsU0FBUUwsT0FBQSxDQUFBTSxP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