{"file":"/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/shared/reducers/authentication.spec.ts","mappings":"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","names":[],"sources":["/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/shared/reducers/authentication.spec.ts"],"sourcesContent":["import axios from 'axios';\nimport sinon from 'sinon';\nimport { Storage } from 'react-jhipster';\nimport { configureStore, createReducer } from '@reduxjs/toolkit';\n\nimport authentication, {\n  getAccount,\n  authenticate,\n  login,\n  clearAuthentication,\n  logout,\n  logoutSession,\n  clearAuthToken,\n  authError,\n  clearAuth,\n  initialState,\n} from 'app/shared/reducers/authentication';\n\ndescribe('Authentication reducer tests', () => {\n  function isAccountEmpty(state): boolean {\n    return Object.keys(state.account).length === 0;\n  }\n\n  describe('Common tests', () => {\n    it('should return the initial state', () => {\n      const toTest = authentication(undefined, { type: '' });\n      expect(toTest).toMatchObject({\n        loading: false,\n        isAuthenticated: false,\n        errorMessage: null, // Errors returned from server side\n        loginSuccess: false,\n        loginError: false, // Errors returned from server side\n        showModalLogin: false,\n        redirectMessage: null,\n      });\n      expect(isAccountEmpty(toTest));\n    });\n  });\n\n  describe('Requests', () => {\n    it('should detect a request', () => {\n      expect(authentication(undefined, { type: authenticate.pending.type })).toMatchObject({\n        loading: true,\n      });\n      expect(authentication(undefined, { type: getAccount.pending.type })).toMatchObject({\n        loading: true,\n      });\n    });\n  });\n\n  describe('Success', () => {\n    it('should detect a success on login', () => {\n      const toTest = authentication(undefined, { type: authenticate.fulfilled.type });\n      expect(toTest).toMatchObject({\n        loading: false,\n        loginError: false,\n        loginSuccess: true,\n        showModalLogin: false,\n      });\n    });\n\n    it('should detect a success on get session and be authenticated', () => {\n      const payload = { data: { activated: true } };\n      const toTest = authentication(undefined, { type: getAccount.fulfilled.type, payload });\n      expect(toTest).toMatchObject({\n        isAuthenticated: true,\n        loading: false,\n        account: payload.data,\n      });\n    });\n\n    it('should detect a success on get session and not be authenticated', () => {\n      const payload = { data: { activated: false } };\n      const toTest = authentication(undefined, { type: getAccount.fulfilled.type, payload });\n      expect(toTest).toMatchObject({\n        isAuthenticated: false,\n        loading: false,\n        account: payload.data,\n      });\n    });\n  });\n\n  describe('Failure', () => {\n    it('should detect a failure on login', () => {\n      const error = { message: 'Something happened.' };\n      const toTest = authentication(undefined, { type: authenticate.rejected.type, error });\n\n      expect(toTest).toMatchObject({\n        errorMessage: error.message,\n        showModalLogin: true,\n        loginError: true,\n      });\n      expect(isAccountEmpty(toTest));\n    });\n\n    it('should detect a failure', () => {\n      const error = { message: 'Something happened.' };\n      const toTest = authentication(undefined, { type: getAccount.rejected.type, error });\n\n      expect(toTest).toMatchObject({\n        loading: false,\n        isAuthenticated: false,\n        showModalLogin: true,\n        errorMessage: error.message,\n      });\n      expect(isAccountEmpty(toTest));\n    });\n  });\n\n  describe('Other cases', () => {\n    it('should properly reset the current state when a logout is requested', () => {\n      const toTest = authentication(undefined, logoutSession());\n      expect(toTest).toMatchObject({\n        loading: false,\n        isAuthenticated: false,\n        loginSuccess: false,\n        loginError: false,\n        showModalLogin: true,\n        errorMessage: null,\n        redirectMessage: null,\n      });\n      expect(isAccountEmpty(toTest));\n    });\n\n    it('should properly define an error message and change the current state to display the login modal', () => {\n      const message = 'redirect me please';\n      const toTest = authentication(undefined, authError(message));\n      expect(toTest).toMatchObject({\n        loading: false,\n        isAuthenticated: false,\n        loginSuccess: false,\n        loginError: false,\n        showModalLogin: true,\n        errorMessage: null,\n        redirectMessage: message,\n      });\n      expect(isAccountEmpty(toTest));\n    });\n\n    it('should clear authentication', () => {\n      const toTest = authentication({ ...initialState, isAuthenticated: true }, clearAuth());\n      expect(toTest).toMatchObject({\n        loading: false,\n        showModalLogin: true,\n        isAuthenticated: false,\n      });\n    });\n  });\n\n  describe('Actions', () => {\n    let store;\n\n    const resolvedObject = { value: 'whatever' };\n    const getState = jest.fn();\n    const dispatch = jest.fn();\n    const extra = {};\n    beforeEach(() => {\n      store = configureStore({\n        reducer: (state = [], action) => [...state, action],\n      });\n      axios.get = sinon.stub().returns(Promise.resolve(resolvedObject));\n    });\n\n    it('dispatches GET_SESSION_PENDING and GET_SESSION_FULFILLED actions', async () => {\n      const result = await getAccount()(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(getAccount.fulfilled.match(result)).toBe(true);\n    });\n\n    it('dispatches LOGOUT actions', async () => {\n      await store.dispatch(logout());\n      expect(store.getState()).toEqual([expect.any(Object), expect.objectContaining(logoutSession())]);\n    });\n\n    it('dispatches CLEAR_AUTH actions', async () => {\n      await store.dispatch(clearAuthentication('message'));\n      expect(store.getState()).toEqual([expect.any(Object), expect.objectContaining(authError('message')), clearAuth()]);\n    });\n\n    it('dispatches LOGIN, GET_SESSION and SET_LOCALE success and request actions', async () => {\n      const loginResponse = { headers: { authorization: 'auth' } };\n      axios.post = sinon.stub().returns(Promise.resolve(loginResponse));\n\n      const result = await authenticate('test', 'test')(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(authenticate.fulfilled.match(result)).toBe(true);\n    });\n  });\n  describe('clearAuthToken', () => {\n    let store;\n    const reducer = createReducer({ authentication: { account: { langKey: 'en' } } }, builder => {\n      builder.addDefaultCase(() => {});\n    });\n    beforeEach(() => {\n      store = configureStore({\n        reducer,\n      });\n    });\n    it('clears the session token on clearAuthToken', async () => {\n      const AUTH_TOKEN_KEY = 'jhi-authenticationToken';\n      const loginResponse = { headers: { authorization: 'Bearer TestToken' } };\n      axios.post = sinon.stub().returns(Promise.resolve(loginResponse));\n\n      await store.dispatch(login('test', 'test'));\n      expect(Storage.session.get(AUTH_TOKEN_KEY)).toBe('TestToken');\n      expect(Storage.local.get(AUTH_TOKEN_KEY)).toBe(undefined);\n      clearAuthToken();\n      expect(Storage.session.get(AUTH_TOKEN_KEY)).toBe(undefined);\n      expect(Storage.local.get(AUTH_TOKEN_KEY)).toBe(undefined);\n    });\n    it('clears the local storage token on clearAuthToken', async () => {\n      const AUTH_TOKEN_KEY = 'jhi-authenticationToken';\n      const loginResponse = { headers: { authorization: 'Bearer TestToken' } };\n      axios.post = sinon.stub().returns(Promise.resolve(loginResponse));\n\n      await store.dispatch(login('user', 'user', true));\n      expect(Storage.session.get(AUTH_TOKEN_KEY)).toBe(undefined);\n      expect(Storage.local.get(AUTH_TOKEN_KEY)).toBe('TestToken');\n      clearAuthToken();\n      expect(Storage.session.get(AUTH_TOKEN_KEY)).toBe(undefined);\n      expect(Storage.local.get(AUTH_TOKEN_KEY)).toBe(undefined);\n    });\n  });\n});\n"],"version":3}