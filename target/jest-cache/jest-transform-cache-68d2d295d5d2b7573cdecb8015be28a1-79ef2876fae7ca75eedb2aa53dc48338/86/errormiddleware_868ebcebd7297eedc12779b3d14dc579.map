{"version":3,"names":["getErrorMessage","errorData","cov_2oc8cu7gk1","f","message","s","fieldErrors","b","forEach","fErr","field","objectName","exports","default","next","action","DEVELOPMENT","error","console","type","JSON","stringify","response","data"],"sources":["/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/config/error-middleware.ts"],"sourcesContent":["const getErrorMessage = errorData => {\n  let message = errorData.message;\n  if (errorData.fieldErrors) {\n    errorData.fieldErrors.forEach(fErr => {\n      message += `\\nfield: ${fErr.field},  Object: ${fErr.objectName}, message: ${fErr.message}\\n`;\n    });\n  }\n  return message;\n};\n\nexport default () => next => action => {\n  /**\n   *\n   * The error middleware serves to log error messages from dispatch\n   * It need not run in production\n   */\n  if (DEVELOPMENT) {\n    const { error } = action;\n    if (error) {\n      console.error(`${action.type} caught at middleware with reason: ${JSON.stringify(error.message)}.`);\n      if (error.response && error.response.data) {\n        const message = getErrorMessage(error.response.data);\n        console.error(`Actual cause: ${message}`);\n      }\n    }\n  }\n  // Dispatch initial action\n  return next(action);\n};\n"],"mappingseAAe,GAAGC,SAAS,IAAG;EAAA;EAAAC,cAAA,GAAAC,CAAA;EAClC,IAAIC,OAAO;EAAA;EAAA,CAAAF,cAAA,GAAAG,CAAA,OAAGJ,SAAS,CAACG,OAAO;EAAC;EAAAF,cAAA,GAAAG,CAAA;EAChC,IAAIJ,SAAS,CAACK,WAAW,EAAE;IAAA;IAAAJ,cAAA,GAAAK,CAAA;IAAAL,cAAA,GAAAG,CAAA;IACzBJ,SAAS,CAACK,WAAW,CAACE,OAAO,CAACC,IAAI,IAAG;MAAA;MAAAP,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAG,CAAA;MACnCD,OAAO,IAAI,YAAYK,IAAI,CAACC,KAAK,cAAcD,IAAI,CAACE,UAAU,cAAcF,IAAI,CAACL,OAAO,IAAI;IAC9F,CAAC,CAAC;EACJ,CAAC;EAAA;EAAA;IAAAF,cAAA,GAAAK,CAAA;EAAA;EAAAL,cAAA,GAAAG,CAAA;EACD,OAAOD,OAAO;AAChB,CAAC;AAAC;AAAAF,cAAA,GAAAG,CAAA;AAEFO,OAAA,CAAAC,OAAA,GAAe,MAAM;EAAA;EAAAX,cAAA,GAAAC,CAAA;EAAAD,cAAA,GAAAG,CAAA;EAAA,OAAAS,IAAI,IAAI;IAAA;IAAAZ,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAG,CAAA;IAAA,OAAAU,MAAM,IAAG;MAAA;MAAAb,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAG,CAAA;MACpC;;;;;MAKA,IAAIW,WAAW,EAAE;QAAA;QAAAd,cAAA,GAAAK,CAAA;QACf,MAAM;UAAEU;QAAK,CAAE;QAAA;QAAA,CAAAf,cAAA,GAAAG,CAAA,QAAGU,MAAM;QAAC;QAAAb,cAAA,GAAAG,CAAA;QACzB,IAAIY,KAAK,EAAE;UAAA;UAAAf,cAAA,GAAAK,CAAA;UAAAL,cAAA,GAAAG,CAAA;UACTa,OAAO,CAACD,KAAK,CAAC,GAAGF,MAAM,CAACI,IAAI,sCAAsCC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAACb,OAAO,CAAC,GAAG,CAAC;UAAC;UAAAF,cAAA,GAAAG,CAAA;UACpG;UAAI;UAAA,CAAAH,cAAA,GAAAK,CAAA,UAAAU,KAAK,CAACK,QAAQ;UAAA;UAAA,CAAApB,cAAA,GAAAK,CAAA,UAAIU,KAAK,CAACK,QAAQ,CAACC,IAAI,GAAE;YAAA;YAAArB,cAAA,GAAAK,CAAA;YACzC,MAAMH,OAAO;YAAA;YAAA,CAAAF,cAAA,GAAAG,CAAA,QAAGL,eAAe,CAACiB,KAAK,CAACK,QAAQ,CAACC,IAAI,CAAC;YAAC;YAAArB,cAAA,GAAAG,CAAA;YACrDa,OAAO,CAACD,KAAK,CAAC,iBAAiBb,OAAO,EAAE,CAAC;UAC3C,CAAC;UAAA;UAAA;YAAAF,cAAA,GAAAK,CAAA;UAAA;QACH,CAAC;QAAA;QAAA;UAAAL,cAAA,GAAAK,CAAA;QAAA;MACH,CAAC;MAAA;MAAA;QAAAL,cAAA,GAAAK,CAAA;MAAA;MACD;MAAAL,cAAA,GAAAG,CAAA;MACA,OAAOS,IAAI,CAACC,MAAM,CAAC;IACrB,CAAC;EAAD,CAAC;AAAD,CAAC","ignoreList":[]}