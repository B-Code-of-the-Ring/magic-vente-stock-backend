15cd6e14381721b6e4267c4390cf5fe2
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importDefault(require("react"));
const react_2 = require("@testing-library/react");
const react_redux_1 = require("react-redux");
const react_router_dom_1 = require("react-router-dom");
const store_1 = tslib_1.__importDefault(require("app/config/store"));
const header_1 = tslib_1.__importDefault(require("./header"));
describe('Header', () => {
    let mountedWrapper;
    const devProps = {
        isAuthenticated: true,
        isAdmin: true,
        ribbonEnv: 'dev',
        isInProduction: false,
        isOpenAPIEnabled: true,
    };
    const prodProps = Object.assign(Object.assign({}, devProps), { ribbonEnv: 'prod', isInProduction: true, isOpenAPIEnabled: false });
    const userProps = Object.assign(Object.assign({}, prodProps), { isAdmin: false });
    const guestProps = Object.assign(Object.assign({}, prodProps), { isAdmin: false, isAuthenticated: false });
    const wrapper = (props = devProps) => {
        if (!mountedWrapper) {
            const store = (0, store_1.default)();
            const { container } = (0, react_2.render)(react_1.default.createElement(react_redux_1.Provider, { store: store },
                react_1.default.createElement(react_router_dom_1.MemoryRouter, null,
                    react_1.default.createElement(header_1.default, Object.assign({}, props)))));
            mountedWrapper = container.innerHTML;
        }
        return mountedWrapper;
    };
    beforeEach(() => {
        mountedWrapper = undefined;
    });
    // All tests will go here
    it('Renders a Header component in dev profile with LoadingBar, Navbar, Nav and dev ribbon.', () => {
        const html = wrapper();
        // Find Navbar component
        expect(html).toContain('navbar');
        // Find AdminMenu component
        expect(html).toContain('admin-menu');
        // Find EntitiesMenu component
        expect(html).toContain('entity-menu');
        // Find AccountMenu component
        expect(html).toContain('account-menu');
        // Ribbon
        expect(html).toContain('ribbon');
    });
    it('Renders a Header component in prod profile with LoadingBar, Navbar, Nav.', () => {
        const html = wrapper(prodProps);
        // Find Navbar component
        expect(html).toContain('navbar');
        // Find AdminMenu component
        expect(html).toContain('admin-menu');
        // Find EntitiesMenu component
        expect(html).toContain('entity-menu');
        // Find AccountMenu component
        expect(html).toContain('account-menu');
        // No Ribbon
        expect(html).not.toContain('ribbon');
    });
    it('Renders a Header component in prod profile with logged in User', () => {
        const html = wrapper(userProps);
        // Find Navbar component
        expect(html).toContain('navbar');
        // Not find AdminMenu component
        expect(html).not.toContain('admin-menu');
        // Find EntitiesMenu component
        expect(html).toContain('entity-menu');
        // Find AccountMenu component
        expect(html).toContain('account-menu');
    });
    it('Renders a Header component in prod profile with no logged in User', () => {
        const html = wrapper(guestProps);
        // Find Navbar component
        expect(html).toContain('navbar');
        // Not find AdminMenu component
        expect(html).not.toContain('admin-menu');
        // Not find EntitiesMenu component
        expect(html).not.toContain('entity-menu');
        // Find AccountMenu component
        expect(html).toContain('account-menu');
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,