83486c2ced3ee42188621600c00a9f04
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GarbageCollectorMetrics = void 0;
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importDefault(require("react"));
const formatter_1 = require("../../formatter");
const reactstrap_1 = require("reactstrap");
class GarbageCollectorMetrics extends react_1.default.Component {
  render() {
    const {
      garbageCollectorMetrics,
      wholeNumberFormat
    } = this.props;
    return react_1.default.createElement("div", null, react_1.default.createElement("h3", null, "Garbage Collection"), react_1.default.createElement(reactstrap_1.Row, null, react_1.default.createElement(reactstrap_1.Col, {
      md: "4"
    }, react_1.default.createElement("span", null, "GC Live Data Size/GC Max Data Size (", react_1.default.createElement(formatter_1.TextFormat, {
      value: garbageCollectorMetrics['jvm.gc.live.data.size'] / 1048576,
      type: 'number',
      format: wholeNumberFormat
    }), "M / ", react_1.default.createElement(formatter_1.TextFormat, {
      value: garbageCollectorMetrics['jvm.gc.max.data.size'] / 1048576,
      type: 'number',
      format: wholeNumberFormat
    }), "M)"), react_1.default.createElement(reactstrap_1.Progress, {
      animated: true,
      color: "success",
      value: 100 * garbageCollectorMetrics['jvm.gc.live.data.size'] / garbageCollectorMetrics['jvm.gc.max.data.size']
    }, react_1.default.createElement(formatter_1.TextFormat, {
      value: 100 * garbageCollectorMetrics['jvm.gc.live.data.size'] / garbageCollectorMetrics['jvm.gc.max.data.size'],
      type: 'number',
      format: wholeNumberFormat
    }), "%")), react_1.default.createElement(reactstrap_1.Col, {
      md: "4"
    }, react_1.default.createElement("span", null, "GC Memory Promoted/GC Memory Allocated (", react_1.default.createElement(formatter_1.TextFormat, {
      value: garbageCollectorMetrics['jvm.gc.memory.promoted'] / 1048576,
      type: 'number',
      format: wholeNumberFormat
    }), "M /", ' ', react_1.default.createElement(formatter_1.TextFormat, {
      value: garbageCollectorMetrics['jvm.gc.memory.allocated'] / 1048576,
      type: 'number',
      format: wholeNumberFormat
    }), "M)"), react_1.default.createElement(reactstrap_1.Progress, {
      animated: true,
      color: "success",
      value: 100 * garbageCollectorMetrics['jvm.gc.memory.promoted'] / garbageCollectorMetrics['jvm.gc.memory.allocated']
    }, react_1.default.createElement(formatter_1.TextFormat, {
      value: 100 * garbageCollectorMetrics['jvm.gc.memory.promoted'] / garbageCollectorMetrics['jvm.gc.memory.allocated'],
      type: 'number',
      format: wholeNumberFormat
    }), "%")), react_1.default.createElement(reactstrap_1.Col, {
      md: "4"
    }, react_1.default.createElement(reactstrap_1.Row, null, react_1.default.createElement(reactstrap_1.Col, {
      md: "9"
    }, "Classes loaded"), react_1.default.createElement(reactstrap_1.Col, {
      md: "3"
    }, garbageCollectorMetrics.classesLoaded)), react_1.default.createElement(reactstrap_1.Row, null, react_1.default.createElement(reactstrap_1.Col, {
      md: "9"
    }, "Classes unloaded"), react_1.default.createElement(reactstrap_1.Col, {
      md: "3"
    }, garbageCollectorMetrics.classesUnloaded)))), react_1.default.createElement(reactstrap_1.Table, null, react_1.default.createElement("thead", null, react_1.default.createElement("tr", null, react_1.default.createElement("th", null), react_1.default.createElement("th", {
      className: "text-end"
    }, "Count"), react_1.default.createElement("th", {
      className: "text-end"
    }, "Mean"), react_1.default.createElement("th", {
      className: "text-end"
    }, "Min"), react_1.default.createElement("th", {
      className: "text-end"
    }, "p50"), react_1.default.createElement("th", {
      className: "text-end"
    }, "p75"), react_1.default.createElement("th", {
      className: "text-end"
    }, "p95"), react_1.default.createElement("th", {
      className: "text-end"
    }, "p99"), react_1.default.createElement("th", {
      className: "text-end"
    }, "Max"))), react_1.default.createElement("tbody", null, react_1.default.createElement("tr", null, react_1.default.createElement("td", null, "jvm.gc.pause"), react_1.default.createElement("td", {
      className: "text-end"
    }, react_1.default.createElement(formatter_1.TextFormat, {
      value: garbageCollectorMetrics.count,
      type: 'number',
      format: '0,0.[000]'
    })), react_1.default.createElement("td", {
      className: "text-end"
    }, react_1.default.createElement(formatter_1.TextFormat, {
      value: garbageCollectorMetrics.mean,
      type: 'number',
      format: '0,0.[000]'
    })), react_1.default.createElement("td", {
      className: "text-end"
    }, react_1.default.createElement(formatter_1.TextFormat, {
      value: garbageCollectorMetrics['0.0'],
      type: 'number',
      format: '0,0.[000]'
    })), react_1.default.createElement("td", {
      className: "text-end"
    }, react_1.default.createElement(formatter_1.TextFormat, {
      value: garbageCollectorMetrics['0.5'],
      type: 'number',
      format: '0,0.[000]'
    })), react_1.default.createElement("td", {
      className: "text-end"
    }, react_1.default.createElement(formatter_1.TextFormat, {
      value: garbageCollectorMetrics['0.75'],
      type: 'number',
      format: '0,0.[000]'
    })), react_1.default.createElement("td", {
      className: "text-end"
    }, react_1.default.createElement(formatter_1.TextFormat, {
      value: garbageCollectorMetrics['0.95'],
      type: 'number',
      format: '0,0.[000]'
    })), react_1.default.createElement("td", {
      className: "text-end"
    }, react_1.default.createElement(formatter_1.TextFormat, {
      value: garbageCollectorMetrics['0.99'],
      type: 'number',
      format: '0,0.[000]'
    })), react_1.default.createElement("td", {
      className: "text-end"
    }, react_1.default.createElement(formatter_1.TextFormat, {
      value: garbageCollectorMetrics.max,
      type: 'number',
      format: '0,0.[000]'
    }))))));
  }
}
exports.GarbageCollectorMetrics = GarbageCollectorMetrics;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwidHNsaWJfMSIsIl9faW1wb3J0RGVmYXVsdCIsInJlcXVpcmUiLCJmb3JtYXR0ZXJfMSIsInJlYWN0c3RyYXBfMSIsIkdhcmJhZ2VDb2xsZWN0b3JNZXRyaWNzIiwiZGVmYXVsdCIsIkNvbXBvbmVudCIsInJlbmRlciIsImdhcmJhZ2VDb2xsZWN0b3JNZXRyaWNzIiwid2hvbGVOdW1iZXJGb3JtYXQiLCJwcm9wcyIsImNyZWF0ZUVsZW1lbnQiLCJSb3ciLCJDb2wiLCJtZCIsIlRleHRGb3JtYXQiLCJ2YWx1ZSIsInR5cGUiLCJmb3JtYXQiLCJQcm9ncmVzcyIsImFuaW1hdGVkIiwiY29sb3IiLCJjbGFzc2VzTG9hZGVkIiwiY2xhc3Nlc1VubG9hZGVkIiwiVGFibGUiLCJjbGFzc05hbWUiLCJjb3VudCIsIm1lYW4iLCJtYXgiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudC9tZXRyaWNzL2dhcmJhZ2VDb2xsZWN0b3JNZXRyaWNzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLE1BQUFBLE9BQUEsR0FBQUMsT0FBQSxDQUFBQyxlQUFBLENBQUFDLE9BQUE7QUFDQSxNQUFBQyxXQUFBLEdBQUFELE9BQUE7QUFDQSxNQUFBRSxZQUFBLEdBQUFGLE9BQUE7QUFPQSxNQUFhRyx1QkFBd0IsU0FBUU4sT0FBQSxDQUFBTyxPQUFLLENBQUNDLFNBQXdDO0VBQ3pGQyxNQUFNQSxDQUFBO0lBQ0osTUFBTTtNQUFFQyx1QkFBdUI7TUFBRUM7SUFBaUIsQ0FBRSxHQUFHLElBQUksQ0FBQ0MsS0FBSztJQUNqRSxPQUNFWixPQUFBLENBQUFPLE9BQUEsQ0FBQU0sYUFBQSxjQUNFYixPQUFBLENBQUFPLE9BQUEsQ0FBQU0sYUFBQSxrQ0FBMkIsRUFDM0JiLE9BQUEsQ0FBQU8sT0FBQSxDQUFBTSxhQUFBLENBQUNSLFlBQUEsQ0FBQVMsR0FBRyxRQUNGZCxPQUFBLENBQUFPLE9B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LFNBQVMsRUFBQztJQUFVLEdBQ3RCM0IsT0FBQSxDQUFBTyxPQUFBLENBQUFNLGFBQUEsQ0FBQ1QsV0FBQSxDQUFBYSxVQUFVO01BQUNDLEtBQUssRUFBRVIsdUJBQXVCLENBQUMsS0FBSyxDQUFDO01BQUVTLElBQUksRUFBRSxRQUFRO01BQUVDLE1BQU0sRUFBRTtJQUFXLEVBQUksQ0FDdkYsRUFDTHBCLE9BQUEsQ0FBQU8sT0FBQSxDQUFBTSxhQUFBO01BQUljLFNBQVMsRUFBQztJQUFVLEdBQ3RCM0IsT0FBQSxDQUFBTyxPQUFBLENBQUFNLGFBQUEsQ0FBQ1QsV0FBQSxDQUFBYSxVQUFVO01BQUNDLEtBQUssRUFBRVIsdUJBQXVCLENBQUMsTUFBTSxDQUFDO01BQUVTLElBQUksRUFBRSxRQUFRO01BQUVDLE1BQU0sRUFBRTtJQUFXLEVBQUksQ0FDeEYsRUFDTHBCLE9BQUEsQ0FBQU8sT0FBQSxDQUFBTSxhQUFBO01BQUljLFNBQVMsRUFBQztJQUFVLEdBQ3RCM0IsT0FBQSxDQUFBTyxPQUFBLENBQUFNLGFBQUEsQ0FBQ1QsV0FBQSxDQUFBYSxVQUFVO01BQUNDLEtBQUssRUFBRVIsdUJBQXVCLENBQUMsTUFBTSxDQUFDO01BQUVTLElBQUksRUFBRSxRQUFRO01BQUVDLE1BQU0sRUFBRTtJQUFXLEVBQUksQ0FDeEYsRUFDTHBCLE9BQUEsQ0FBQU8sT0FBQSxDQUFBTSxhQUFBO01BQUljLFNBQVMsRUFBQztJQUFVLEdBQ3RCM0IsT0FBQSxDQUFBTyxPQUFBLENBQUFNLGFBQUEsQ0FBQ1QsV0FBQSxDQUFBYSxVQUFVO01BQUNDLEtBQUssRUFBRVIsdUJBQXVCLENBQUMsTUFBTSxDQUFDO01BQUVTLElBQUksRUFBRSxRQUFRO01BQUVDLE1BQU0sRUFBRTtJQUFXLEVBQUksQ0FDeEYsRUFDTHBCLE9BQUEsQ0FBQU8sT0FBQSxDQUFBTSxhQUFBO01BQUljLFNBQVMsRUFBQztJQUFVLEdBQ3RCM0IsT0FBQSxDQUFBTyxPQUFBLENBQUFNLGFBQUEsQ0FBQ1QsV0FBQSxDQUFBYSxVQUFVO01BQUNDLEtBQUssRUFBRVIsdUJBQXVCLENBQUNvQixHQUFHO01BQUVYLElBQUksRUFBRSxRQUFRO01BQUVDLE1BQU0sRUFBRTtJQUFXLEVBQUksQ0FDcEYsQ0FDRixDQUNDLENBQ0YsQ0FDSjtFQUVWOztBQXpHRlcsT0FBQSxDQUFBekIsdUJBQUEsR0FBQUEsdUJBQUEiLCJpZ25vcmVMaXN0IjpbXX0=