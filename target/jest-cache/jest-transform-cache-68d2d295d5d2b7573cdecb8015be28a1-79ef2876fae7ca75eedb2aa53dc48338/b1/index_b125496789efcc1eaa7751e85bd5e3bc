55c8b03b4fbc716229294893a8a2f697
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  var desc = Object.getOwnPropertyDescriptor(m, k);
  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
    desc = {
      enumerable: true,
      get: function () {
        return m[k];
      }
    };
  }
  Object.defineProperty(o, k2, desc);
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});
var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  __setModuleDefault(result, mod);
  return result;
};
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DomUtils = exports.parseFeed = exports.getFeed = exports.ElementType = exports.Tokenizer = exports.createDomStream = exports.parseDOM = exports.parseDocument = exports.DefaultHandler = exports.DomHandler = exports.Parser = void 0;
var Parser_js_1 = require("./Parser.js");
var Parser_js_2 = require("./Parser.js");
Object.defineProperty(exports, "Parser", {
  enumerable: true,
  get: function () {
    return Parser_js_2.Parser;
  }
});
var domhandler_1 = require("domhandler");
var domhandler_2 = require("domhandler");
Object.defineProperty(exports, "DomHandler", {
  enumerable: true,
  get: function () {
    return domhandler_2.DomHandler;
  }
});
// Old name for DomHandler
Object.defineProperty(exports, "DefaultHandler", {
  enumerable: true,
  get: function () {
    return domhandler_2.DomHandler;
  }
});
// Helper methods
/**
 * Parses the data, returns the resulting document.
 *
 * @param data The data that should be parsed.
 * @param options Optional options for the parser and DOM builder.
 */
function parseDocument(data, options) {
  var handler = new domhandler_1.DomHandler(undefined, options);
  new Parser_js_1.Parser(handler, options).end(data);
  return handler.root;
}
exports.parseDocument = parseDocument;
/**
 * Parses data, returns an array of the root nodes.
 *
 * Note that the root nodes still have a `Document` node as their parent.
 * Use `parseDocument` to get the `Document` node instead.
 *
 * @param data The data that should be parsed.
 * @param options Optional options for the parser and DOM builder.
 * @deprecated Use `parseDocument` instead.
 */
function parseDOM(data, options) {
  return parseDocument(data, options).children;
}
exports.parseDOM = parseDOM;
/**
 * Creates a parser instance, with an attached DOM handler.
 *
 * @param callback A callback that will be called once parsing has been completed.
 * @param options Optional options for the parser and DOM builder.
 * @param elementCallback An optional callback that will be called every time a tag has been completed inside of the DOM.
 */
function createDomStream(callback, options, elementCallback) {
  var handler = new domhandler_1.DomHandler(callback, options, elementCallback);
  return new Parser_js_1.Parser(handler, options);
}
exports.createDomStream = createDomStream;
var Tokenizer_js_1 = require("./Tokenizer.js");
Object.defineProperty(exports, "Tokenizer", {
  enumerable: true,
  get: function () {
    return __importDefault(Tokenizer_js_1).default;
  }
});
/*
 * All of the following exports exist for backwards-compatibility.
 * They should probably be removed eventually.
 */
exports.ElementType = __importStar(require("domelementtype"));
var domutils_1 = require("domutils");
var domutils_2 = require("domutils");
Object.defineProperty(exports, "getFeed", {
  enumerable: true,
  get: function () {
    return domutils_2.getFeed;
  }
});
var parseFeedDefaultOptions = {
  xmlMode: true
};
/**
 * Parse a feed.
 *
 * @param feed The feed that should be parsed, as a string.
 * @param options Optionally, options for parsing. When using this, you should set `xmlMode` to `true`.
 */
function parseFeed(feed, options) {
  if (options === void 0) {
    options = parseFeedDefaultOptions;
  }
  return (0, domutils_1.getFeed)(parseDOM(feed, options));
}
exports.parseFeed = parseFeed;
exports.DomUtils = __importStar(require("domutils"));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQYXJzZXJfanNfMSIsInJlcXVpcmUiLCJQYXJzZXJfanNfMiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsImVudW1lcmFibGUiLCJnZXQiLCJQYXJzZXIiLCJkb21oYW5kbGVyXzEiLCJkb21oYW5kbGVyXzIiLCJEb21IYW5kbGVyIiwicGFyc2VEb2N1bWVudCIsImRhdGEiLCJvcHRpb25zIiwiaGFuZGxlciIsInVuZGVmaW5lZCIsImVuZCIsInJvb3QiLCJwYXJzZURPTSIsImNoaWxkcmVuIiwiY3JlYXRlRG9tU3RyZWFtIiwiY2FsbGJhY2siLCJlbGVtZW50Q2FsbGJhY2siLCJUb2tlbml6ZXJfanNfMSIsIl9faW1wb3J0RGVmYXVsdCIsImRlZmF1bHQiLCJFbGVtZW50VHlwZSIsIl9faW1wb3J0U3RhciIsImRvbXV0aWxzXzEiLCJkb211dGlsc18yIiwiZ2V0RmVlZCIsInBhcnNlRmVlZERlZmF1bHRPcHRpb25zIiwieG1sTW9kZSIsInBhcnNlRmVlZCIsImZlZWQiLCJEb21VdGlscyJdLCJzb3VyY2VzIjpbImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9mYjU1L2h0bWxwYXJzZXIyL2MxMjM2MTBlMDAzYTFlYWViYzYxZmViZWQwMWNhYmI2ZTQxZWI2NTgvc3JjL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBQSxXQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxXQUFBLEdBQUFELE9BQUE7QUFBU0UsTUFBQSxDQUFBQyxjQUFBLENBQUFDLE9BQUE7RUFBQUMsVUFBQTtFQUFBQyxHQUFBLFdBQUFBLENBQUE7SUFBQSxPQUFBTCxXQUFBLENBQUFNLE1BQU07RUFBQTtBQUFBO0FBRWYsSUFBQUMsWUFBQSxHQUFBUixPQUFBO0FBUUEsSUFBQVMsWUFBQSxHQUFBVCxPQUFBO0FBQ0lFLE1BQUEs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