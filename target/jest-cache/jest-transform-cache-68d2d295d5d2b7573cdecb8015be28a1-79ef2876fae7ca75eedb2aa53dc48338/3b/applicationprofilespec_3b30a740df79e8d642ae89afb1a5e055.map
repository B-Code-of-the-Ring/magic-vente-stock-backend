{"file":"/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/shared/reducers/application-profile.spec.ts","mappings":";;;AAAA,0DAA0B;AAC1B,0DAA0B;AAC1B,8CAAkD;AAElD,qFAA4D;AAE5D,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACrC,MAAM,YAAY,GAAG;QACnB,SAAS,EAAE,EAAE;QACb,YAAY,EAAE,IAAI;QAClB,gBAAgB,EAAE,KAAK;KACxB,CAAC;IACF,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;QAC5B,EAAE,CAAC,iCAAiC,EAAE,GAAG,EAAE;YACzC,MAAM,MAAM,GAAG,IAAA,6BAAO,EAAC,SAAS,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;YAChD,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;YACjD,MAAM,OAAO,GAAG;gBACd,IAAI,EAAE;oBACJ,4BAA4B,EAAE,sBAAsB;oBACpD,cAAc,EAAE,CAAC,MAAM,CAAC;iBACzB;aACF,CAAC;YAEF,MAAM,CAAC,IAAA,6BAAO,EAAC,SAAS,EAAE,EAAE,IAAI,EAAE,gCAAU,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;gBAC/E,SAAS,EAAE,sBAAsB;gBACjC,YAAY,EAAE,IAAI;gBAClB,gBAAgB,EAAE,KAAK;aACxB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6DAA6D,EAAE,GAAG,EAAE;YACrE,MAAM,OAAO,GAAG;gBACd,IAAI,EAAE;oBACJ,4BAA4B,EAAE,sBAAsB;oBACpD,cAAc,EAAE,CAAC,UAAU,EAAE,KAAK,CAAC;iBACpC;aACF,CAAC;YAEF,MAAM,CAAC,IAAA,6BAAO,EAAC,SAAS,EAAE,EAAE,IAAI,EAAE,gCAAU,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;gBAC/E,SAAS,EAAE,sBAAsB;gBACjC,YAAY,EAAE,KAAK;gBACnB,gBAAgB,EAAE,IAAI;aACvB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;QACvB,IAAI,KAAK,CAAC;QAEV,MAAM,cAAc,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC;QAC7C,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAC3B,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAC3B,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,UAAU,CAAC,GAAG,EAAE;YACd,KAAK,GAAG,IAAA,wBAAc,EAAC;gBACrB,OAAO,EAAE,CAAC,KAAK,GAAG,EAAE,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC,GAAG,KAAK,EAAE,MAAM,CAAC;aACpD,CAAC,CAAC;YACH,eAAK,CAAC,GAAG,GAAG,eAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kEAAkE,EAAE,GAAS,EAAE;YAChF,MAAM,MAAM,GAAG,MAAM,IAAA,gCAAU,GAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;YAE7D,MAAM,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzD,MAAM,CAAC,gCAAU,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxD,CAAC,CAAA,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/shared/reducers/application-profile.spec.ts"],"sourcesContent":["import axios from 'axios';\nimport sinon from 'sinon';\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport profile, { getProfile } from './application-profile';\n\ndescribe('Profile reducer tests', () => {\n  const initialState = {\n    ribbonEnv: '',\n    inProduction: true,\n    isOpenAPIEnabled: false,\n  };\n  describe('Common tests', () => {\n    it('should return the initial state', () => {\n      const toTest = profile(undefined, { type: '' });\n      expect(toTest).toEqual(initialState);\n    });\n\n    it('should return the right payload in prod', () => {\n      const payload = {\n        data: {\n          'display-ribbon-on-profiles': 'awesome ribbon stuff',\n          activeProfiles: ['prod'],\n        },\n      };\n\n      expect(profile(undefined, { type: getProfile.fulfilled.type, payload })).toEqual({\n        ribbonEnv: 'awesome ribbon stuff',\n        inProduction: true,\n        isOpenAPIEnabled: false,\n      });\n    });\n\n    it('should return the right payload in dev with OpenAPI enabled', () => {\n      const payload = {\n        data: {\n          'display-ribbon-on-profiles': 'awesome ribbon stuff',\n          activeProfiles: ['api-docs', 'dev'],\n        },\n      };\n\n      expect(profile(undefined, { type: getProfile.fulfilled.type, payload })).toEqual({\n        ribbonEnv: 'awesome ribbon stuff',\n        inProduction: false,\n        isOpenAPIEnabled: true,\n      });\n    });\n  });\n\n  describe('Actions', () => {\n    let store;\n\n    const resolvedObject = { value: 'whatever' };\n    const getState = jest.fn();\n    const dispatch = jest.fn();\n    const extra = {};\n    beforeEach(() => {\n      store = configureStore({\n        reducer: (state = [], action) => [...state, action],\n      });\n      axios.get = sinon.stub().returns(Promise.resolve(resolvedObject));\n    });\n\n    it('dispatches GET_SESSION_PENDING and GET_SESSION_FULFILLED actions', async () => {\n      const result = await getProfile()(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(getProfile.fulfilled.match(result)).toBe(true);\n    });\n  });\n});\n"],"version":3}