882e8d58e0f1bad671a5737c4a7fdbbd
"use strict";

/* istanbul ignore next */
function cov_1jog6t5lkd() {
  var path = "/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/shared/jhipster/headers.ts";
  var hash = "6053df4b73df104d3bfa70c4086ebd66ab4c1fbb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/shared/jhipster/headers.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 39
        }
      },
      "2": {
        start: {
          line: 4,
          column: 23
        },
        end: {
          line: 15,
          column: 1
        }
      },
      "3": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 10,
          column: 5
        }
      },
      "4": {
        start: {
          line: 6,
          column: 8
        },
        end: {
          line: 8,
          column: 9
        }
      },
      "5": {
        start: {
          line: 7,
          column: 12
        },
        end: {
          line: 7,
          column: 60
        }
      },
      "6": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 37
        }
      },
      "7": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 13,
          column: 5
        }
      },
      "8": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 56
        }
      },
      "9": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 23
        }
      },
      "10": {
        start: {
          line: 16,
          column: 26
        },
        end: {
          line: 16,
          column: 94
        }
      },
      "11": {
        start: {
          line: 16,
          column: 43
        },
        end: {
          line: 16,
          column: 94
        }
      },
      "12": {
        start: {
          line: 17,
          column: 30
        },
        end: {
          line: 33,
          column: 1
        }
      },
      "13": {
        start: {
          line: 18,
          column: 16
        },
        end: {
          line: 18,
          column: 25
        }
      },
      "14": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 25
        }
      },
      "15": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 25
        }
      },
      "16": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "17": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "18": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 42
        }
      },
      "19": {
        start: {
          line: 25,
          column: 13
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "20": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 42
        }
      },
      "21": {
        start: {
          line: 28,
          column: 13
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "22": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 61
        }
      },
      "23": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 35
        }
      },
      "24": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 34,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 23
          },
          end: {
            line: 4,
            column: 24
          }
        },
        loc: {
          start: {
            line: 4,
            column: 40
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 16,
            column: 27
          }
        },
        loc: {
          start: {
            line: 16,
            column: 43
          },
          end: {
            line: 16,
            column: 94
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 30
          },
          end: {
            line: 17,
            column: 31
          }
        },
        loc: {
          start: {
            line: 17,
            column: 43
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 17
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "1": {
        loc: {
          start: {
            line: 6,
            column: 8
          },
          end: {
            line: 8,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 6,
            column: 8
          },
          end: {
            line: 8,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 6
      },
      "2": {
        loc: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "3": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: 25,
            column: 13
          },
          end: {
            line: 30,
            column: 9
          }
        }],
        line: 22
      },
      "4": {
        loc: {
          start: {
            line: 25,
            column: 13
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 13
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: 28,
            column: 13
          },
          end: {
            line: 30,
            column: 9
          }
        }],
        line: 25
      },
      "5": {
        loc: {
          start: {
            line: 28,
            column: 13
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 13
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/shared/jhipster/headers.ts",
      mappings: ";;;AASA,MAAM,cAAc,GAAG,CAAC,WAAgB,EAAU,EAAE;IAClD,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC;QAC/B,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC3B,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAClD,CAAC;QACD,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IACD,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE,CAAC;QACpC,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;IAClD,CAAC;IACD,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC;AAEF,MAAM,iBAAiB,GAAG,CAAC,WAAmB,EAAU,EAAE,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;AAExG,MAAM,qBAAqB,GAAG,CAAC,OAA4B,EAAiB,EAAE;IACnF,IAAI,KAAK,GAAuB,SAAS,CAAC;IAC1C,IAAI,KAAK,GAAuB,SAAS,CAAC;IAC1C,IAAI,KAAK,GAAuB,SAAS,CAAC;IAC1C,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;QACnD,IAAI,GAAG,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;YACzC,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;QAChC,CAAC;aAAM,IAAI,GAAG,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;YAChD,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;QAChC,CAAC;aAAM,IAAI,GAAG,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC;YACjD,KAAK,GAAG,iBAAiB,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QACnD,CAAC;IACH,CAAC;IACD,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;AACjC,CAAC,CAAC;AAdW,QAAA,qBAAqB,yBAchC",
      names: [],
      sources: ["/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/shared/jhipster/headers.ts"],
      sourcesContent: ["export type HeaderMessage = {\n  /** Success message */\n  alert?: string;\n  /** Error message */\n  error?: string;\n  /** Entity id for success messages. Entity name for error messages. */\n  param?: string;\n};\n\nconst headerToString = (headerValue: any): string => {\n  if (Array.isArray(headerValue)) {\n    if (headerValue.length > 1) {\n      throw new Error('Multiple header values found');\n    }\n    headerValue = headerValue[0];\n  }\n  if (typeof headerValue !== 'string') {\n    throw new Error('Header value is not a string');\n  }\n  return headerValue;\n};\n\nconst decodeHeaderValue = (headerValue: string): string => decodeURIComponent(headerValue.replace(/\\+/g, ' '));\n\nexport const getMessageFromHeaders = (headers: Record<string, any>): HeaderMessage => {\n  let alert: string | undefined = undefined;\n  let param: string | undefined = undefined;\n  let error: string | undefined = undefined;\n  for (const [key, value] of Object.entries(headers)) {\n    if (key.toLowerCase().endsWith('-alert')) {\n      alert = headerToString(value);\n    } else if (key.toLowerCase().endsWith('-error')) {\n      error = headerToString(value);\n    } else if (key.toLowerCase().endsWith('-params')) {\n      param = decodeHeaderValue(headerToString(value));\n    }\n  }\n  return { alert, error, param };\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6053df4b73df104d3bfa70c4086ebd66ab4c1fbb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1jog6t5lkd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1jog6t5lkd();
cov_1jog6t5lkd().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1jog6t5lkd().s[1]++;
exports.getMessageFromHeaders = void 0;
/* istanbul ignore next */
cov_1jog6t5lkd().s[2]++;
const headerToString = headerValue => {
  /* istanbul ignore next */
  cov_1jog6t5lkd().f[0]++;
  cov_1jog6t5lkd().s[3]++;
  if (Array.isArray(headerValue)) {
    /* istanbul ignore next */
    cov_1jog6t5lkd().b[0][0]++;
    cov_1jog6t5lkd().s[4]++;
    if (headerValue.length > 1) {
      /* istanbul ignore next */
      cov_1jog6t5lkd().b[1][0]++;
      cov_1jog6t5lkd().s[5]++;
      throw new Error('Multiple header values found');
    } else
    /* istanbul ignore next */
    {
      cov_1jog6t5lkd().b[1][1]++;
    }
    cov_1jog6t5lkd().s[6]++;
    headerValue = headerValue[0];
  } else
  /* istanbul ignore next */
  {
    cov_1jog6t5lkd().b[0][1]++;
  }
  cov_1jog6t5lkd().s[7]++;
  if (typeof headerValue !== 'string') {
    /* istanbul ignore next */
    cov_1jog6t5lkd().b[2][0]++;
    cov_1jog6t5lkd().s[8]++;
    throw new Error('Header value is not a string');
  } else
  /* istanbul ignore next */
  {
    cov_1jog6t5lkd().b[2][1]++;
  }
  cov_1jog6t5lkd().s[9]++;
  return headerValue;
};
/* istanbul ignore next */
cov_1jog6t5lkd().s[10]++;
const decodeHeaderValue = headerValue => {
  /* istanbul ignore next */
  cov_1jog6t5lkd().f[1]++;
  cov_1jog6t5lkd().s[11]++;
  return decodeURIComponent(headerValue.replace(/\+/g, ' '));
};
/* istanbul ignore next */
cov_1jog6t5lkd().s[12]++;
const getMessageFromHeaders = headers => {
  /* istanbul ignore next */
  cov_1jog6t5lkd().f[2]++;
  let alert =
  /* istanbul ignore next */
  (cov_1jog6t5lkd().s[13]++, undefined);
  let param =
  /* istanbul ignore next */
  (cov_1jog6t5lkd().s[14]++, undefined);
  let error =
  /* istanbul ignore next */
  (cov_1jog6t5lkd().s[15]++, undefined);
  /* istanbul ignore next */
  cov_1jog6t5lkd().s[16]++;
  for (const [key, value] of Object.entries(headers)) {
    /* istanbul ignore next */
    cov_1jog6t5lkd().s[17]++;
    if (key.toLowerCase().endsWith('-alert')) {
      /* istanbul ignore next */
      cov_1jog6t5lkd().b[3][0]++;
      cov_1jog6t5lkd().s[18]++;
      alert = headerToString(value);
    } else {
      /* istanbul ignore next */
      cov_1jog6t5lkd().b[3][1]++;
      cov_1jog6t5lkd().s[19]++;
      if (key.toLowerCase().endsWith('-error')) {
        /* istanbul ignore next */
        cov_1jog6t5lkd().b[4][0]++;
        cov_1jog6t5lkd().s[20]++;
        error = headerToString(value);
      } else {
        /* istanbul ignore next */
        cov_1jog6t5lkd().b[4][1]++;
        cov_1jog6t5lkd().s[21]++;
        if (key.toLowerCase().endsWith('-params')) {
          /* istanbul ignore next */
          cov_1jog6t5lkd().b[5][0]++;
          cov_1jog6t5lkd().s[22]++;
          param = decodeHeaderValue(headerToString(value));
        } else
        /* istanbul ignore next */
        {
          cov_1jog6t5lkd().b[5][1]++;
        }
      }
    }
  }
  /* istanbul ignore next */
  cov_1jog6t5lkd().s[23]++;
  return {
    alert,
    error,
    param
  };
};
/* istanbul ignore next */
cov_1jog6t5lkd().s[24]++;
exports.getMessageFromHeaders = getMessageFromHeaders;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWpvZzZ0NWxrZCIsImFjdHVhbENvdmVyYWdlIiwicyIsImhlYWRlclRvU3RyaW5nIiwiaGVhZGVyVmFsdWUiLCJmIiwiQXJyYXkiLCJpc0FycmF5IiwiYiIsImxlbmd0aCIsIkVycm9yIiwiZGVjb2RlSGVhZGVyVmFsdWUiLCJkZWNvZGVVUklDb21wb25lbnQiLCJyZXBsYWNlIiwiZ2V0TWVzc2FnZUZyb21IZWFkZXJzIiwiaGVhZGVycyIsImFsZXJ0IiwidW5kZWZpbmVkIiwicGFyYW0iLCJlcnJvciIsImtleSIsInZhbHVlIiwiT2JqZWN0IiwiZW50cmllcyIsInRvTG93ZXJDYXNlIiwiZW5kc1dpdGgiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiL1VzZXJzL3BjY28wNTYvRG9jdW1lbnRzL0NvdXJzIElUVS9yaWJvdWNob24vbWFnaWN2ZW50ZXN0b2NrL3NyYy9tYWluL3dlYmFwcC9hcHAvc2hhcmVkL2poaXBzdGVyL2hlYWRlcnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHR5cGUgSGVhZGVyTWVzc2FnZSA9IHtcbiAgLyoqIFN1Y2Nlc3MgbWVzc2FnZSAqL1xuICBhbGVydD86IHN0cmluZztcbiAgLyoqIEVycm9yIG1lc3NhZ2UgKi9cbiAgZXJyb3I/OiBzdHJpbmc7XG4gIC8qKiBFbnRpdHkgaWQgZm9yIHN1Y2Nlc3MgbWVzc2FnZXMuIEVudGl0eSBuYW1lIGZvciBlcnJvciBtZXNzYWdlcy4gKi9cbiAgcGFyYW0/OiBzdHJpbmc7XG59O1xuXG5jb25zdCBoZWFkZXJUb1N0cmluZyA9IChoZWFkZXJWYWx1ZTogYW55KTogc3RyaW5nID0+IHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoaGVhZGVyVmFsdWUpKSB7XG4gICAgaWYgKGhlYWRlclZhbHVlLmxlbmd0aCA+IDEpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignTXVsdGlwbGUgaGVhZGVyIHZhbHVlcyBmb3VuZCcpO1xuICAgIH1cbiAgICBoZWFkZXJWYWx1ZSA9IGhlYWRlclZhbHVlWzBdO1xuICB9XG4gIGlmICh0eXBlb2YgaGVhZGVyVmFsdWUgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdIZWFkZXIgdmFsdWUgaXMgbm90IGEgc3RyaW5nJyk7XG4gIH1cbiAgcmV0dXJuIGhlYWRlclZhbHVlO1xufTtcblxuY29uc3QgZGVjb2RlSGVhZGVyVmFsdWUgPSAoaGVhZGVyVmFsdWU6IHN0cmluZyk6IHN0cmluZyA9PiBkZWNvZGVVUklDb21wb25lbnQoaGVhZGVyVmFsdWUucmVwbGFjZSgvXFwrL2csICcgJykpO1xuXG5leHBvcnQgY29uc3QgZ2V0TWVzc2FnZUZyb21IZWFkZXJzID0gKGhlYWRlcnM6IFJlY29yZDxzdHJpbmcsIGFueT4pOiBIZWFkZXJNZXNzYWdlID0+IHtcbiAgbGV0IGFsZXJ0OiBzdHJpbmcgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQ7XG4gIGxldCBwYXJhbTogc3RyaW5nIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkO1xuICBsZXQgZXJyb3I6IHN0cmluZyB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcbiAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoaGVhZGVycykpIHtcbiAgICBpZiAoa2V5LnRvTG93ZXJDYXNlKCkuZW5kc1dpdGgoJy1hbGVydCcpKSB7XG4gICAgICBhbGVydCA9IGhlYWRlclRvU3RyaW5nKHZhbHVlKTtcbiAgICB9IGVsc2UgaWYgKGtleS50b0xvd2VyQ2FzZSgpLmVuZHNXaXRoKCctZXJyb3InKSkge1xuICAgICAgZXJyb3IgPSBoZWFkZXJUb1N0cmluZyh2YWx1ZSk7XG4gICAgfSBlbHNlIGlmIChrZXkudG9Mb3dlckNhc2UoKS5lbmRzV2l0aCgnLXBhcmFtcycpKSB7XG4gICAgICBwYXJhbSA9IGRlY29kZUhlYWRlclZhbHVlKGhlYWRlclRvU3RyaW5nKHZhbHVlKSk7XG4gICAgfVxuICB9XG4gIHJldHVybiB7IGFsZXJ0LCBlcnJvciwgcGFyYW0gfTtcbn07XG4iXSwibWFwcGlu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LGNBQUEsR0FBQUUsQ0FBQSxRQUF1QmUsU0FBUztFQUN6QyxJQUFJRSxLQUFLO0VBQUE7RUFBQSxDQUFBbkIsY0FBQSxHQUFBRSxDQUFBLFFBQXVCZSxTQUFTO0VBQUM7RUFBQWpCLGNBQUEsR0FBQUUsQ0FBQTtFQUMxQyxLQUFLLE1BQU0sQ0FBQ2tCLEdBQUcsRUFBRUMsS0FBSyxDQUFDLElBQUlDLE1BQU0sQ0FBQ0MsT0FBTyxDQUFDUixPQUFPLENBQUMsRUFBRTtJQUFBO0lBQUFmLGNBQUEsR0FBQUUsQ0FBQTtJQUNsRCxJQUFJa0IsR0FBRyxDQUFDSSxXQUFXLEVBQUUsQ0FBQ0MsUUFBUSxDQUFDLFFBQVEsQ0FBQyxFQUFFO01BQUE7TUFBQXpCLGNBQUEsR0FBQVEsQ0FBQTtNQUFBUixjQUFBLEdBQUFFLENBQUE7TUFDeENjLEtBQUssR0FBR2IsY0FBYyxDQUFDa0IsS0FBSyxDQUFDO0lBQy9CLENBQUMsTUFBTTtNQUFBO01BQUFyQixjQUFBLEdBQUFRLENBQUE7TUFBQVIsY0FBQSxHQUFBRSxDQUFBO01BQUEsSUFBSWtCLEdBQUcsQ0FBQ0ksV0FBVyxFQUFFLENBQUNDLFFBQVEsQ0FBQyxRQUFRLENBQUMsRUFBRTtRQUFBO1FBQUF6QixjQUFBLEdBQUFRLENBQUE7UUFBQVIsY0FBQSxHQUFBRSxDQUFBO1FBQy9DaUIsS0FBSyxHQUFHaEIsY0FBYyxDQUFDa0IsS0FBSyxDQUFDO01BQy9CLENBQUMsTUFBTTtRQUFBO1FBQUFyQixjQUFBLEdBQUFRLENBQUE7UUFBQVIsY0FBQSxHQUFBRSxDQUFBO1FBQUEsSUFBSWtCLEdBQUcsQ0FBQ0ksV0FBVyxFQUFFLENBQUNDLFFBQVEsQ0FBQyxTQUFTLENBQUMsRUFBRTtVQUFBO1VBQUF6QixjQUFBLEdBQUFRLENBQUE7VUFBQVIsY0FBQSxHQUFBRSxDQUFBO1VBQ2hEZ0IsS0FBSyxHQUFHUCxpQkFBaUIsQ0FBQ1IsY0FBYyxDQUFDa0IsS0FBSyxDQUFDLENBQUM7UUFDbEQsQ0FBQztRQUFBO1FBQUE7VUFBQXJCLGNBQUEsR0FBQVEsQ0FBQTtRQUFBO01BQUQ7SUFBQTtFQUNGO0VBQUM7RUFBQVIsY0FBQSxHQUFBRSxDQUFBO0VBQ0QsT0FBTztJQUFFYyxLQUFLO0lBQUVHLEtBQUs7SUFBRUQ7RUFBSyxDQUFFO0FBQ2hDLENBQUM7QUFBQztBQUFBbEIsY0FBQSxHQUFBRSxDQUFBO0FBZFd3QixPQUFBLENBQUFaLHFCQUFxQixHQUFBQSxxQkFBQSIsImlnbm9yZUxpc3QiOltdfQ==