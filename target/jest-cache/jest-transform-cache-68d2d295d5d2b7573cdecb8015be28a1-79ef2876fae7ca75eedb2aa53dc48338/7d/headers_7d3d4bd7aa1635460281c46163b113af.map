{"version":3,"names":["cov_1jog6t5lkd","actualCoverage","s","headerToString","headerValue","f","Array","isArray","b","length","Error","decodeHeaderValue","decodeURIComponent","replace","getMessageFromHeaders","headers","alert","undefined","param","error","key","value","Object","entries","toLowerCase","endsWith","exports"],"sources":["/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/shared/jhipster/headers.ts"],"sourcesContent":["export type HeaderMessage = {\n  /** Success message */\n  alert?: string;\n  /** Error message */\n  error?: string;\n  /** Entity id for success messages. Entity name for error messages. */\n  param?: string;\n};\n\nconst headerToString = (headerValue: any): string => {\n  if (Array.isArray(headerValue)) {\n    if (headerValue.length > 1) {\n      throw new Error('Multiple header values found');\n    }\n    headerValue = headerValue[0];\n  }\n  if (typeof headerValue !== 'string') {\n    throw new Error('Header value is not a string');\n  }\n  return headerValue;\n};\n\nconst decodeHeaderValue = (headerValue: string): string => decodeURIComponent(headerValue.replace(/\\+/g, ' '));\n\nexport const getMessageFromHeaders = (headers: Record<string, any>): HeaderMessage => {\n  let alert: string | undefined = undefined;\n  let param: string | undefined = undefined;\n  let error: string | undefined = undefined;\n  for (const [key, value] of Object.entries(headers)) {\n    if (key.toLowerCase().endsWith('-alert')) {\n      alert = headerToString(value);\n    } else if (key.toLowerCase().endsWith('-error')) {\n      error = headerToString(value);\n    } else if (key.toLowerCase().endsWith('-params')) {\n      param = decodeHeaderValue(headerToString(value));\n    }\n  }\n  return { alert, error, param };\n};\n"],"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","ignoreList":[]}