2135e968e2734519146359f715cfe138
var baseRest = require('./_baseRest'),
  isIterateeCall = require('./_isIterateeCall');

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return baseRest(function (object, sources) {
    var index = -1,
      length = sources.length,
      customizer = length > 1 ? sources[length - 1] : undefined,
      guard = length > 2 ? sources[2] : undefined;
    customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;
    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}
module.exports = createAssigner;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYXNlUmVzdCIsInJlcXVpcmUiLCJpc0l0ZXJhdGVlQ2FsbCIsImNyZWF0ZUFzc2lnbmVyIiwiYXNzaWduZXIiLCJvYmplY3QiLCJzb3VyY2VzIiwiaW5kZXgiLCJsZW5ndGgiLCJjdXN0b21pemVyIiwidW5kZWZpbmVkIiwiZ3VhcmQiLCJPYmplY3QiLCJzb3VyY2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiX2NyZWF0ZUFzc2lnbmVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBiYXNlUmVzdCA9IHJlcXVpcmUoJy4vX2Jhc2VSZXN0JyksXG4gICAgaXNJdGVyYXRlZUNhbGwgPSByZXF1aXJlKCcuL19pc0l0ZXJhdGVlQ2FsbCcpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBmdW5jdGlvbiBsaWtlIGBfLmFzc2lnbmAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGFzc2lnbmVyIFRoZSBmdW5jdGlvbiB0byBhc3NpZ24gdmFsdWVzLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgYXNzaWduZXIgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUFzc2lnbmVyKGFzc2lnbmVyKSB7XG4gIHJldHVybiBiYXNlUmVzdChmdW5jdGlvbihvYmplY3QsIHNvdXJjZXMpIHtcbiAgICB2YXIgaW5kZXggPSAtMSxcbiAgICAgICAgbGVuZ3RoID0gc291cmNlcy5sZW5ndGgsXG4gICAgICAgIGN1c3RvbWl6ZXIgPSBsZW5ndGggPiAxID8gc291cmNlc1tsZW5ndGggLSAxXSA6IHVuZGVmaW5lZCxcbiAgICAgICAgZ3VhcmQgPSBsZW5ndGggPiAyID8gc291cmNlc1syXSA6IHVuZGVmaW5lZDtcblxuICAgIGN1c3RvbWl6ZXIgPSAoYXNzaWduZXIubGVuZ3RoID4gMyAmJiB0eXBlb2YgY3VzdG9taXplciA9PSAnZnVuY3Rpb24nKVxuICAgICAgPyAobGVuZ3RoLS0sIGN1c3RvbWl6ZXIpXG4gICAgICA6IHVuZGVmaW5lZDtcblxuICAgIGlmIChndWFyZCAmJiBpc0l0ZXJhdGVlQ2FsbChzb3VyY2VzWzBdLCBzb3VyY2VzWzFdLCBndWFyZCkpIHtcbiAgICAgIGN1c3RvbWl6ZXIgPSBsZW5ndGggPCAzID8gdW5kZWZpbmVkIDogY3VzdG9taXplcjtcbiAgICAgIGxlbmd0aCA9IDE7XG4gICAgfVxuICAgIG9iamVjdCA9IE9iamVjdChvYmplY3QpO1xuICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICB2YXIgc291cmNlID0gc291cmNlc1tpbmRleF07XG4gICAgICBpZiAoc291cmNlKSB7XG4gICAgICAgIGFzc2lnbmVyKG9iamVjdCwgc291cmNlLCBpbmRleCwgY3VzdG9taXplcik7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBvYmplY3Q7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZUFzc2lnbmVyO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxhQUFhLENBQUM7RUFDakNDLGNBQWMsR0FBR0QsT0FBTyxDQUFDLG1CQUFtQixDQUFDOztBQUVqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNFLGNBQWNBLENBQUNDLFFBQVEsRUFBRTtFQUNoQyxPQUFPSixRQUFRLENBQUMsVUFBU0ssTUFBTSxFQUFFQyxPQUFPLEVBQUU7SUFDeEMsSUFBSUMsS0FBSyxHQUFHLENBQUMsQ0FBQztNQUNWQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0UsTUFBTTtNQUN2QkMsVUFBVSxHQUFHRCxNQUFNLEdBQUcsQ0FBQyxHQUFHRixPQUFPLENBQUNFLE1BQU0sR0FBRyxDQUFDLENBQUMsR0FBR0UsU0FBUztNQUN6REMsS0FBSyxHQUFHSCxNQUFNLEdBQUcsQ0FBQyxHQUFHRixPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUdJLFNBQVM7SUFFL0NELFVBQVUsR0FBSUwsUUFBUSxDQUFDSSxNQUFNLEdBQUcsQ0FBQyxJQUFJLE9BQU9DLFVBQVUsSUFBSSxVQUFVLElBQy9ERCxNQUFNLEVBQUUsRUFBRUMsVUFBVSxJQUNyQkMsU0FBUztJQUViLElBQUlDLEtBQUssSUFBSVQsY0FBYyxDQUFDSSxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUVBLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRUssS0FBSyxDQUFDLEVBQUU7TUFDMURGLFVBQVUsR0FBR0QsTUFBTSxHQUFHLENBQUMsR0FBR0UsU0FBUyxHQUFHRCxVQUFVO01BQ2hERCxNQUFNLEdBQUcsQ0FBQztJQUNaO0lBQ0FILE1BQU0sR0FBR08sTUFBTSxDQUFDUCxNQUFNLENBQUM7SUFDdkIsT0FBTyxFQUFFRSxLQUFLLEdBQUdDLE1BQU0sRUFBRTtNQUN2QixJQUFJSyxNQUFNLEdBQUdQLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDO01BQzNCLElBQUlNLE1BQU0sRUFBRTtRQUNWVCxRQUFRLENBQUNDLE1BQU0sRUFBRVEsTUFBTSxFQUFFTixLQUFLLEVBQUVFLFVBQVUsQ0FBQztNQUM3QztJQUNGO0lBQ0EsT0FBT0osTUFBTTtFQUNmLENBQUMsQ0FBQztBQUNKO0FBRUFTLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHWixjQUFjIiwiaWdub3JlTGlzdCI6W119