{"version":3,"names":["cov_2lwthcgykz","actualCoverage","s","axios_1","tslib_1","__importDefault","require","toolkit_1","authentication_1","reducer_utils_1","initialState","loading","errorMessage","successMessage","updateSuccess","updateFailure","apiUrl","saveAccountSettings","account","f","dispatch","__awaiter","exports","updateAccount","getSession","createAsyncThunk","default","post","serializeError","serializeAxiosError","SettingsSlice","createSlice","name","reducers","reset","extraReducers","builder","addCase","pending","state","rejected","fulfilled","actions","reducer"],"sources":["/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/modules/account/settings/settings.reducer.ts"],"sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nimport { getSession } from 'app/shared/reducers/authentication';\nimport { AppThunk } from 'app/config/store';\nimport { serializeAxiosError } from 'app/shared/reducers/reducer.utils';\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  successMessage: null,\n  updateSuccess: false,\n  updateFailure: false,\n};\n\nexport type SettingsState = Readonly<typeof initialState>;\n\n// Actions\nconst apiUrl = 'api/account';\n\nexport const saveAccountSettings: (account: any) => AppThunk = account => async dispatch => {\n  await dispatch(updateAccount(account));\n\n  dispatch(getSession());\n};\n\nexport const updateAccount = createAsyncThunk('settings/update_account', async (account: any) => axios.post<any>(apiUrl, account), {\n  serializeError: serializeAxiosError,\n});\n\nexport const SettingsSlice = createSlice({\n  name: 'settings',\n  initialState: initialState as SettingsState,\n  reducers: {\n    reset() {\n      return initialState;\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(updateAccount.pending, state => {\n        state.loading = true;\n        state.errorMessage = null;\n        state.updateSuccess = false;\n      })\n      .addCase(updateAccount.rejected, state => {\n        state.loading = false;\n        state.updateSuccess = false;\n        state.updateFailure = true;\n      })\n      .addCase(updateAccount.fulfilled, state => {\n        state.loading = false;\n        state.updateSuccess = true;\n        state.updateFailure = false;\n        state.successMessage = 'Settings saved!';\n      });\n  },\n});\n\nexport const { reset } = SettingsSlice.actions;\n\n// Reducer\nexport default SettingsSlice.reducer;\n"],"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","ignoreList":[]}