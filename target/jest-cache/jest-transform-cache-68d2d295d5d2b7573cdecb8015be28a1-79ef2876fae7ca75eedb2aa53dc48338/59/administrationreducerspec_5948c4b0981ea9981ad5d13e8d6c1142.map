{"file":"/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/modules/administration/administration.reducer.spec.ts","mappings":"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","names":[],"sources":["/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/modules/administration/administration.reducer.spec.ts"],"sourcesContent":["import axios from 'axios';\nimport sinon from 'sinon';\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport administration, {\n  getSystemHealth,\n  getSystemMetrics,\n  getSystemThreadDump,\n  getLoggers,\n  getConfigurations,\n  getEnv,\n  setLoggers,\n} from './administration.reducer';\n\ndescribe('Administration reducer tests', () => {\n  function isEmpty(element): boolean {\n    if (element instanceof Array) {\n      return element.length === 0;\n    }\n    return Object.keys(element).length === 0;\n  }\n\n  function testInitialState(state) {\n    expect(state).toMatchObject({\n      loading: false,\n      errorMessage: null,\n      totalItems: 0,\n    });\n    expect(isEmpty(state.logs.loggers));\n    expect(isEmpty(state.threadDump));\n  }\n\n  function testMultipleTypes(types, payload, testFunction, error?) {\n    types.forEach(e => {\n      testFunction(administration(undefined, { type: e, payload, error }));\n    });\n  }\n\n  describe('Common', () => {\n    it('should return the initial state', () => {\n      testInitialState(administration(undefined, { type: '' }));\n    });\n  });\n\n  describe('Requests', () => {\n    it('should set state to loading', () => {\n      testMultipleTypes(\n        [\n          getLoggers.pending.type,\n          getSystemHealth.pending.type,\n          getSystemMetrics.pending.type,\n          getSystemThreadDump.pending.type,\n          getConfigurations.pending.type,\n          getEnv.pending.type,\n        ],\n        {},\n        state => {\n          expect(state).toMatchObject({\n            errorMessage: null,\n            loading: true,\n          });\n        },\n      );\n    });\n  });\n\n  describe('Failures', () => {\n    it('should set state to failed and put an error message in errorMessage', () => {\n      testMultipleTypes(\n        [\n          getLoggers.rejected.type,\n          getSystemHealth.rejected.type,\n          getSystemMetrics.rejected.type,\n          getSystemThreadDump.rejected.type,\n          getConfigurations.rejected.type,\n          getEnv.rejected.type,\n        ],\n        'something happened',\n        state => {\n          expect(state).toMatchObject({\n            loading: false,\n            errorMessage: 'error',\n          });\n        },\n        {\n          message: 'error',\n        },\n      );\n    });\n  });\n\n  describe('Success', () => {\n    it('should update state according to a successful fetch logs request', () => {\n      const payload = {\n        data: {\n          loggers: {\n            main: {\n              effectiveLevel: 'WARN',\n            },\n          },\n        },\n      };\n      const toTest = administration(undefined, { type: getLoggers.fulfilled.type, payload });\n\n      expect(toTest).toMatchObject({\n        loading: false,\n        logs: payload.data,\n      });\n    });\n\n    it('should update state according to a successful fetch health request', () => {\n      const payload = { data: { status: 'UP' } };\n      const toTest = administration(undefined, { type: getSystemHealth.fulfilled.type, payload });\n\n      expect(toTest).toMatchObject({\n        loading: false,\n        health: payload.data,\n      });\n    });\n\n    it('should update state according to a successful fetch metrics request', () => {\n      const payload = { data: { version: '3.1.3', gauges: {} } };\n      const toTest = administration(undefined, { type: getSystemMetrics.fulfilled.type, payload });\n\n      expect(toTest).toMatchObject({\n        loading: false,\n        metrics: payload.data,\n      });\n    });\n\n    it('should update state according to a successful fetch thread dump request', () => {\n      const payload = { data: [{ threadName: 'hz.gateway.cached.thread-6', threadId: 9266 }] };\n      const toTest = administration(undefined, { type: getSystemThreadDump.fulfilled.type, payload });\n\n      expect(toTest).toMatchObject({\n        loading: false,\n        threadDump: payload.data,\n      });\n    });\n\n    it('should update state according to a successful fetch configurations request', () => {\n      const payload = { data: { contexts: { jhipster: { beans: {} } } } };\n      const toTest = administration(undefined, { type: getConfigurations.fulfilled.type, payload });\n\n      expect(toTest).toMatchObject({\n        loading: false,\n        configuration: {\n          configProps: payload.data,\n          env: {},\n        },\n      });\n    });\n\n    it('should update state according to a successful fetch env request', () => {\n      const payload = { data: { activeProfiles: ['api-docs', 'dev'] } };\n      const toTest = administration(undefined, { type: getEnv.fulfilled.type, payload });\n\n      expect(toTest).toMatchObject({\n        loading: false,\n        configuration: {\n          configProps: {},\n          env: payload.data,\n        },\n      });\n    });\n  });\n  describe('Actions', () => {\n    let store;\n\n    const resolvedObject = { value: 'whatever' };\n    const getState = jest.fn();\n    const dispatch = jest.fn();\n    const extra = {};\n    beforeEach(() => {\n      store = configureStore({\n        reducer: (state = [], action) => [...state, action],\n      });\n      axios.get = sinon.stub().returns(Promise.resolve(resolvedObject));\n      axios.post = sinon.stub().returns(Promise.resolve(resolvedObject));\n    });\n    it('dispatches FETCH_HEALTH_PENDING and FETCH_HEALTH_FULFILLED actions', async () => {\n      const result = await getSystemHealth()(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(getSystemHealth.fulfilled.match(result)).toBe(true);\n      expect(result.payload).toBe(resolvedObject);\n    });\n    it('dispatches FETCH_METRICS_PENDING and FETCH_METRICS_FULFILLED actions', async () => {\n      const result = await getSystemMetrics()(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(getSystemMetrics.fulfilled.match(result)).toBe(true);\n    });\n    it('dispatches FETCH_THREAD_DUMP_PENDING and FETCH_THREAD_DUMP_FULFILLED actions', async () => {\n      const result = await getSystemThreadDump()(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(getSystemThreadDump.fulfilled.match(result)).toBe(true);\n    });\n    it('dispatches FETCH_LOGS_PENDING and FETCH_LOGS_FULFILLED actions', async () => {\n      const result = await getLoggers()(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(getLoggers.fulfilled.match(result)).toBe(true);\n    });\n    it('dispatches FETCH_LOGS_CHANGE_LEVEL_PENDING and FETCH_LOGS_CHANGE_LEVEL_FULFILLED actions', async () => {\n      const result = await setLoggers({ name: 'ROOT', configuredLevel: 'DEBUG' })(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(setLoggers.fulfilled.match(result)).toBe(true);\n    });\n    it('dispatches FETCH_CONFIGURATIONS_PENDING and FETCH_CONFIGURATIONS_FULFILLED actions', async () => {\n      const result = await getConfigurations()(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(getConfigurations.fulfilled.match(result)).toBe(true);\n    });\n    it('dispatches FETCH_ENV_PENDING and FETCH_ENV_FULFILLED actions', async () => {\n      const result = await getEnv()(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(getEnv.fulfilled.match(result)).toBe(true);\n    });\n  });\n});\n"],"version":3}