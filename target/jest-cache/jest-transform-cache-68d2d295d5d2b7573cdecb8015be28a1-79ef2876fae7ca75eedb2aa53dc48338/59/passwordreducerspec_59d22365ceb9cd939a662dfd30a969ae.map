{"file":"/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/modules/account/password/password.reducer.spec.ts","mappings":"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","names":[],"sources":["/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/modules/account/password/password.reducer.spec.ts"],"sourcesContent":["import axios from 'axios';\nimport sinon from 'sinon';\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport password, { savePassword, reset } from './password.reducer';\n\ndescribe('Password reducer tests', () => {\n  describe('Common tests', () => {\n    it('should return the initial state', () => {\n      const toTest = password(undefined, { type: '' });\n      expect(toTest).toMatchObject({\n        loading: false,\n        errorMessage: null,\n        updateSuccess: false,\n        updateFailure: false,\n      });\n    });\n  });\n\n  describe('Password update', () => {\n    it('should detect a request', () => {\n      const toTest = password(undefined, { type: savePassword.pending.type });\n      expect(toTest).toMatchObject({\n        updateSuccess: false,\n        updateFailure: false,\n        loading: true,\n      });\n    });\n    it('should detect a success', () => {\n      const toTest = password(undefined, { type: savePassword.fulfilled.type });\n      expect(toTest).toMatchObject({\n        updateSuccess: true,\n        updateFailure: false,\n        loading: false,\n      });\n    });\n    it('should detect a failure', () => {\n      const toTest = password(undefined, { type: savePassword.rejected.type });\n      expect(toTest).toMatchObject({\n        updateSuccess: false,\n        updateFailure: true,\n        loading: false,\n      });\n    });\n\n    it('should reset the state', () => {\n      const initialState = {\n        loading: false,\n        errorMessage: null,\n        successMessage: null,\n        updateSuccess: false,\n        updateFailure: false,\n      };\n      expect(password({ ...initialState, loading: true }, reset)).toEqual({\n        ...initialState,\n      });\n    });\n  });\n\n  describe('Actions', () => {\n    let store;\n\n    const resolvedObject = { value: 'whatever' };\n    const getState = jest.fn();\n    const dispatch = jest.fn();\n    const extra = {};\n    beforeEach(() => {\n      store = configureStore({\n        reducer: (state = [], action) => [...state, action],\n      });\n      axios.post = sinon.stub().returns(Promise.resolve(resolvedObject));\n    });\n\n    it('dispatches UPDATE_PASSWORD_PENDING and UPDATE_PASSWORD_FULFILLED actions', async () => {\n      const arg = { currentPassword: '', newPassword: '' };\n\n      const result = await savePassword(arg)(dispatch, getState, extra);\n\n      const pendingAction = dispatch.mock.calls[0][0];\n      expect(pendingAction.meta.requestStatus).toBe('pending');\n      expect(savePassword.fulfilled.match(result)).toBe(true);\n    });\n    it('dispatches RESET actions', async () => {\n      await store.dispatch(reset());\n      expect(store.getState()).toEqual([expect.any(Object), expect.objectContaining(reset())]);\n    });\n  });\n});\n"],"version":3}