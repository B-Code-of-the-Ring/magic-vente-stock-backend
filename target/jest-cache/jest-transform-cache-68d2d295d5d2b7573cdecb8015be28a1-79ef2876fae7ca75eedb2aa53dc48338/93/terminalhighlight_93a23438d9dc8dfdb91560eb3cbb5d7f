07ee65a9f296f3ebb1d16bd661f74c0d
'use strict';

let pico = require('picocolors');
let tokenizer = require('./tokenize');
let Input;
function registerInput(dependant) {
  Input = dependant;
}
const HIGHLIGHT_THEME = {
  ';': pico.yellow,
  ':': pico.yellow,
  '(': pico.cyan,
  ')': pico.cyan,
  '[': pico.yellow,
  ']': pico.yellow,
  '{': pico.yellow,
  '}': pico.yellow,
  'at-word': pico.cyan,
  'brackets': pico.cyan,
  'call': pico.cyan,
  'class': pico.yellow,
  'comment': pico.gray,
  'hash': pico.magenta,
  'string': pico.green
};
function getTokenType([type, value], processor) {
  if (type === 'word') {
    if (value[0] === '.') {
      return 'class';
    }
    if (value[0] === '#') {
      return 'hash';
    }
  }
  if (!processor.endOfFile()) {
    let next = processor.nextToken();
    processor.back(next);
    if (next[0] === 'brackets' || next[0] === '(') return 'call';
  }
  return type;
}
function terminalHighlight(css) {
  let processor = tokenizer(new Input(css), {
    ignoreErrors: true
  });
  let result = '';
  while (!processor.endOfFile()) {
    let token = processor.nextToken();
    let color = HIGHLIGHT_THEME[getTokenType(token, processor)];
    if (color) {
      result += token[1].split(/\r?\n/).map(i => color(i)).join('\n');
    } else {
      result += token[1];
    }
  }
  return result;
}
terminalHighlight.registerInput = registerInput;
module.exports = terminalHighlight;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJwaWNvIiwicmVxdWlyZSIsInRva2VuaXplciIsIklucHV0IiwicmVnaXN0ZXJJbnB1dCIsImRlcGVuZGFudCIsIkhJR0hMSUdIVF9USEVNRSIsInllbGxvdyIsImN5YW4iLCJncmF5IiwibWFnZW50YSIsImdyZWVuIiwiZ2V0VG9rZW5UeXBlIiwidHlwZSIsInZhbHVlIiwicHJvY2Vzc29yIiwiZW5kT2ZGaWxlIiwibmV4dCIsIm5leHRUb2tlbiIsImJhY2siLCJ0ZXJtaW5hbEhpZ2hsaWdodCIsImNzcyIsImlnbm9yZUVycm9ycyIsInJlc3VsdCIsInRva2VuIiwiY29sb3IiLCJzcGxpdCIsIm1hcCIsImkiLCJqb2luIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbInRlcm1pbmFsLWhpZ2hsaWdodC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubGV0IHBpY28gPSByZXF1aXJlKCdwaWNvY29sb3JzJylcblxubGV0IHRva2VuaXplciA9IHJlcXVpcmUoJy4vdG9rZW5pemUnKVxuXG5sZXQgSW5wdXRcblxuZnVuY3Rpb24gcmVnaXN0ZXJJbnB1dChkZXBlbmRhbnQpIHtcbiAgSW5wdXQgPSBkZXBlbmRhbnRcbn1cblxuY29uc3QgSElHSExJR0hUX1RIRU1FID0ge1xuICAnOyc6IHBpY28ueWVsbG93LFxuICAnOic6IHBpY28ueWVsbG93LFxuICAnKCc6IHBpY28uY3lhbixcbiAgJyknOiBwaWNvLmN5YW4sXG4gICdbJzogcGljby55ZWxsb3csXG4gICddJzogcGljby55ZWxsb3csXG4gICd7JzogcGljby55ZWxsb3csXG4gICd9JzogcGljby55ZWxsb3csXG4gICdhdC13b3JkJzogcGljby5jeWFuLFxuICAnYnJhY2tldHMnOiBwaWNvLmN5YW4sXG4gICdjYWxsJzogcGljby5jeWFuLFxuICAnY2xhc3MnOiBwaWNvLnllbGxvdyxcbiAgJ2NvbW1lbnQnOiBwaWNvLmdyYXksXG4gICdoYXNoJzogcGljby5tYWdlbnRhLFxuICAnc3RyaW5nJzogcGljby5ncmVlblxufVxuXG5mdW5jdGlvbiBnZXRUb2tlblR5cGUoW3R5cGUsIHZhbHVlXSwgcHJvY2Vzc29yKSB7XG4gIGlmICh0eXBlID09PSAnd29yZCcpIHtcbiAgICBpZiAodmFsdWVbMF0gPT09ICcuJykge1xuICAgICAgcmV0dXJuICdjbGFzcydcbiAgICB9XG4gICAgaWYgKHZhbHVlWzBdID09PSAnIycpIHtcbiAgICAgIHJldHVybiAnaGFzaCdcbiAgICB9XG4gIH1cblxuICBpZiAoIXByb2Nlc3Nvci5lbmRPZkZpbGUoKSkge1xuICAgIGxldCBuZXh0ID0gcHJvY2Vzc29yLm5leHRUb2tlbigpXG4gICAgcHJvY2Vzc29yLmJhY2sobmV4dClcbiAgICBpZiAobmV4dFswXSA9PT0gJ2JyYWNrZXRzJyB8fCBuZXh0WzBdID09PSAnKCcpIHJldHVybiAnY2FsbCdcbiAgfVxuXG4gIHJldHVybiB0eXBlXG59XG5cbmZ1bmN0aW9uIHRlcm1pbmFsSGlnaGxpZ2h0KGNzcykge1xuICBsZXQgcHJvY2Vzc29yID0gdG9rZW5pemVyKG5ldyBJbnB1dChjc3MpLCB7IGlnbm9yZUVycm9yczogdHJ1ZSB9KVxuICBsZXQgcmVzdWx0ID0gJydcbiAgd2hpbGUgKCFwcm9jZXNzb3IuZW5kT2ZGaWxlKCkpIHtcbiAgICBsZXQgdG9rZW4gPSBwcm9jZXNzb3IubmV4dFRva2VuKClcbiAgICBsZXQgY29sb3IgPSBISUdITElHSFRfVEhFTUVbZ2V0VG9rZW5UeXBlKHRva2VuLCBwcm9jZXNzb3IpXVxuICAgIGlmIChjb2xvcikge1xuICAgICAgcmVzdWx0ICs9IHRva2VuWzFdXG4gICAgICAgIC5zcGxpdCgvXFxyP1xcbi8pXG4gICAgICAgIC5tYXAoaSA9PiBjb2xvcihpKSlcbiAgICAgICAgLmpvaW4oJ1xcbicpXG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdCArPSB0b2tlblsxXVxuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0XG59XG5cbnRlcm1pbmFsSGlnaGxpZ2h0LnJlZ2lzdGVySW5wdXQgPSByZWdpc3RlcklucHV0XG5cbm1vZHVsZS5leHBvcnRzID0gdGVybWluYWxIaWdobGlnaHRcbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWixJQUFJQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxZQUFZLENBQUM7QUFFaEMsSUFBSUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsWUFBWSxDQUFDO0FBRXJDLElBQUlFLEtBQUs7QUFFVCxTQUFTQyxhQUFhQSxDQUFDQyxTQUFTLEVBQUU7RUFDaENGLEtBQUssR0FBR0UsU0FBUztBQUNuQjtBQUVBLE1BQU1DLGVBQWUsR0FBRztFQUN0QixHQUFHLEVBQUVOLElBQUksQ0FBQ08sTUFBTTtFQUNoQixHQUFHLEVBQUVQLElBQUksQ0FBQ08sTUFBTTtFQUNoQixHQUFHLEVBQUVQLElBQUksQ0FBQ1EsSUFBSTtFQUNkLEdBQUcsRUFBRVIsSUFBSSxDQUFDUSxJQUFJO0VBQ2QsR0FBRyxFQUFFUixJQUFJLENBQUNPLE1BQU07RUFDaEIsR0FBRyxFQUFFUCxJQUFJLENBQUNPLE1BQU07RUFDaEIsR0FBRyxFQUFFUCxJQUFJLENBQUNPLE1BQU07RUFDaEIsR0FBRyxFQUFFUCxJQUFJLENBQUNPLE1BQU07RUFDaEIsU0FBUyxFQUFFUCxJQUFJLENBQUNRLElBQUk7RUFDcEIsVUFBVSxFQUFFUixJQUFJLENBQUNRLElBQUk7RUFDckIsTUFBTSxFQUFFUixJQUFJLENBQUNRLElBQUk7RUFDakIsT0FBTyxFQUFFUixJQUFJLENBQUNPLE1BQU07RUFDcEIsU0FBUyxFQUFFUCxJQUFJLENBQUNTLElBQUk7RUFDcEIsTUFBTSxFQUFFVCxJQUFJLENBQUNVLE9BQU87RUFDcEIsUUFBUSxFQUFFVixJQUFJLENBQUNXO0FBQ2pCLENBQUM7QUFFRCxTQUFTQyxZQUFZQSxDQUFDLENBQUNDLElBQUksRUFBRUMsS0FBSyxDQUFDLEVBQUVDLFNBQVMsRUFBRTtFQUM5QyxJQUFJRixJQUFJLEtBQUssTUFBTSxFQUFFO0lBQ25CLElBQUlDLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHLEVBQUU7TUFDcEIsT0FBTyxPQUFPO0lBQ2hCO0lBQ0EsSUFBSUEsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsRUFBRTtNQUNwQixPQUFPLE1BQU07SUFDZjtFQUNGO0VBRUEsSUFBSSxDQUFDQyxTQUFTLENBQUNDLFNBQVMsQ0FBQyxDQUFDLEVBQUU7SUFDMUIsSUFBSUMsSUFBSSxHQUFHRixTQUFTLENBQUNHLFNBQVMsQ0FBQyxDQUFDO0lBQ2hDSCxTQUFTLENBQUNJLElBQUksQ0FBQ0YsSUFBSSxDQUFDO0lBQ3BCLElBQUlBLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxVQUFVLElBQUlBLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHLEVBQUUsT0FBTyxNQUFNO0VBQzlEO0VBRUEsT0FBT0osSUFBSTtBQUNiO0FBRUEsU0FBU08saUJBQWlCQSxDQUFDQyxHQUFHLEVBQUU7RUFDOUIsSUFBSU4sU0FBUyxHQUFHYixTQUFTLENBQUMsSUFBSUMsS0FBSyxDQUFDa0IsR0FBRyxDQUFDLEVBQUU7SUFBRUMsWUFBWSxFQUFFO0VBQUssQ0FBQyxDQUFDO0VBQ2pFLElBQUlDLE1BQU0sR0FBRyxFQUFFO0VBQ2YsT0FBTyxDQUFDUixTQUFTLENBQUNDLFNBQVMsQ0FBQyxDQUFDLEVBQUU7SUFDN0IsSUFBSVEsS0FBSyxHQUFHVCxTQUFTLENBQUNHLFNBQVMsQ0FBQyxDQUFDO0lBQ2pDLElBQUlPLEtBQUssR0FBR25CLGVBQWUsQ0FBQ00sWUFBWSxDQUFDWSxLQUFLLEVBQUVULFNBQVMsQ0FBQyxDQUFDO0lBQzNELElBQUlVLEtBQUssRUFBRTtNQUNURixNQUFNLElBQUlDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FDZkUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUNkQyxHQUFHLENBQUNDLENBQUMsSUFBSUgsS0FBSyxDQUFDRyxDQUFDLENBQUMsQ0FBQyxDQUNsQkMsSUFBSSxDQUFDLElBQUksQ0FBQztJQUNmLENBQUMsTUFBTTtNQUNMTixNQUFNLElBQUlDLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDcEI7RUFDRjtFQUNBLE9BQU9ELE1BQU07QUFDZjtBQUVBSCxpQkFBaUIsQ0FBQ2hCLGFBQWEsR0FBR0EsYUFBYTtBQUUvQzBCLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHWCxpQkFBaUIiLCJpZ25vcmVMaXN0IjpbXX0=