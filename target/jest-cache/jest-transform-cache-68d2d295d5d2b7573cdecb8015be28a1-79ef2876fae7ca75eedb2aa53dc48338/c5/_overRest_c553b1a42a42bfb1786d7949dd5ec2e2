ef31d689f7bfec942984042af946debf
var apply = require('./_apply');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? func.length - 1 : start, 0);
  return function () {
    var args = arguments,
      index = -1,
      length = nativeMax(args.length - start, 0),
      array = Array(length);
    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}
module.exports = overRest;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhcHBseSIsInJlcXVpcmUiLCJuYXRpdmVNYXgiLCJNYXRoIiwibWF4Iiwib3ZlclJlc3QiLCJmdW5jIiwic3RhcnQiLCJ0cmFuc2Zvcm0iLCJ1bmRlZmluZWQiLCJsZW5ndGgiLCJhcmdzIiwiYXJndW1lbnRzIiwiaW5kZXgiLCJhcnJheSIsIkFycmF5Iiwib3RoZXJBcmdzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIl9vdmVyUmVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBwbHkgPSByZXF1aXJlKCcuL19hcHBseScpO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG52YXIgbmF0aXZlTWF4ID0gTWF0aC5tYXg7XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlUmVzdGAgd2hpY2ggdHJhbnNmb3JtcyB0aGUgcmVzdCBhcnJheS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gYXBwbHkgYSByZXN0IHBhcmFtZXRlciB0by5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbc3RhcnQ9ZnVuYy5sZW5ndGgtMV0gVGhlIHN0YXJ0IHBvc2l0aW9uIG9mIHRoZSByZXN0IHBhcmFtZXRlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHRyYW5zZm9ybSBUaGUgcmVzdCBhcnJheSB0cmFuc2Zvcm0uXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gb3ZlclJlc3QoZnVuYywgc3RhcnQsIHRyYW5zZm9ybSkge1xuICBzdGFydCA9IG5hdGl2ZU1heChzdGFydCA9PT0gdW5kZWZpbmVkID8gKGZ1bmMubGVuZ3RoIC0gMSkgOiBzdGFydCwgMCk7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgYXJncyA9IGFyZ3VtZW50cyxcbiAgICAgICAgaW5kZXggPSAtMSxcbiAgICAgICAgbGVuZ3RoID0gbmF0aXZlTWF4KGFyZ3MubGVuZ3RoIC0gc3RhcnQsIDApLFxuICAgICAgICBhcnJheSA9IEFycmF5KGxlbmd0aCk7XG5cbiAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgYXJyYXlbaW5kZXhdID0gYXJnc1tzdGFydCArIGluZGV4XTtcbiAgICB9XG4gICAgaW5kZXggPSAtMTtcbiAgICB2YXIgb3RoZXJBcmdzID0gQXJyYXkoc3RhcnQgKyAxKTtcbiAgICB3aGlsZSAoKytpbmRleCA8IHN0YXJ0KSB7XG4gICAgICBvdGhlckFyZ3NbaW5kZXhdID0gYXJnc1tpbmRleF07XG4gICAgfVxuICAgIG90aGVyQXJnc1tzdGFydF0gPSB0cmFuc2Zvcm0oYXJyYXkpO1xuICAgIHJldHVybiBhcHBseShmdW5jLCB0aGlzLCBvdGhlckFyZ3MpO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG92ZXJSZXN0O1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxVQUFVLENBQUM7O0FBRS9CO0FBQ0EsSUFBSUMsU0FBUyxHQUFHQyxJQUFJLENBQUNDLEdBQUc7O0FBRXhCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNDLFFBQVFBLENBQUNDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxTQUFTLEVBQUU7RUFDeENELEtBQUssR0FBR0wsU0FBUyxDQUFDSyxLQUFLLEtBQUtFLFNBQVMsR0FBSUgsSUFBSSxDQUFDSSxNQUFNLEdBQUcsQ0FBQyxHQUFJSCxLQUFLLEVBQUUsQ0FBQyxDQUFDO0VBQ3JFLE9BQU8sWUFBVztJQUNoQixJQUFJSSxJQUFJLEdBQUdDLFNBQVM7TUFDaEJDLEtBQUssR0FBRyxDQUFDLENBQUM7TUFDVkgsTUFBTSxHQUFHUixTQUFTLENBQUNTLElBQUksQ0FBQ0QsTUFBTSxHQUFHSCxLQUFLLEVBQUUsQ0FBQyxDQUFDO01BQzFDTyxLQUFLLEdBQUdDLEtBQUssQ0FBQ0wsTUFBTSxDQUFDO0lBRXpCLE9BQU8sRUFBRUcsS0FBSyxHQUFHSCxNQUFNLEVBQUU7TUFDdkJJLEtBQUssQ0FBQ0QsS0FBSyxDQUFDLEdBQUdGLElBQUksQ0FBQ0osS0FBSyxHQUFHTSxLQUFLLENBQUM7SUFDcEM7SUFDQUEsS0FBSyxHQUFHLENBQUMsQ0FBQztJQUNWLElBQUlHLFNBQVMsR0FBR0QsS0FBSyxDQUFDUixLQUFLLEdBQUcsQ0FBQyxDQUFDO0lBQ2hDLE9BQU8sRUFBRU0sS0FBSyxHQUFHTixLQUFLLEVBQUU7TUFDdEJTLFNBQVMsQ0FBQ0gsS0FBSyxDQUFDLEdBQUdGLElBQUksQ0FBQ0UsS0FBSyxDQUFDO0lBQ2hDO0lBQ0FHLFNBQVMsQ0FBQ1QsS0FBSyxDQUFDLEdBQUdDLFNBQVMsQ0FBQ00sS0FBSyxDQUFDO0lBQ25DLE9BQU9kLEtBQUssQ0FBQ00sSUFBSSxFQUFFLElBQUksRUFBRVUsU0FBUyxDQUFDO0VBQ3JDLENBQUM7QUFDSDtBQUVBQyxNQUFNLENBQUNDLE9BQU8sR0FBR2IsUUFBUSIsImlnbm9yZUxpc3QiOltdfQ==