e204fa884937a5b5815e66b049d3ac9c
"use strict";

/* istanbul ignore next */
function cov_1qsukuk4yb() {
  var path = "/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/modules/account/password/password.reducer.ts";
  var hash = "b4a0346f50e6e17791e493b5908912d99e0b6595";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/modules/account/password/password.reducer.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 70
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 5,
          column: 57
        }
      },
      "4": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 45
        }
      },
      "5": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 7,
          column: 68
        }
      },
      "6": {
        start: {
          line: 8,
          column: 21
        },
        end: {
          line: 14,
          column: 1
        }
      },
      "7": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 28
        }
      },
      "8": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 283
        }
      },
      "9": {
        start: {
          line: 17,
          column: 97
        },
        end: {
          line: 17,
          column: 224
        }
      },
      "10": {
        start: {
          line: 17,
          column: 154
        },
        end: {
          line: 17,
          column: 221
        }
      },
      "11": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 46,
          column: 3
        }
      },
      "12": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 32
        }
      },
      "13": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 44,
          column: 11
        }
      },
      "14": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 38
        }
      },
      "15": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 40
        }
      },
      "16": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 33
        }
      },
      "17": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 34
        }
      },
      "18": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 40
        }
      },
      "19": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 39
        }
      },
      "20": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 93
        }
      },
      "21": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 34
        }
      },
      "22": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 39
        }
      },
      "23": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 40
        }
      },
      "24": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 55
        }
      },
      "25": {
        start: {
          line: 47,
          column: 0
        },
        end: {
          line: 47,
          column: 52
        }
      },
      "26": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 49,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 83
          },
          end: {
            line: 17,
            column: 84
          }
        },
        loc: {
          start: {
            line: 17,
            column: 97
          },
          end: {
            line: 17,
            column: 224
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 139
          },
          end: {
            line: 17,
            column: 140
          }
        },
        loc: {
          start: {
            line: 17,
            column: 152
          },
          end: {
            line: 17,
            column: 223
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 22,
            column: 9
          }
        },
        loc: {
          start: {
            line: 22,
            column: 16
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 27
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 28,
            column: 51
          },
          end: {
            line: 28,
            column: 52
          }
        },
        loc: {
          start: {
            line: 28,
            column: 60
          },
          end: {
            line: 32,
            column: 9
          }
        },
        line: 28
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 33,
            column: 52
          },
          end: {
            line: 33,
            column: 53
          }
        },
        loc: {
          start: {
            line: 33,
            column: 61
          },
          end: {
            line: 38,
            column: 9
          }
        },
        line: 33
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 39,
            column: 53
          },
          end: {
            line: 39,
            column: 54
          }
        },
        loc: {
          start: {
            line: 39,
            column: 62
          },
          end: {
            line: 44,
            column: 9
          }
        },
        line: 39
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/modules/account/password/password.reducer.ts",
      mappings: ";;;;AAAA,0DAA0B;AAC1B,8CAAiE;AAEjE,qEAAwE;AAExE,MAAM,YAAY,GAAG;IACnB,OAAO,EAAE,KAAK;IACd,YAAY,EAAE,IAAI;IAClB,cAAc,EAAE,IAAI;IACpB,aAAa,EAAE,KAAK;IACpB,aAAa,EAAE,KAAK;CACrB,CAAC;AAIF,MAAM,MAAM,GAAG,aAAa,CAAC;AAO7B,UAAU;AAEG,QAAA,YAAY,GAAG,IAAA,0BAAgB,EAC1C,0BAA0B,EAC1B,CAAO,QAAmB,EAAE,EAAE,0DAAC,OAAA,eAAK,CAAC,IAAI,CAAC,GAAG,MAAM,kBAAkB,EAAE,QAAQ,CAAC,CAAA,GAAA,EAChF,EAAE,cAAc,EAAE,mCAAmB,EAAE,CACxC,CAAC;AAEW,QAAA,aAAa,GAAG,IAAA,qBAAW,EAAC;IACvC,IAAI,EAAE,UAAU;IAChB,YAAY,EAAE,YAA6B;IAC3C,QAAQ,EAAE;QACR,KAAK;YACH,OAAO,YAAY,CAAC;QACtB,CAAC;KACF;IACD,aAAa,CAAC,OAAO;QACnB,OAAO;aACJ,OAAO,CAAC,oBAAY,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE;YACrC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC;YAC1B,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC;YAC5B,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC;aACD,OAAO,CAAC,oBAAY,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE;YACtC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;YACtB,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC;YAC5B,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC;YAC3B,KAAK,CAAC,YAAY,GAAG,2DAA2D,CAAC;QACnF,CAAC,CAAC;aACD,OAAO,CAAC,oBAAY,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE;YACvC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;YACtB,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC;YAC3B,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC;YAC5B,KAAK,CAAC,cAAc,GAAG,mBAAmB,CAAC;QAC7C,CAAC,CAAC,CAAC;IACP,CAAC;CACF,CAAC,CAAC;AAEY,aAAK,GAAK,qBAAa,CAAC,OAAO,OAAC;AAE/C,UAAU;AACV,kBAAe,qBAAa,CAAC,OAAO,CAAC",
      names: [],
      sources: ["/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/modules/account/password/password.reducer.ts"],
      sourcesContent: ["import axios from 'axios';\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nimport { serializeAxiosError } from 'app/shared/reducers/reducer.utils';\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  successMessage: null,\n  updateSuccess: false,\n  updateFailure: false,\n};\n\nexport type PasswordState = Readonly<typeof initialState>;\n\nconst apiUrl = 'api/account';\n\ninterface IPassword {\n  currentPassword: string;\n  newPassword: string;\n}\n\n// Actions\n\nexport const savePassword = createAsyncThunk(\n  'password/update_password',\n  async (password: IPassword) => axios.post(`${apiUrl}/change-password`, password),\n  { serializeError: serializeAxiosError },\n);\n\nexport const PasswordSlice = createSlice({\n  name: 'password',\n  initialState: initialState as PasswordState,\n  reducers: {\n    reset() {\n      return initialState;\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(savePassword.pending, state => {\n        state.errorMessage = null;\n        state.updateSuccess = false;\n        state.loading = true;\n      })\n      .addCase(savePassword.rejected, state => {\n        state.loading = false;\n        state.updateSuccess = false;\n        state.updateFailure = true;\n        state.errorMessage = 'An error has occurred! The password could not be changed.';\n      })\n      .addCase(savePassword.fulfilled, state => {\n        state.loading = false;\n        state.updateSuccess = true;\n        state.updateFailure = false;\n        state.successMessage = 'Password changed!';\n      });\n  },\n});\n\nexport const { reset } = PasswordSlice.actions;\n\n// Reducer\nexport default PasswordSlice.reducer;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b4a0346f50e6e17791e493b5908912d99e0b6595"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1qsukuk4yb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1qsukuk4yb();
cov_1qsukuk4yb().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1qsukuk4yb().s[1]++;
exports.reset = exports.PasswordSlice = exports.savePassword = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1qsukuk4yb().s[2]++, require("tslib"));
const axios_1 =
/* istanbul ignore next */
(cov_1qsukuk4yb().s[3]++, tslib_1.__importDefault(require("axios")));
const toolkit_1 =
/* istanbul ignore next */
(cov_1qsukuk4yb().s[4]++, require("@reduxjs/toolkit"));
const reducer_utils_1 =
/* istanbul ignore next */
(cov_1qsukuk4yb().s[5]++, require("app/shared/reducers/reducer.utils"));
const initialState =
/* istanbul ignore next */
(cov_1qsukuk4yb().s[6]++, {
  loading: false,
  errorMessage: null,
  successMessage: null,
  updateSuccess: false,
  updateFailure: false
});
const apiUrl =
/* istanbul ignore next */
(cov_1qsukuk4yb().s[7]++, 'api/account');
// Actions
/* istanbul ignore next */
cov_1qsukuk4yb().s[8]++;
exports.savePassword = (0, toolkit_1.createAsyncThunk)('password/update_password', password => {
  /* istanbul ignore next */
  cov_1qsukuk4yb().f[0]++;
  cov_1qsukuk4yb().s[9]++;
  return tslib_1.__awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1qsukuk4yb().f[1]++;
    cov_1qsukuk4yb().s[10]++;
    return axios_1.default.post(`${apiUrl}/change-password`, password);
  });
}, {
  serializeError: reducer_utils_1.serializeAxiosError
});
/* istanbul ignore next */
cov_1qsukuk4yb().s[11]++;
exports.PasswordSlice = (0, toolkit_1.createSlice)({
  name: 'password',
  initialState: initialState,
  reducers: {
    reset() {
      /* istanbul ignore next */
      cov_1qsukuk4yb().f[2]++;
      cov_1qsukuk4yb().s[12]++;
      return initialState;
    }
  },
  extraReducers(builder) {
    /* istanbul ignore next */
    cov_1qsukuk4yb().f[3]++;
    cov_1qsukuk4yb().s[13]++;
    builder.addCase(exports.savePassword.pending, state => {
      /* istanbul ignore next */
      cov_1qsukuk4yb().f[4]++;
      cov_1qsukuk4yb().s[14]++;
      state.errorMessage = null;
      /* istanbul ignore next */
      cov_1qsukuk4yb().s[15]++;
      state.updateSuccess = false;
      /* istanbul ignore next */
      cov_1qsukuk4yb().s[16]++;
      state.loading = true;
    }).addCase(exports.savePassword.rejected, state => {
      /* istanbul ignore next */
      cov_1qsukuk4yb().f[5]++;
      cov_1qsukuk4yb().s[17]++;
      state.loading = false;
      /* istanbul ignore next */
      cov_1qsukuk4yb().s[18]++;
      state.updateSuccess = false;
      /* istanbul ignore next */
      cov_1qsukuk4yb().s[19]++;
      state.updateFailure = true;
      /* istanbul ignore next */
      cov_1qsukuk4yb().s[20]++;
      state.errorMessage = 'An error has occurred! The password could not be changed.';
    }).addCase(exports.savePassword.fulfilled, state => {
      /* istanbul ignore next */
      cov_1qsukuk4yb().f[6]++;
      cov_1qsukuk4yb().s[21]++;
      state.loading = false;
      /* istanbul ignore next */
      cov_1qsukuk4yb().s[22]++;
      state.updateSuccess = true;
      /* istanbul ignore next */
      cov_1qsukuk4yb().s[23]++;
      state.updateFailure = false;
      /* istanbul ignore next */
      cov_1qsukuk4yb().s[24]++;
      state.successMessage = 'Password changed!';
    });
  }
});
/* istanbul ignore next */
cov_1qsukuk4yb().s[25]++;
exports.reset = exports.PasswordSlice.actions.reset;
// Reducer
/* istanbul ignore next */
cov_1qsukuk4yb().s[26]++;
exports.default = exports.PasswordSlice.reducer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXFzdWt1azR5YiIsImFjdHVhbENvdmVyYWdlIiwicyIsImF4aW9zXzEiLCJ0c2xpYl8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsInRvb2xraXRfMSIsInJlZHVjZXJfdXRpbHNfMSIsImluaXRpYWxTdGF0ZSIsImxvYWRpbmciLCJlcnJvck1lc3NhZ2UiLCJzdWNjZXNzTWVzc2FnZSIsInVwZGF0ZVN1Y2Nlc3MiLCJ1cGRhdGVGYWlsdXJlIiwiYXBpVXJsIiwiZXhwb3J0cyIsInNhdmVQYXNzd29yZCIsImNyZWF0ZUFzeW5jVGh1bmsiLCJwYXNzd29yZCIsImYiLCJfX2F3YWl0ZXIiLCJkZWZhdWx0IiwicG9zdCIsInNlcmlhbGl6ZUVycm9yIiwic2VyaWFsaXplQXhpb3NFcnJvciIsIlBhc3N3b3JkU2xpY2UiLCJjcmVhdGVTbGljZSIsIm5hbWUiLCJyZWR1Y2VycyIsInJlc2V0IiwiZXh0cmFSZWR1Y2VycyIsImJ1aWxkZXIiLCJhZGRDYXNlIiwicGVuZGluZyIsInN0YXRlIiwicmVqZWN0ZWQiLCJmdWxmaWxsZWQiLCJhY3Rpb25zIiwicmVkdWNlciJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9wY2NvMDU2L0RvY3VtZW50cy9Db3VycyBJVFUvcmlib3VjaG9uL21hZ2ljdmVudGVzdG9jay9zcmMvbWFpbi93ZWJhcHAvYXBwL21vZHVsZXMvYWNjb3VudC9wYXNzd29yZC9wYXNzd29yZC5yZWR1Y2VyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5pbXBvcnQgeyBjcmVhdGVBc3luY1RodW5rLCBjcmVhdGVTbGljZSB9IGZyb20gJ0ByZWR1eGpzL3Rvb2xraXQnO1xuXG5pbXBvcnQgeyBzZXJpYWxpemVBeGlvc0Vycm9yIH0gZnJvbSAnYXBwL3NoYXJlZC9yZWR1Y2Vycy9yZWR1Y2VyLnV0aWxzJztcblxuY29uc3QgaW5pdGlhbFN0YXRlID0ge1xuICBsb2FkaW5nOiBmYWxzZSxcbiAgZXJyb3JNZXNzYWdlOiBudWxsLFxuICBzdWNjZXNzTWVzc2FnZTogbnVsbCxcbiAgdXBkYXRlU3VjY2VzczogZmFsc2UsXG4gIHVwZGF0ZUZhaWx1cmU6IGZhbHNlLFxufTtcblxuZXhwb3J0IHR5cGUgUGFzc3dvcmRTdGF0ZSA9IFJlYWRvbmx5PHR5cGVvZiBpbml0aWFsU3RhdGU+O1xuXG5jb25zdCBhcGlVcmwgPSAnYXBpL2FjY291bnQnO1xuXG5pbnRlcmZhY2UgSVBhc3N3b3JkIHtcbiAgY3VycmVudFBhc3N3b3JkOiBzdHJpbmc7XG4gIG5ld1Bhc3N3b3JkOiBzdHJpbmc7XG59XG5cbi8vIEFjdGlvbnNcblxuZXhwb3J0IGNvbnN0IHNhdmVQYXNzd29yZCA9IGNyZWF0ZUFzeW5jVGh1bmsoXG4gICdwYXNzd29yZC91cGRhdGVfcGFzc3dvcmQnLFxuICBhc3luYyAocGFzc3dvcmQ6IElQYXNzd29yZCkgPT4gYXhpb3MucG9zdChgJHthcGlVcmx9L2NoYW5nZS1wYXNzd29yZGAsIHBhc3N3b3JkKSxcbiAgeyBzZXJpYWxpemVFcnJvcjogc2VyaWFsaXplQXhpb3NFcnJvciB9LFxuKTtcblxuZXhwb3J0IGNvbnN0IFBhc3N3b3JkU2xpY2UgPSBjcmVhdGVTbGljZSh7XG4gIG5hbWU6ICdwYXNzd29yZCcsXG4gIGluaXRpYWxTdGF0ZTogaW5pdGlhbFN0YXRlIGFzIFBhc3N3b3JkU3RhdGUsXG4gIHJlZHVjZXJzOiB7XG4gICAgcmVzZXQoKSB7XG4gICAgICByZXR1cm4gaW5pdGlhbFN0YXRlO1xuICAgIH0sXG4gIH0sXG4gIGV4dHJhUmVkdWNlcnMoYnVpbGRlcikge1xuICAgIGJ1aWxkZXJcbiAgICAgIC5hZGRDYXNlKHNhdmVQYXNzd29yZC5wZW5kaW5nLCBzdGF0ZSA9PiB7XG4gICAgICAgIHN0YXRlLmVycm9yTWVzc2FnZSA9IG51bGw7XG4gICAgICAgIHN0YXRlLnVwZGF0ZVN1Y2Nlc3MgPSBmYWxzZTtcbiAgICAgICAgc3RhdGUubG9hZGluZyA9IHRydWU7XG4gICAgICB9KVxuICAgICAgLmFkZENhc2Uoc2F2ZVBhc3N3b3JkLnJlamVjdGVkLCBzdGF0ZSA9PiB7XG4gICAgICAgIHN0YXRlLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgc3RhdGUudXBkYXRlU3VjY2VzcyA9IGZhbHNlO1xuICAgICAgICBzdGF0ZS51cGRhdGVGYWlsdXJlID0gdHJ1ZTtcbiAgICAgICAgc3RhdGUuZXJyb3JNZXNzYWdlID0gJ0FuIGVycm9yIGhhcyBvY2N1cnJlZCEgVGhlIHBhc3N3b3JkIGNvdWxkIG5vdCBiZSBjaGFuZ2VkLic7XG4gICAgICB9KVxuICAgICAgLmFkZENhc2Uoc2F2ZVBhc3N3b3JkLmZ1bGZpbGxlZCwgc3RhdGUgPT4ge1xuICAgICAgICBzdGF0ZS5sb2FkaW5nID0gZmFsc2U7XG4gICAgICAgIHN0YXRlLnVwZGF0ZVN1Y2Nlc3MgPSB0cnVlO1xuICAgICAgICBzdGF0ZS51cGRhdGVGYWlsdXJlID0gZmFsc2U7XG4gICAgICAgIHN0YXRlLnN1Y2Nlc3NNZXNzYWdlID0gJ1Bhc3N3b3JkIGNoYW5nZWQhJztcbiAgICAgIH0pO1xuICB9LFxufSk7XG5cbmV4cG9ydCBjb25zdCB7IHJlc2V0IH0gPSBQYXNzd29yZFNsaWNlLmFjdGlvbnM7XG5cbi8vIFJlZHVjZXJcbmV4cG9ydCBkZWZhdWx0IFBhc3N3b3JkU2xpY2UucmVkdWNlcjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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