caaadd516aeb5215a1fedfb739d6b984
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EndpointsRequestsMetrics = void 0;
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importDefault(require("react"));
const formatter_1 = require("../../formatter");
const reactstrap_1 = require("reactstrap");
class EndpointsRequestsMetrics extends react_1.default.Component {
  render() {
    const {
      endpointsRequestsMetrics,
      wholeNumberFormat
    } = this.props;
    return react_1.default.createElement("div", null, react_1.default.createElement("h3", null, "Endpoints requests (time in millisecond)"), react_1.default.createElement(reactstrap_1.Table, null, react_1.default.createElement("thead", null, react_1.default.createElement("tr", null, react_1.default.createElement("th", null, "Method"), react_1.default.createElement("th", null, "Endpoint url"), react_1.default.createElement("th", null, "Count"), react_1.default.createElement("th", null, "Mean"))), react_1.default.createElement("tbody", null, Object.entries(endpointsRequestsMetrics).map(([key, entry]) => Object.entries(entry).map(([method, methodValue]) => react_1.default.createElement("tr", {
      key: key + '-' + method
    }, react_1.default.createElement("td", null, method), react_1.default.createElement("td", null, key), react_1.default.createElement("td", null, methodValue.count), react_1.default.createElement("td", null, react_1.default.createElement(formatter_1.TextFormat, {
      value: methodValue.mean,
      type: "number",
      format: wholeNumberFormat
    }))))))));
  }
}
exports.EndpointsRequestsMetrics = EndpointsRequestsMetrics;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwidHNsaWJfMSIsIl9faW1wb3J0RGVmYXVsdCIsInJlcXVpcmUiLCJmb3JtYXR0ZXJfMSIsInJlYWN0c3RyYXBfMSIsIkVuZHBvaW50c1JlcXVlc3RzTWV0cmljcyIsImRlZmF1bHQiLCJDb21wb25lbnQiLCJyZW5kZXIiLCJlbmRwb2ludHNSZXF1ZXN0c01ldHJpY3MiLCJ3aG9sZU51bWJlckZvcm1hdCIsInByb3BzIiwiY3JlYXRlRWxlbWVudCIsIlRhYmxlIiwiT2JqZWN0IiwiZW50cmllcyIsIm1hcCIsImtleSIsImVudHJ5IiwibWV0aG9kIiwibWV0aG9kVmFsdWUiLCJjb3VudCIsIlRleHRGb3JtYXQiLCJ2YWx1ZSIsIm1lYW4iLCJ0eXBlIiwiZm9ybWF0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnQvbWV0cmljcy9lbmRwb2ludHNSZXF1ZXN0c01ldHJpY3MudHN4Il0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsTUFBQUEsT0FBQSxHQUFBQyxPQUFBLENBQUFDLGVBQUEsQ0FBQUMsT0FBQTtBQUNBLE1BQUFDLFdBQUEsR0FBQUQsT0FBQTtBQUNBLE1BQUFFLFlBQUEsR0FBQUYsT0FBQTtBQU9BLE1BQWFHLHdCQUF5QixTQUFRTixPQUFBLENBQUFPLE9BQUssQ0FBQ0MsU0FBeUM7RUFDM0ZDLE1BQU1BLENBQUE7SUFDSixNQUFNO01BQUVDLHdCQUF3QjtNQUFFQztJQUFpQixDQUFFLEdBQUcsSUFBSSxDQUFDQyxLQUFLO0lBQ2xFLE9BQ0VaLE9BQUEsQ0FBQU8sT0FBQSxDQUFBTSxhQUFBLGNBQ0ViLE9BQUEsQ0FBQU8sT0FBQSxDQUFBTSxhQUFBLHdEQUFpRCxFQUNqRGIsT0FBQSxDQUFBTyxPQUFBLENBQUFNLGFBQUEsQ0FBQ1IsWUFBQSxDQUFBUyxLQUFLLFFBQ0pkLE9BQUEsQ0FBQU8sT0FBQSxDQUFBTSxhQUFBLGdCQUNFYixPQUFBLENBQUFPLE9BQUEsQ0FBQU0sYUFBQSxhQUNFYixPQUFBLENBQUFPLE9BQUEsQ0FBQU0sYUFBQSxzQkFBZSxFQUNmYixPQUFBLENBQUFPLE9BQUEsQ0FBQU0sYUFBQSw0QkFBcUIsRUFDckJiLE9BQUEsQ0FBQU8sT0FBQSxDQUFBTSxhQUFBLHFCQUFjLEVBQ2RiLE9BQUEsQ0FBQU8sT0FBQSxDQUFBTSxhQUFBLG9CQUFhLENBQ1YsQ0FDQyxFQUNSYixPQUFBLENBQUFPLE9BQUEsQ0FBQU0sYUFBQSxnQkFDR0UsTUFBTSxDQUFDQyxPQUFPLENBQUNOLHdCQUF3QixDQUFDLENBQUNPLEdBQUcsQ0FBQyxDQUFDLENBQUNDLEdBQUcsRUFBRUMsS0FBSyxDQUFDLEtBQ3pESixNQUFNLENBQUNDLE9BQU8sQ0FBQ0csS0FBSyxDQUFDLENBQUNGLEdBQUcsQ0FBQyxDQUFDLENBQUNHLE1BQU0sRUFBRUMsV0FBVyxDQUFDLEtBQzlDckIsT0FBQSxDQUFBTyxPQUFBLENBQUFNLGFBQUE7TUFBSUssR0FBRyxFQUFFQSxHQUFHLEdBQUcsR0FBRyxHQUFHRTtJQUFNLEdBQ3pCcEIsT0FBQSxDQUFBTyxPQUFBLENBQUFNLGFBQUEsYUFBS08sTUFBTSxDQUFNLEVBQ2pCcEIsT0FBQSxDQUFBTyxPQUFBLENBQUFNLGFBQUEsYUFBS0ssR0FBRyxDQUFNLEVBQ2RsQixPQUFBLENBQUFPLE9BQUEsQ0FBQU0sYUFBQSxhQUFLUSxXQUFXLENBQUNDLEtBQUssQ0FBTSxFQUM1QnRCLE9BQUEsQ0FBQU8sT0FBQSxDQUFBTSxhQUFBLGFBQ0ViLE9BQUEsQ0FBQU8sT0FBQSxDQUFBTSxhQUFBLENBQUNULFdBQUEsQ0FBQW1CLFVBQVU7TUFBQ0MsS0FBSyxFQUFFSCxXQUFXLENBQUNJLElBQUk7TUFBRUMsSUFBSSxFQUFDLFFBQVE7TUFBQ0MsTUFBTSxFQUFFaEI7SUFBaUIsRUFBSSxDQUM3RSxDQUVSLENBQUMsQ0FDSCxDQUNLLENBQ0YsQ0FDSjtFQUVWOztBQWhDRmlCLE9BQUEsQ0FBQXRCLHdCQUFBLEdBQUFBLHdCQUFBIiwiaWdub3JlTGlzdCI6W119