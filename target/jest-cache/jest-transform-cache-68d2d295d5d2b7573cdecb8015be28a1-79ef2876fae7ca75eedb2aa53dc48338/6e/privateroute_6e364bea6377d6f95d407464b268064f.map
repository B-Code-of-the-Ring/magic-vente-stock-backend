{"version":3,"names":["cov_10arvavmd9","actualCoverage","s","react_1","tslib_1","__importDefault","require","react_router_dom_1","store_1","error_boundary_1","PrivateRoute","_a","f","children","hasAnyAuthorities","b","rest","__rest","isAuthenticated","useAppSelector","state","authentication","sessionHasBeenFetched","account","isAuthorized","exports","hasAnyAuthority","authorities","pageLocation","useLocation","Error","path","default","createElement","className","Navigate","to","pathname","search","replace","from","length","some","auth","includes"],"sources":["/Users/pcco056/Documents/Cours ITU/ribouchon/magicventestock/src/main/webapp/app/shared/auth/private-route.tsx"],"sourcesContent":["import React from 'react';\nimport { useLocation, Navigate, PathRouteProps } from 'react-router-dom';\n\nimport { useAppSelector } from 'app/config/store';\nimport ErrorBoundary from 'app/shared/error/error-boundary';\n\ninterface IOwnProps extends PathRouteProps {\n  hasAnyAuthorities?: string[];\n  children: React.ReactNode;\n}\n\nexport const PrivateRoute = ({ children, hasAnyAuthorities = [], ...rest }: IOwnProps) => {\n  const isAuthenticated = useAppSelector(state => state.authentication.isAuthenticated);\n  const sessionHasBeenFetched = useAppSelector(state => state.authentication.sessionHasBeenFetched);\n  const account = useAppSelector(state => state.authentication.account);\n  const isAuthorized = hasAnyAuthority(account.authorities, hasAnyAuthorities);\n  const pageLocation = useLocation();\n\n  if (!children) {\n    throw new Error(`A component needs to be specified for private route for path ${(rest as any).path}`);\n  }\n\n  if (!sessionHasBeenFetched) {\n    return <div></div>;\n  }\n\n  if (isAuthenticated) {\n    if (isAuthorized) {\n      return <ErrorBoundary>{children}</ErrorBoundary>;\n    }\n\n    return (\n      <div className=\"insufficient-authority\">\n        <div className=\"alert alert-danger\">Vous n&apos;avez pas les droits pour accéder à cette page.</div>\n      </div>\n    );\n  }\n\n  return (\n    <Navigate\n      to={{\n        pathname: '/login',\n        search: pageLocation.search,\n      }}\n      replace\n      state={{ from: pageLocation }}\n    />\n  );\n};\n\nexport const hasAnyAuthority = (authorities: string[], hasAnyAuthorities: string[]) => {\n  if (authorities && authorities.length !== 0) {\n    if (hasAnyAuthorities.length === 0) {\n      return true;\n    }\n    return hasAnyAuthorities.some(auth => authorities.includes(auth));\n  }\n  return false;\n};\n\n/**\n * Checks authentication before showing the children and redirects to the\n * login page if the user is not authenticated.\n * If hasAnyAuthorities is provided the authorization status is also\n * checked and an error message is shown if the user is not authorized.\n */\nexport default PrivateRoute;\n"],"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","ignoreList":[]}