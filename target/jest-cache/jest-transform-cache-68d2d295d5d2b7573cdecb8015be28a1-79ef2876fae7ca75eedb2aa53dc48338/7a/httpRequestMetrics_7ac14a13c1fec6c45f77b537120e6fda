6da54b5ff36f3deaa711e3fd14c0d859
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HttpRequestMetrics = void 0;
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importDefault(require("react"));
const formatter_1 = require("../../formatter");
const reactstrap_1 = require("reactstrap");
const number_utils_1 = require("../../util/number-utils");
class HttpRequestMetrics extends react_1.default.Component {
  render() {
    const {
      requestMetrics,
      wholeNumberFormat,
      twoDigitAfterPointFormat
    } = this.props;
    return react_1.default.createElement("div", null, react_1.default.createElement("h3", null, "HTTP requests (time in milliseconds)"), react_1.default.createElement("p", null, react_1.default.createElement("span", null, "Total requests:"), ' ', react_1.default.createElement("b", null, react_1.default.createElement(formatter_1.TextFormat, {
      value: requestMetrics.all.count,
      type: "number",
      format: wholeNumberFormat
    }))), react_1.default.createElement(reactstrap_1.Table, null, react_1.default.createElement("thead", null, react_1.default.createElement("tr", null, react_1.default.createElement("th", null, "Code"), react_1.default.createElement("th", null, "Count"), react_1.default.createElement("th", {
      className: "text-end"
    }, "Mean"), react_1.default.createElement("th", {
      className: "text-end"
    }, "Max"))), react_1.default.createElement("tbody", null, Object.keys(requestMetrics.percode).map((key, index) => react_1.default.createElement("tr", {
      key: index
    }, react_1.default.createElement("td", null, key), react_1.default.createElement("td", null, react_1.default.createElement(reactstrap_1.Progress, {
      min: "0",
      max: requestMetrics.all.count,
      value: requestMetrics.percode[key].count,
      color: "success",
      animated: true
    }, react_1.default.createElement("span", null, react_1.default.createElement(formatter_1.TextFormat, {
      value: requestMetrics.percode[key].count,
      type: "number",
      format: wholeNumberFormat
    })))), react_1.default.createElement("td", {
      className: "text-end"
    }, react_1.default.createElement(formatter_1.TextFormat, {
      value: (0, number_utils_1.nanToZero)(requestMetrics.percode[key].mean),
      type: "number",
      format: twoDigitAfterPointFormat
    })), react_1.default.createElement("td", {
      className: "text-end"
    }, react_1.default.createElement(formatter_1.TextFormat, {
      value: (0, number_utils_1.nanToZero)(requestMetrics.percode[key].max),
      type: "number",
      format: twoDigitAfterPointFormat
    })))))));
  }
}
exports.HttpRequestMetrics = HttpRequestMetrics;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwidHNsaWJfMSIsIl9faW1wb3J0RGVmYXVsdCIsInJlcXVpcmUiLCJmb3JtYXR0ZXJfMSIsInJlYWN0c3RyYXBfMSIsIm51bWJlcl91dGlsc18xIiwiSHR0cFJlcXVlc3RNZXRyaWNzIiwiZGVmYXVsdCIsIkNvbXBvbmVudCIsInJlbmRlciIsInJlcXVlc3RNZXRyaWNzIiwid2hvbGVOdW1iZXJGb3JtYXQiLCJ0d29EaWdpdEFmdGVyUG9pbnRGb3JtYXQiLCJwcm9wcyIsImNyZWF0ZUVsZW1lbnQiLCJUZXh0Rm9ybWF0IiwidmFsdWUiLCJhbGwiLCJjb3VudCIsInR5cGUiLCJmb3JtYXQiLCJUYWJsZSIsImNsYXNzTmFtZSIsIk9iamVjdCIsImtleXMiLCJwZXJjb2RlIiwibWFwIiwia2V5IiwiaW5kZXgiLCJQcm9ncmVzcyIsIm1pbiIsIm1heCIsImNvbG9yIiwiYW5pbWF0ZWQiLCJuYW5Ub1plcm8iLCJtZWFuIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnQvbWV0cmljcy9odHRwUmVxdWVzdE1ldHJpY3MudHN4Il0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsTUFBQUEsT0FBQSxHQUFBQyxPQUFBLENBQUFDLGVBQUEsQ0FBQUMsT0FBQTtBQUNBLE1BQUFDLFdBQUEsR0FBQUQsT0FBQTtBQUNBLE1BQUFFLFlBQUEsR0FBQUYsT0FBQTtBQUNBLE1BQUFHLGNBQUEsR0FBQUgsT0FBQTtBQVFBLE1BQWFJLGtCQUFtQixTQUFRUCxPQUFBLENBQUFRLE9BQUssQ0FBQ0MsU0FBbUM7RUFDL0VDLE1BQU1BLENBQUE7SUFDSixNQUFNO01BQUVDLGNBQWM7TUFBRUMsaUJBQWlCO01BQUVDO0lBQXdCLENBQUUsR0FBRyxJQUFJLENBQUNDLEtBQUs7SUFDbEYsT0FDRWQsT0FBQSxDQUFBUSxPQUFBLENBQUFPLGFBQUEsY0FDRWYsT0FBQSxDQUFBUSxPQUFBLENBQUFPLGFBQUEs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